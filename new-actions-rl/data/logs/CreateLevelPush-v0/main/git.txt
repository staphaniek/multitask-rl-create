ed09906ce33a6af77bef2e641a45f81306d2f1d4
diff --git a/main.py b/main.py
index 2619157..d0be0ad 100644
--- a/main.py
+++ b/main.py
@@ -7,14 +7,14 @@ from method.embedder.embedder import extract_dists
 from method.models.main_method import MainMethod
 from method.models.distance_method import DistanceMethod
 
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 
 from arguments import get_args
 from rlf import get_env_interface, RunSettings, run_policy
 
 import envs.recogym
-import envs.block_stack
+# import envs.block_stack
 import envs.interfaces
 import envs.create_game
 
diff --git a/method/dist_mem.py b/method/dist_mem.py
index 7da3bf1..fbd625d 100644
--- a/method/dist_mem.py
+++ b/method/dist_mem.py
@@ -261,7 +261,8 @@ class DistributionMemory(object):
     def load_distributions(self, load_file):
         path = osp.join('method/embedder/saved_distributions', load_file + '.emb')
         print('loading dists from ' + path)
-        ckpt = torch.load(path)
+        # ckpt = torch.load(path)
+        ckpt = torch.load(path, map_location=torch.device('cpu'))
 
         self.mem = ckpt['mem']
         self.mem_keys = ckpt['mem_keys']
diff --git a/method/embedder/embedder.py b/method/embedder/embedder.py
index 4d2dc0e..08e3297 100644
--- a/method/embedder/embedder.py
+++ b/method/embedder/embedder.py
@@ -23,8 +23,8 @@ import sys
 import os
 import os.path as osp
 from tqdm import tqdm
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 from rlf.rl import utils
 
 from torch.utils import data
diff --git a/requirements.txt b/requirements.txt
index 4cc4255..fcc248a 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,13 +1,14 @@
-absl-py==0.8.0
+absl-py
 argh==0.26.2
 astor==0.8.0
 backports.tempfile==1.0
 backports.weakref==1.0.post1
-cffi==1.12.3
+cffi
 chardet==3.0.4
 Click==7.0
+cloudpickle==3.0.0
 cycler==0.10.0
-Cython==0.29.13
+Cython<3
 decorator==4.4.0
 docker-pycreds==0.4.0
 future==0.17.1
@@ -18,60 +19,60 @@ glfw==1.8.3
 google-pasta==0.1.7
 gql==0.1.0
 graphql-core==2.2.1
-grpcio==1.24.0
+grpcio==1.59.3
 gym==0.10.8
-h5py==2.10.0
+h5py
 idna==2.8
-imageio==2.4.1
-joblib==0.13.2
+imageio==2.9.0
+joblib==1.3.2
 Keras-Applications==1.0.8
 Keras-Preprocessing==1.1.0
 kiwisolver==1.1.0
 libtmux==0.8.1
 lockfile==0.12.2
 Markdown==3.1.1
-matplotlib==3.1.2
+matplotlib==3.4
 moviepy==1.0.1
-mujoco-py==2.0.2.5
-numpy==1.15.2
+free-mujoco-py
+numpy==1.24.4
 nvidia-ml-py3==7.352.0
-opencv-python==4.0.0.21
-pandas==0.24.2
+opencv-python==4.9.0.80
+pandas==1.3.5
 pathtools==0.1.2
-Pillow==6.1.0
+Pillow==6.2.0
 promise==2.2.1
-protobuf==3.9.2
+protobuf==3.20.3
 psutil==5.6.3
 pycparser==2.19
-pygame==1.9.6
+pygame
 pyglet==1.4.4
-pymunk==5.4.2
+pymunk==6.6.0
 pyparsing==2.4.2
-PyQt5==5.13.2
-PyQt5-sip==12.7.0
+PyQt5==5.15.10
+PyQt5-sip==12.13.0
 python-dateutil==2.8.0
 pytz==2019.2
-PyYAML==5.1.2
+PyYAML
 requests==2.22.0
 Rx==1.6.1
-scikit-learn==0.21.3
-scipy==1.3.1
-seaborn==0.10.0
+scikit-learn
+scipy
+seaborn==0.13.2
 sentry-sdk==0.12.2
 shortuuid==0.5.0
 six==1.12.0
 sklearn==0.0
 smmap2==2.0.5
 subprocess32==3.5.4
-tensorboard==1.14.0
+tensorboard==2.13.0
 tensorboardX==1.8
-tensorflow==1.14.0
-tensorflow-estimator==1.14.0
+tensorflow==2.13.0rc0
+tensorflow-estimator
 termcolor==1.1.0
-torch==1.2.0
+torch
 tqdm==4.36.1
 urllib3==1.25.6
 wandb==0.8.3
 watchdog==0.9.0
-Werkzeug==0.16.0
+Werkzeug==1.0.1
 wrapt==1.11.2
diff --git a/rlf/baselines/vec_env/shmem_vec_env.py b/rlf/baselines/vec_env/shmem_vec_env.py
index 7a4d78d..4d9fa7c 100644
--- a/rlf/baselines/vec_env/shmem_vec_env.py
+++ b/rlf/baselines/vec_env/shmem_vec_env.py
@@ -14,7 +14,7 @@ _NP_TO_CT = {np.float32: ctypes.c_float,
              np.int32: ctypes.c_int32,
              np.int8: ctypes.c_int8,
              np.uint8: ctypes.c_char,
-             np.bool: ctypes.c_bool}
+             np.bool_: ctypes.c_bool}
 
 
 class ShmemVecEnv(VecEnv):
ed09906ce33a6af77bef2e641a45f81306d2f1d4
diff --git a/main.py b/main.py
index 2619157..d0be0ad 100644
--- a/main.py
+++ b/main.py
@@ -7,14 +7,14 @@ from method.embedder.embedder import extract_dists
 from method.models.main_method import MainMethod
 from method.models.distance_method import DistanceMethod
 
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 
 from arguments import get_args
 from rlf import get_env_interface, RunSettings, run_policy
 
 import envs.recogym
-import envs.block_stack
+# import envs.block_stack
 import envs.interfaces
 import envs.create_game
 
diff --git a/method/dist_mem.py b/method/dist_mem.py
index 7da3bf1..fbd625d 100644
--- a/method/dist_mem.py
+++ b/method/dist_mem.py
@@ -261,7 +261,8 @@ class DistributionMemory(object):
     def load_distributions(self, load_file):
         path = osp.join('method/embedder/saved_distributions', load_file + '.emb')
         print('loading dists from ' + path)
-        ckpt = torch.load(path)
+        # ckpt = torch.load(path)
+        ckpt = torch.load(path, map_location=torch.device('cpu'))
 
         self.mem = ckpt['mem']
         self.mem_keys = ckpt['mem_keys']
diff --git a/method/embedder/embedder.py b/method/embedder/embedder.py
index 4d2dc0e..08e3297 100644
--- a/method/embedder/embedder.py
+++ b/method/embedder/embedder.py
@@ -23,8 +23,8 @@ import sys
 import os
 import os.path as osp
 from tqdm import tqdm
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 from rlf.rl import utils
 
 from torch.utils import data
diff --git a/requirements.txt b/requirements.txt
index 4cc4255..fcc248a 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,13 +1,14 @@
-absl-py==0.8.0
+absl-py
 argh==0.26.2
 astor==0.8.0
 backports.tempfile==1.0
 backports.weakref==1.0.post1
-cffi==1.12.3
+cffi
 chardet==3.0.4
 Click==7.0
+cloudpickle==3.0.0
 cycler==0.10.0
-Cython==0.29.13
+Cython<3
 decorator==4.4.0
 docker-pycreds==0.4.0
 future==0.17.1
@@ -18,60 +19,60 @@ glfw==1.8.3
 google-pasta==0.1.7
 gql==0.1.0
 graphql-core==2.2.1
-grpcio==1.24.0
+grpcio==1.59.3
 gym==0.10.8
-h5py==2.10.0
+h5py
 idna==2.8
-imageio==2.4.1
-joblib==0.13.2
+imageio==2.9.0
+joblib==1.3.2
 Keras-Applications==1.0.8
 Keras-Preprocessing==1.1.0
 kiwisolver==1.1.0
 libtmux==0.8.1
 lockfile==0.12.2
 Markdown==3.1.1
-matplotlib==3.1.2
+matplotlib==3.4
 moviepy==1.0.1
-mujoco-py==2.0.2.5
-numpy==1.15.2
+free-mujoco-py
+numpy==1.24.4
 nvidia-ml-py3==7.352.0
-opencv-python==4.0.0.21
-pandas==0.24.2
+opencv-python==4.9.0.80
+pandas==1.3.5
 pathtools==0.1.2
-Pillow==6.1.0
+Pillow==6.2.0
 promise==2.2.1
-protobuf==3.9.2
+protobuf==3.20.3
 psutil==5.6.3
 pycparser==2.19
-pygame==1.9.6
+pygame
 pyglet==1.4.4
-pymunk==5.4.2
+pymunk==6.6.0
 pyparsing==2.4.2
-PyQt5==5.13.2
-PyQt5-sip==12.7.0
+PyQt5==5.15.10
+PyQt5-sip==12.13.0
 python-dateutil==2.8.0
 pytz==2019.2
-PyYAML==5.1.2
+PyYAML
 requests==2.22.0
 Rx==1.6.1
-scikit-learn==0.21.3
-scipy==1.3.1
-seaborn==0.10.0
+scikit-learn
+scipy
+seaborn==0.13.2
 sentry-sdk==0.12.2
 shortuuid==0.5.0
 six==1.12.0
 sklearn==0.0
 smmap2==2.0.5
 subprocess32==3.5.4
-tensorboard==1.14.0
+tensorboard==2.13.0
 tensorboardX==1.8
-tensorflow==1.14.0
-tensorflow-estimator==1.14.0
+tensorflow==2.13.0rc0
+tensorflow-estimator
 termcolor==1.1.0
-torch==1.2.0
+torch
 tqdm==4.36.1
 urllib3==1.25.6
 wandb==0.8.3
 watchdog==0.9.0
-Werkzeug==0.16.0
+Werkzeug==1.0.1
 wrapt==1.11.2
diff --git a/rlf/baselines/vec_env/shmem_vec_env.py b/rlf/baselines/vec_env/shmem_vec_env.py
index 7a4d78d..4d9fa7c 100644
--- a/rlf/baselines/vec_env/shmem_vec_env.py
+++ b/rlf/baselines/vec_env/shmem_vec_env.py
@@ -14,7 +14,7 @@ _NP_TO_CT = {np.float32: ctypes.c_float,
              np.int32: ctypes.c_int32,
              np.int8: ctypes.c_int8,
              np.uint8: ctypes.c_char,
-             np.bool: ctypes.c_bool}
+             np.bool_: ctypes.c_bool}
 
 
 class ShmemVecEnv(VecEnv):
ed09906ce33a6af77bef2e641a45f81306d2f1d4
diff --git a/main.py b/main.py
index 2619157..d0be0ad 100644
--- a/main.py
+++ b/main.py
@@ -7,14 +7,14 @@ from method.embedder.embedder import extract_dists
 from method.models.main_method import MainMethod
 from method.models.distance_method import DistanceMethod
 
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 
 from arguments import get_args
 from rlf import get_env_interface, RunSettings, run_policy
 
 import envs.recogym
-import envs.block_stack
+# import envs.block_stack
 import envs.interfaces
 import envs.create_game
 
diff --git a/method/dist_mem.py b/method/dist_mem.py
index 7da3bf1..fbd625d 100644
--- a/method/dist_mem.py
+++ b/method/dist_mem.py
@@ -261,7 +261,8 @@ class DistributionMemory(object):
     def load_distributions(self, load_file):
         path = osp.join('method/embedder/saved_distributions', load_file + '.emb')
         print('loading dists from ' + path)
-        ckpt = torch.load(path)
+        # ckpt = torch.load(path)
+        ckpt = torch.load(path, map_location=torch.device('cpu'))
 
         self.mem = ckpt['mem']
         self.mem_keys = ckpt['mem_keys']
diff --git a/method/embedder/embedder.py b/method/embedder/embedder.py
index 4d2dc0e..08e3297 100644
--- a/method/embedder/embedder.py
+++ b/method/embedder/embedder.py
@@ -23,8 +23,8 @@ import sys
 import os
 import os.path as osp
 from tqdm import tqdm
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 from rlf.rl import utils
 
 from torch.utils import data
diff --git a/requirements.txt b/requirements.txt
index 4cc4255..fcc248a 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,13 +1,14 @@
-absl-py==0.8.0
+absl-py
 argh==0.26.2
 astor==0.8.0
 backports.tempfile==1.0
 backports.weakref==1.0.post1
-cffi==1.12.3
+cffi
 chardet==3.0.4
 Click==7.0
+cloudpickle==3.0.0
 cycler==0.10.0
-Cython==0.29.13
+Cython<3
 decorator==4.4.0
 docker-pycreds==0.4.0
 future==0.17.1
@@ -18,60 +19,60 @@ glfw==1.8.3
 google-pasta==0.1.7
 gql==0.1.0
 graphql-core==2.2.1
-grpcio==1.24.0
+grpcio==1.59.3
 gym==0.10.8
-h5py==2.10.0
+h5py
 idna==2.8
-imageio==2.4.1
-joblib==0.13.2
+imageio==2.9.0
+joblib==1.3.2
 Keras-Applications==1.0.8
 Keras-Preprocessing==1.1.0
 kiwisolver==1.1.0
 libtmux==0.8.1
 lockfile==0.12.2
 Markdown==3.1.1
-matplotlib==3.1.2
+matplotlib==3.4
 moviepy==1.0.1
-mujoco-py==2.0.2.5
-numpy==1.15.2
+free-mujoco-py
+numpy==1.24.4
 nvidia-ml-py3==7.352.0
-opencv-python==4.0.0.21
-pandas==0.24.2
+opencv-python==4.9.0.80
+pandas==1.3.5
 pathtools==0.1.2
-Pillow==6.1.0
+Pillow==6.2.0
 promise==2.2.1
-protobuf==3.9.2
+protobuf==3.20.3
 psutil==5.6.3
 pycparser==2.19
-pygame==1.9.6
+pygame
 pyglet==1.4.4
-pymunk==5.4.2
+pymunk==6.6.0
 pyparsing==2.4.2
-PyQt5==5.13.2
-PyQt5-sip==12.7.0
+PyQt5==5.15.10
+PyQt5-sip==12.13.0
 python-dateutil==2.8.0
 pytz==2019.2
-PyYAML==5.1.2
+PyYAML
 requests==2.22.0
 Rx==1.6.1
-scikit-learn==0.21.3
-scipy==1.3.1
-seaborn==0.10.0
+scikit-learn
+scipy
+seaborn==0.13.2
 sentry-sdk==0.12.2
 shortuuid==0.5.0
 six==1.12.0
 sklearn==0.0
 smmap2==2.0.5
 subprocess32==3.5.4
-tensorboard==1.14.0
+tensorboard==2.13.0
 tensorboardX==1.8
-tensorflow==1.14.0
-tensorflow-estimator==1.14.0
+tensorflow==2.13.0rc0
+tensorflow-estimator
 termcolor==1.1.0
-torch==1.2.0
+torch
 tqdm==4.36.1
 urllib3==1.25.6
 wandb==0.8.3
 watchdog==0.9.0
-Werkzeug==0.16.0
+Werkzeug==1.0.1
 wrapt==1.11.2
diff --git a/rlf/baselines/vec_env/shmem_vec_env.py b/rlf/baselines/vec_env/shmem_vec_env.py
index 7a4d78d..4d9fa7c 100644
--- a/rlf/baselines/vec_env/shmem_vec_env.py
+++ b/rlf/baselines/vec_env/shmem_vec_env.py
@@ -14,7 +14,7 @@ _NP_TO_CT = {np.float32: ctypes.c_float,
              np.int32: ctypes.c_int32,
              np.int8: ctypes.c_int8,
              np.uint8: ctypes.c_char,
-             np.bool: ctypes.c_bool}
+             np.bool_: ctypes.c_bool}
 
 
 class ShmemVecEnv(VecEnv):
ed09906ce33a6af77bef2e641a45f81306d2f1d4
diff --git a/main.py b/main.py
index 2619157..d0be0ad 100644
--- a/main.py
+++ b/main.py
@@ -7,14 +7,14 @@ from method.embedder.embedder import extract_dists
 from method.models.main_method import MainMethod
 from method.models.distance_method import DistanceMethod
 
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 
 from arguments import get_args
 from rlf import get_env_interface, RunSettings, run_policy
 
 import envs.recogym
-import envs.block_stack
+# import envs.block_stack
 import envs.interfaces
 import envs.create_game
 
diff --git a/method/dist_mem.py b/method/dist_mem.py
index 7da3bf1..fbd625d 100644
--- a/method/dist_mem.py
+++ b/method/dist_mem.py
@@ -261,7 +261,8 @@ class DistributionMemory(object):
     def load_distributions(self, load_file):
         path = osp.join('method/embedder/saved_distributions', load_file + '.emb')
         print('loading dists from ' + path)
-        ckpt = torch.load(path)
+        # ckpt = torch.load(path)
+        ckpt = torch.load(path, map_location=torch.device('cpu'))
 
         self.mem = ckpt['mem']
         self.mem_keys = ckpt['mem_keys']
diff --git a/method/embedder/embedder.py b/method/embedder/embedder.py
index 4d2dc0e..08e3297 100644
--- a/method/embedder/embedder.py
+++ b/method/embedder/embedder.py
@@ -23,8 +23,8 @@ import sys
 import os
 import os.path as osp
 from tqdm import tqdm
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 from rlf.rl import utils
 
 from torch.utils import data
diff --git a/requirements.txt b/requirements.txt
index 4cc4255..fcc248a 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,13 +1,14 @@
-absl-py==0.8.0
+absl-py
 argh==0.26.2
 astor==0.8.0
 backports.tempfile==1.0
 backports.weakref==1.0.post1
-cffi==1.12.3
+cffi
 chardet==3.0.4
 Click==7.0
+cloudpickle==3.0.0
 cycler==0.10.0
-Cython==0.29.13
+Cython<3
 decorator==4.4.0
 docker-pycreds==0.4.0
 future==0.17.1
@@ -18,60 +19,60 @@ glfw==1.8.3
 google-pasta==0.1.7
 gql==0.1.0
 graphql-core==2.2.1
-grpcio==1.24.0
+grpcio==1.59.3
 gym==0.10.8
-h5py==2.10.0
+h5py
 idna==2.8
-imageio==2.4.1
-joblib==0.13.2
+imageio==2.9.0
+joblib==1.3.2
 Keras-Applications==1.0.8
 Keras-Preprocessing==1.1.0
 kiwisolver==1.1.0
 libtmux==0.8.1
 lockfile==0.12.2
 Markdown==3.1.1
-matplotlib==3.1.2
+matplotlib==3.4
 moviepy==1.0.1
-mujoco-py==2.0.2.5
-numpy==1.15.2
+free-mujoco-py
+numpy==1.24.4
 nvidia-ml-py3==7.352.0
-opencv-python==4.0.0.21
-pandas==0.24.2
+opencv-python==4.9.0.80
+pandas==1.3.5
 pathtools==0.1.2
-Pillow==6.1.0
+Pillow==6.2.0
 promise==2.2.1
-protobuf==3.9.2
+protobuf==3.20.3
 psutil==5.6.3
 pycparser==2.19
-pygame==1.9.6
+pygame
 pyglet==1.4.4
-pymunk==5.4.2
+pymunk==6.6.0
 pyparsing==2.4.2
-PyQt5==5.13.2
-PyQt5-sip==12.7.0
+PyQt5==5.15.10
+PyQt5-sip==12.13.0
 python-dateutil==2.8.0
 pytz==2019.2
-PyYAML==5.1.2
+PyYAML
 requests==2.22.0
 Rx==1.6.1
-scikit-learn==0.21.3
-scipy==1.3.1
-seaborn==0.10.0
+scikit-learn
+scipy
+seaborn==0.13.2
 sentry-sdk==0.12.2
 shortuuid==0.5.0
 six==1.12.0
 sklearn==0.0
 smmap2==2.0.5
 subprocess32==3.5.4
-tensorboard==1.14.0
+tensorboard==2.13.0
 tensorboardX==1.8
-tensorflow==1.14.0
-tensorflow-estimator==1.14.0
+tensorflow==2.13.0rc0
+tensorflow-estimator
 termcolor==1.1.0
-torch==1.2.0
+torch
 tqdm==4.36.1
 urllib3==1.25.6
 wandb==0.8.3
 watchdog==0.9.0
-Werkzeug==0.16.0
+Werkzeug==1.0.1
 wrapt==1.11.2
diff --git a/rlf/baselines/vec_env/shmem_vec_env.py b/rlf/baselines/vec_env/shmem_vec_env.py
index 7a4d78d..4d9fa7c 100644
--- a/rlf/baselines/vec_env/shmem_vec_env.py
+++ b/rlf/baselines/vec_env/shmem_vec_env.py
@@ -14,7 +14,7 @@ _NP_TO_CT = {np.float32: ctypes.c_float,
              np.int32: ctypes.c_int32,
              np.int8: ctypes.c_int8,
              np.uint8: ctypes.c_char,
-             np.bool: ctypes.c_bool}
+             np.bool_: ctypes.c_bool}
 
 
 class ShmemVecEnv(VecEnv):
diff --git a/rlf/main.py b/rlf/main.py
index dd7cd4f..dc304ee 100644
--- a/rlf/main.py
+++ b/rlf/main.py
@@ -95,6 +95,7 @@ def run_policy(run_settings):
     args.trajectory_len = None
     test_args.trajectory_len = None
 
+    print(args.num_processes)
     envs = make_vec_envs(args.env_name, args.seed, args.num_processes,
                          args.gamma, args.log_dir, args.device,
                          False, args.env_trans_fn, args)
ed09906ce33a6af77bef2e641a45f81306d2f1d4
diff --git a/arguments.py b/arguments.py
index dfc38fb..ec94316 100644
--- a/arguments.py
+++ b/arguments.py
@@ -14,7 +14,8 @@ def grid_args(args):
     set_if_none(args, 'exp_type', 'rnd')
 
     set_if_none(args, 'onehot_state', True)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'sample_clusters', False)
     set_if_none(args, 'action_set_size', 50)
     set_if_none(args, 'test_action_set_size', 50)
@@ -49,7 +50,8 @@ def grid_play_args(args):
         args.n_trajectories = 672
 
     set_if_none(args, 'emb_epochs', 10000)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 16)
     set_if_none(args, 'z_dim', 16)
     set_if_none(args, 'onehot_state', True)
@@ -66,7 +68,8 @@ def grid_play_args(args):
 
 
 def create_args(args):
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
 
     set_if_none(args, 'exp_type', 'NewMain')
     set_if_none(args, 'sample_clusters', False)
@@ -124,15 +127,18 @@ def create_play_args(args):
         args.hidden_dim_option = 128
         args.prefix = 'VideoCreate'
 
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
     args.action_random_sample = False
 
 def stack_args(args):
     set_if_none(args, 'exp_type', 'rnd')
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'action_set_size', 20)
     set_if_none(args, 'test_action_set_size', 20)
     set_if_none(args, 'separate_skip', True)
@@ -172,7 +178,8 @@ def stack_play_args(args):
     set_if_none(args, 'exp_type', 'rnd')
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'emb_epochs', 5000)
 
     if args.train_embeddings and args.n_trajectories == 1024:
@@ -196,8 +203,10 @@ def reco_args(args):
         set_if_none(args, 'action_set_size', 25)
     else:
         set_if_none(args, 'action_set_size', 500)
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'num_eval', 20)
     set_if_none(args, 'entropy_coef', 1e-2)
     set_if_none(args, 'test_action_set_size', 50)
diff --git a/main.py b/main.py
index 2619157..d0be0ad 100644
--- a/main.py
+++ b/main.py
@@ -7,14 +7,14 @@ from method.embedder.embedder import extract_dists
 from method.models.main_method import MainMethod
 from method.models.distance_method import DistanceMethod
 
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 
 from arguments import get_args
 from rlf import get_env_interface, RunSettings, run_policy
 
 import envs.recogym
-import envs.block_stack
+# import envs.block_stack
 import envs.interfaces
 import envs.create_game
 
diff --git a/method/dist_mem.py b/method/dist_mem.py
index 7da3bf1..fbd625d 100644
--- a/method/dist_mem.py
+++ b/method/dist_mem.py
@@ -261,7 +261,8 @@ class DistributionMemory(object):
     def load_distributions(self, load_file):
         path = osp.join('method/embedder/saved_distributions', load_file + '.emb')
         print('loading dists from ' + path)
-        ckpt = torch.load(path)
+        # ckpt = torch.load(path)
+        ckpt = torch.load(path, map_location=torch.device('cpu'))
 
         self.mem = ckpt['mem']
         self.mem_keys = ckpt['mem_keys']
diff --git a/method/embedder/embedder.py b/method/embedder/embedder.py
index 4d2dc0e..08e3297 100644
--- a/method/embedder/embedder.py
+++ b/method/embedder/embedder.py
@@ -23,8 +23,8 @@ import sys
 import os
 import os.path as osp
 from tqdm import tqdm
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 from rlf.rl import utils
 
 from torch.utils import data
diff --git a/requirements.txt b/requirements.txt
index 4cc4255..fcc248a 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,13 +1,14 @@
-absl-py==0.8.0
+absl-py
 argh==0.26.2
 astor==0.8.0
 backports.tempfile==1.0
 backports.weakref==1.0.post1
-cffi==1.12.3
+cffi
 chardet==3.0.4
 Click==7.0
+cloudpickle==3.0.0
 cycler==0.10.0
-Cython==0.29.13
+Cython<3
 decorator==4.4.0
 docker-pycreds==0.4.0
 future==0.17.1
@@ -18,60 +19,60 @@ glfw==1.8.3
 google-pasta==0.1.7
 gql==0.1.0
 graphql-core==2.2.1
-grpcio==1.24.0
+grpcio==1.59.3
 gym==0.10.8
-h5py==2.10.0
+h5py
 idna==2.8
-imageio==2.4.1
-joblib==0.13.2
+imageio==2.9.0
+joblib==1.3.2
 Keras-Applications==1.0.8
 Keras-Preprocessing==1.1.0
 kiwisolver==1.1.0
 libtmux==0.8.1
 lockfile==0.12.2
 Markdown==3.1.1
-matplotlib==3.1.2
+matplotlib==3.4
 moviepy==1.0.1
-mujoco-py==2.0.2.5
-numpy==1.15.2
+free-mujoco-py
+numpy==1.24.4
 nvidia-ml-py3==7.352.0
-opencv-python==4.0.0.21
-pandas==0.24.2
+opencv-python==4.9.0.80
+pandas==1.3.5
 pathtools==0.1.2
-Pillow==6.1.0
+Pillow==6.2.0
 promise==2.2.1
-protobuf==3.9.2
+protobuf==3.20.3
 psutil==5.6.3
 pycparser==2.19
-pygame==1.9.6
+pygame
 pyglet==1.4.4
-pymunk==5.4.2
+pymunk==6.6.0
 pyparsing==2.4.2
-PyQt5==5.13.2
-PyQt5-sip==12.7.0
+PyQt5==5.15.10
+PyQt5-sip==12.13.0
 python-dateutil==2.8.0
 pytz==2019.2
-PyYAML==5.1.2
+PyYAML
 requests==2.22.0
 Rx==1.6.1
-scikit-learn==0.21.3
-scipy==1.3.1
-seaborn==0.10.0
+scikit-learn
+scipy
+seaborn==0.13.2
 sentry-sdk==0.12.2
 shortuuid==0.5.0
 six==1.12.0
 sklearn==0.0
 smmap2==2.0.5
 subprocess32==3.5.4
-tensorboard==1.14.0
+tensorboard==2.13.0
 tensorboardX==1.8
-tensorflow==1.14.0
-tensorflow-estimator==1.14.0
+tensorflow==2.13.0rc0
+tensorflow-estimator
 termcolor==1.1.0
-torch==1.2.0
+torch
 tqdm==4.36.1
 urllib3==1.25.6
 wandb==0.8.3
 watchdog==0.9.0
-Werkzeug==0.16.0
+Werkzeug==1.0.1
 wrapt==1.11.2
diff --git a/rlf/baselines/vec_env/shmem_vec_env.py b/rlf/baselines/vec_env/shmem_vec_env.py
index 7a4d78d..4d9fa7c 100644
--- a/rlf/baselines/vec_env/shmem_vec_env.py
+++ b/rlf/baselines/vec_env/shmem_vec_env.py
@@ -14,7 +14,7 @@ _NP_TO_CT = {np.float32: ctypes.c_float,
              np.int32: ctypes.c_int32,
              np.int8: ctypes.c_int8,
              np.uint8: ctypes.c_char,
-             np.bool: ctypes.c_bool}
+             np.bool_: ctypes.c_bool}
 
 
 class ShmemVecEnv(VecEnv):
diff --git a/rlf/main.py b/rlf/main.py
index dd7cd4f..dc304ee 100644
--- a/rlf/main.py
+++ b/rlf/main.py
@@ -95,6 +95,7 @@ def run_policy(run_settings):
     args.trajectory_len = None
     test_args.trajectory_len = None
 
+    print(args.num_processes)
     envs = make_vec_envs(args.env_name, args.seed, args.num_processes,
                          args.gamma, args.log_dir, args.device,
                          False, args.env_trans_fn, args)
ed09906ce33a6af77bef2e641a45f81306d2f1d4
diff --git a/arguments.py b/arguments.py
index dfc38fb..ec94316 100644
--- a/arguments.py
+++ b/arguments.py
@@ -14,7 +14,8 @@ def grid_args(args):
     set_if_none(args, 'exp_type', 'rnd')
 
     set_if_none(args, 'onehot_state', True)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'sample_clusters', False)
     set_if_none(args, 'action_set_size', 50)
     set_if_none(args, 'test_action_set_size', 50)
@@ -49,7 +50,8 @@ def grid_play_args(args):
         args.n_trajectories = 672
 
     set_if_none(args, 'emb_epochs', 10000)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 16)
     set_if_none(args, 'z_dim', 16)
     set_if_none(args, 'onehot_state', True)
@@ -66,7 +68,8 @@ def grid_play_args(args):
 
 
 def create_args(args):
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
 
     set_if_none(args, 'exp_type', 'NewMain')
     set_if_none(args, 'sample_clusters', False)
@@ -124,15 +127,18 @@ def create_play_args(args):
         args.hidden_dim_option = 128
         args.prefix = 'VideoCreate'
 
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
     args.action_random_sample = False
 
 def stack_args(args):
     set_if_none(args, 'exp_type', 'rnd')
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'action_set_size', 20)
     set_if_none(args, 'test_action_set_size', 20)
     set_if_none(args, 'separate_skip', True)
@@ -172,7 +178,8 @@ def stack_play_args(args):
     set_if_none(args, 'exp_type', 'rnd')
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'emb_epochs', 5000)
 
     if args.train_embeddings and args.n_trajectories == 1024:
@@ -196,8 +203,10 @@ def reco_args(args):
         set_if_none(args, 'action_set_size', 25)
     else:
         set_if_none(args, 'action_set_size', 500)
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'num_eval', 20)
     set_if_none(args, 'entropy_coef', 1e-2)
     set_if_none(args, 'test_action_set_size', 50)
diff --git a/main.py b/main.py
index 2619157..d0be0ad 100644
--- a/main.py
+++ b/main.py
@@ -7,14 +7,14 @@ from method.embedder.embedder import extract_dists
 from method.models.main_method import MainMethod
 from method.models.distance_method import DistanceMethod
 
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 
 from arguments import get_args
 from rlf import get_env_interface, RunSettings, run_policy
 
 import envs.recogym
-import envs.block_stack
+# import envs.block_stack
 import envs.interfaces
 import envs.create_game
 
diff --git a/method/dist_mem.py b/method/dist_mem.py
index 7da3bf1..fbd625d 100644
--- a/method/dist_mem.py
+++ b/method/dist_mem.py
@@ -261,7 +261,8 @@ class DistributionMemory(object):
     def load_distributions(self, load_file):
         path = osp.join('method/embedder/saved_distributions', load_file + '.emb')
         print('loading dists from ' + path)
-        ckpt = torch.load(path)
+        # ckpt = torch.load(path)
+        ckpt = torch.load(path, map_location=torch.device('cpu'))
 
         self.mem = ckpt['mem']
         self.mem_keys = ckpt['mem_keys']
diff --git a/method/embedder/embedder.py b/method/embedder/embedder.py
index 4d2dc0e..08e3297 100644
--- a/method/embedder/embedder.py
+++ b/method/embedder/embedder.py
@@ -23,8 +23,8 @@ import sys
 import os
 import os.path as osp
 from tqdm import tqdm
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 from rlf.rl import utils
 
 from torch.utils import data
diff --git a/requirements.txt b/requirements.txt
index 4cc4255..fcc248a 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,13 +1,14 @@
-absl-py==0.8.0
+absl-py
 argh==0.26.2
 astor==0.8.0
 backports.tempfile==1.0
 backports.weakref==1.0.post1
-cffi==1.12.3
+cffi
 chardet==3.0.4
 Click==7.0
+cloudpickle==3.0.0
 cycler==0.10.0
-Cython==0.29.13
+Cython<3
 decorator==4.4.0
 docker-pycreds==0.4.0
 future==0.17.1
@@ -18,60 +19,60 @@ glfw==1.8.3
 google-pasta==0.1.7
 gql==0.1.0
 graphql-core==2.2.1
-grpcio==1.24.0
+grpcio==1.59.3
 gym==0.10.8
-h5py==2.10.0
+h5py
 idna==2.8
-imageio==2.4.1
-joblib==0.13.2
+imageio==2.9.0
+joblib==1.3.2
 Keras-Applications==1.0.8
 Keras-Preprocessing==1.1.0
 kiwisolver==1.1.0
 libtmux==0.8.1
 lockfile==0.12.2
 Markdown==3.1.1
-matplotlib==3.1.2
+matplotlib==3.4
 moviepy==1.0.1
-mujoco-py==2.0.2.5
-numpy==1.15.2
+free-mujoco-py
+numpy==1.24.4
 nvidia-ml-py3==7.352.0
-opencv-python==4.0.0.21
-pandas==0.24.2
+opencv-python==4.9.0.80
+pandas==1.3.5
 pathtools==0.1.2
-Pillow==6.1.0
+Pillow==6.2.0
 promise==2.2.1
-protobuf==3.9.2
+protobuf==3.20.3
 psutil==5.6.3
 pycparser==2.19
-pygame==1.9.6
+pygame
 pyglet==1.4.4
-pymunk==5.4.2
+pymunk==6.6.0
 pyparsing==2.4.2
-PyQt5==5.13.2
-PyQt5-sip==12.7.0
+PyQt5==5.15.10
+PyQt5-sip==12.13.0
 python-dateutil==2.8.0
 pytz==2019.2
-PyYAML==5.1.2
+PyYAML
 requests==2.22.0
 Rx==1.6.1
-scikit-learn==0.21.3
-scipy==1.3.1
-seaborn==0.10.0
+scikit-learn
+scipy
+seaborn==0.13.2
 sentry-sdk==0.12.2
 shortuuid==0.5.0
 six==1.12.0
 sklearn==0.0
 smmap2==2.0.5
 subprocess32==3.5.4
-tensorboard==1.14.0
+tensorboard==2.13.0
 tensorboardX==1.8
-tensorflow==1.14.0
-tensorflow-estimator==1.14.0
+tensorflow==2.13.0rc0
+tensorflow-estimator
 termcolor==1.1.0
-torch==1.2.0
+torch
 tqdm==4.36.1
 urllib3==1.25.6
 wandb==0.8.3
 watchdog==0.9.0
-Werkzeug==0.16.0
+Werkzeug==1.0.1
 wrapt==1.11.2
diff --git a/rlf/baselines/vec_env/dummy_vec_env.py b/rlf/baselines/vec_env/dummy_vec_env.py
index 818bd53..4367f39 100644
--- a/rlf/baselines/vec_env/dummy_vec_env.py
+++ b/rlf/baselines/vec_env/dummy_vec_env.py
@@ -22,7 +22,7 @@ class DummyVecEnv(VecEnv):
         self.keys, shapes, dtypes = obs_space_info(obs_space)
 
         self.buf_obs = { k: np.zeros((self.num_envs,) + tuple(shapes[k]), dtype=dtypes[k]) for k in self.keys }
-        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool)
+        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool_)
         self.buf_rews  = np.zeros((self.num_envs,), dtype=np.float32)
         self.buf_infos = [{} for _ in range(self.num_envs)]
         self.actions = None
diff --git a/rlf/baselines/vec_env/shmem_vec_env.py b/rlf/baselines/vec_env/shmem_vec_env.py
index 7a4d78d..4d9fa7c 100644
--- a/rlf/baselines/vec_env/shmem_vec_env.py
+++ b/rlf/baselines/vec_env/shmem_vec_env.py
@@ -14,7 +14,7 @@ _NP_TO_CT = {np.float32: ctypes.c_float,
              np.int32: ctypes.c_int32,
              np.int8: ctypes.c_int8,
              np.uint8: ctypes.c_char,
-             np.bool: ctypes.c_bool}
+             np.bool_: ctypes.c_bool}
 
 
 class ShmemVecEnv(VecEnv):
diff --git a/rlf/main.py b/rlf/main.py
index dd7cd4f..dc304ee 100644
--- a/rlf/main.py
+++ b/rlf/main.py
@@ -95,6 +95,7 @@ def run_policy(run_settings):
     args.trajectory_len = None
     test_args.trajectory_len = None
 
+    print(args.num_processes)
     envs = make_vec_envs(args.env_name, args.seed, args.num_processes,
                          args.gamma, args.log_dir, args.device,
                          False, args.env_trans_fn, args)
ed09906ce33a6af77bef2e641a45f81306d2f1d4
diff --git a/arguments.py b/arguments.py
index dfc38fb..ec94316 100644
--- a/arguments.py
+++ b/arguments.py
@@ -14,7 +14,8 @@ def grid_args(args):
     set_if_none(args, 'exp_type', 'rnd')
 
     set_if_none(args, 'onehot_state', True)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'sample_clusters', False)
     set_if_none(args, 'action_set_size', 50)
     set_if_none(args, 'test_action_set_size', 50)
@@ -49,7 +50,8 @@ def grid_play_args(args):
         args.n_trajectories = 672
 
     set_if_none(args, 'emb_epochs', 10000)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 16)
     set_if_none(args, 'z_dim', 16)
     set_if_none(args, 'onehot_state', True)
@@ -66,7 +68,8 @@ def grid_play_args(args):
 
 
 def create_args(args):
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
 
     set_if_none(args, 'exp_type', 'NewMain')
     set_if_none(args, 'sample_clusters', False)
@@ -124,15 +127,18 @@ def create_play_args(args):
         args.hidden_dim_option = 128
         args.prefix = 'VideoCreate'
 
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
     args.action_random_sample = False
 
 def stack_args(args):
     set_if_none(args, 'exp_type', 'rnd')
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'action_set_size', 20)
     set_if_none(args, 'test_action_set_size', 20)
     set_if_none(args, 'separate_skip', True)
@@ -172,7 +178,8 @@ def stack_play_args(args):
     set_if_none(args, 'exp_type', 'rnd')
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'emb_epochs', 5000)
 
     if args.train_embeddings and args.n_trajectories == 1024:
@@ -196,8 +203,10 @@ def reco_args(args):
         set_if_none(args, 'action_set_size', 25)
     else:
         set_if_none(args, 'action_set_size', 500)
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'num_eval', 20)
     set_if_none(args, 'entropy_coef', 1e-2)
     set_if_none(args, 'test_action_set_size', 50)
diff --git a/envs/create_game/base_env.py b/envs/create_game/base_env.py
index 35ae827..e66b05d 100644
--- a/envs/create_game/base_env.py
+++ b/envs/create_game/base_env.py
@@ -123,8 +123,9 @@ class BaseEnv(gym.Env):
         Reset the environment
         """
         self._check_setup()
-        self.space.remove([*self.space.bodies, *self.space.shapes,
-                           *self.space.constraints])
+        # self.space.remove([*self.space.bodies, *self.space.shapes,
+        #                   *self.space.constraints])
+        self.space.remove([self.space.bodies, self.space.shapes, self.space.constraints])
 
         self.ball_traces = []
         self.line_traces = []
diff --git a/main.py b/main.py
index 2619157..d0be0ad 100644
--- a/main.py
+++ b/main.py
@@ -7,14 +7,14 @@ from method.embedder.embedder import extract_dists
 from method.models.main_method import MainMethod
 from method.models.distance_method import DistanceMethod
 
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 
 from arguments import get_args
 from rlf import get_env_interface, RunSettings, run_policy
 
 import envs.recogym
-import envs.block_stack
+# import envs.block_stack
 import envs.interfaces
 import envs.create_game
 
diff --git a/method/dist_mem.py b/method/dist_mem.py
index 7da3bf1..fbd625d 100644
--- a/method/dist_mem.py
+++ b/method/dist_mem.py
@@ -261,7 +261,8 @@ class DistributionMemory(object):
     def load_distributions(self, load_file):
         path = osp.join('method/embedder/saved_distributions', load_file + '.emb')
         print('loading dists from ' + path)
-        ckpt = torch.load(path)
+        # ckpt = torch.load(path)
+        ckpt = torch.load(path, map_location=torch.device('cpu'))
 
         self.mem = ckpt['mem']
         self.mem_keys = ckpt['mem_keys']
diff --git a/method/embedder/embedder.py b/method/embedder/embedder.py
index 4d2dc0e..08e3297 100644
--- a/method/embedder/embedder.py
+++ b/method/embedder/embedder.py
@@ -23,8 +23,8 @@ import sys
 import os
 import os.path as osp
 from tqdm import tqdm
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 from rlf.rl import utils
 
 from torch.utils import data
diff --git a/requirements.txt b/requirements.txt
index 4cc4255..fcc248a 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,13 +1,14 @@
-absl-py==0.8.0
+absl-py
 argh==0.26.2
 astor==0.8.0
 backports.tempfile==1.0
 backports.weakref==1.0.post1
-cffi==1.12.3
+cffi
 chardet==3.0.4
 Click==7.0
+cloudpickle==3.0.0
 cycler==0.10.0
-Cython==0.29.13
+Cython<3
 decorator==4.4.0
 docker-pycreds==0.4.0
 future==0.17.1
@@ -18,60 +19,60 @@ glfw==1.8.3
 google-pasta==0.1.7
 gql==0.1.0
 graphql-core==2.2.1
-grpcio==1.24.0
+grpcio==1.59.3
 gym==0.10.8
-h5py==2.10.0
+h5py
 idna==2.8
-imageio==2.4.1
-joblib==0.13.2
+imageio==2.9.0
+joblib==1.3.2
 Keras-Applications==1.0.8
 Keras-Preprocessing==1.1.0
 kiwisolver==1.1.0
 libtmux==0.8.1
 lockfile==0.12.2
 Markdown==3.1.1
-matplotlib==3.1.2
+matplotlib==3.4
 moviepy==1.0.1
-mujoco-py==2.0.2.5
-numpy==1.15.2
+free-mujoco-py
+numpy==1.24.4
 nvidia-ml-py3==7.352.0
-opencv-python==4.0.0.21
-pandas==0.24.2
+opencv-python==4.9.0.80
+pandas==1.3.5
 pathtools==0.1.2
-Pillow==6.1.0
+Pillow==6.2.0
 promise==2.2.1
-protobuf==3.9.2
+protobuf==3.20.3
 psutil==5.6.3
 pycparser==2.19
-pygame==1.9.6
+pygame
 pyglet==1.4.4
-pymunk==5.4.2
+pymunk==6.6.0
 pyparsing==2.4.2
-PyQt5==5.13.2
-PyQt5-sip==12.7.0
+PyQt5==5.15.10
+PyQt5-sip==12.13.0
 python-dateutil==2.8.0
 pytz==2019.2
-PyYAML==5.1.2
+PyYAML
 requests==2.22.0
 Rx==1.6.1
-scikit-learn==0.21.3
-scipy==1.3.1
-seaborn==0.10.0
+scikit-learn
+scipy
+seaborn==0.13.2
 sentry-sdk==0.12.2
 shortuuid==0.5.0
 six==1.12.0
 sklearn==0.0
 smmap2==2.0.5
 subprocess32==3.5.4
-tensorboard==1.14.0
+tensorboard==2.13.0
 tensorboardX==1.8
-tensorflow==1.14.0
-tensorflow-estimator==1.14.0
+tensorflow==2.13.0rc0
+tensorflow-estimator
 termcolor==1.1.0
-torch==1.2.0
+torch
 tqdm==4.36.1
 urllib3==1.25.6
 wandb==0.8.3
 watchdog==0.9.0
-Werkzeug==0.16.0
+Werkzeug==1.0.1
 wrapt==1.11.2
diff --git a/rlf/baselines/vec_env/dummy_vec_env.py b/rlf/baselines/vec_env/dummy_vec_env.py
index 818bd53..4367f39 100644
--- a/rlf/baselines/vec_env/dummy_vec_env.py
+++ b/rlf/baselines/vec_env/dummy_vec_env.py
@@ -22,7 +22,7 @@ class DummyVecEnv(VecEnv):
         self.keys, shapes, dtypes = obs_space_info(obs_space)
 
         self.buf_obs = { k: np.zeros((self.num_envs,) + tuple(shapes[k]), dtype=dtypes[k]) for k in self.keys }
-        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool)
+        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool_)
         self.buf_rews  = np.zeros((self.num_envs,), dtype=np.float32)
         self.buf_infos = [{} for _ in range(self.num_envs)]
         self.actions = None
diff --git a/rlf/baselines/vec_env/shmem_vec_env.py b/rlf/baselines/vec_env/shmem_vec_env.py
index 7a4d78d..4d9fa7c 100644
--- a/rlf/baselines/vec_env/shmem_vec_env.py
+++ b/rlf/baselines/vec_env/shmem_vec_env.py
@@ -14,7 +14,7 @@ _NP_TO_CT = {np.float32: ctypes.c_float,
              np.int32: ctypes.c_int32,
              np.int8: ctypes.c_int8,
              np.uint8: ctypes.c_char,
-             np.bool: ctypes.c_bool}
+             np.bool_: ctypes.c_bool}
 
 
 class ShmemVecEnv(VecEnv):
diff --git a/rlf/main.py b/rlf/main.py
index dd7cd4f..dc304ee 100644
--- a/rlf/main.py
+++ b/rlf/main.py
@@ -95,6 +95,7 @@ def run_policy(run_settings):
     args.trajectory_len = None
     test_args.trajectory_len = None
 
+    print(args.num_processes)
     envs = make_vec_envs(args.env_name, args.seed, args.num_processes,
                          args.gamma, args.log_dir, args.device,
                          False, args.env_trans_fn, args)
ed09906ce33a6af77bef2e641a45f81306d2f1d4
diff --git a/arguments.py b/arguments.py
index dfc38fb..ec94316 100644
--- a/arguments.py
+++ b/arguments.py
@@ -14,7 +14,8 @@ def grid_args(args):
     set_if_none(args, 'exp_type', 'rnd')
 
     set_if_none(args, 'onehot_state', True)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'sample_clusters', False)
     set_if_none(args, 'action_set_size', 50)
     set_if_none(args, 'test_action_set_size', 50)
@@ -49,7 +50,8 @@ def grid_play_args(args):
         args.n_trajectories = 672
 
     set_if_none(args, 'emb_epochs', 10000)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 16)
     set_if_none(args, 'z_dim', 16)
     set_if_none(args, 'onehot_state', True)
@@ -66,7 +68,8 @@ def grid_play_args(args):
 
 
 def create_args(args):
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
 
     set_if_none(args, 'exp_type', 'NewMain')
     set_if_none(args, 'sample_clusters', False)
@@ -124,15 +127,18 @@ def create_play_args(args):
         args.hidden_dim_option = 128
         args.prefix = 'VideoCreate'
 
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
     args.action_random_sample = False
 
 def stack_args(args):
     set_if_none(args, 'exp_type', 'rnd')
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'action_set_size', 20)
     set_if_none(args, 'test_action_set_size', 20)
     set_if_none(args, 'separate_skip', True)
@@ -172,7 +178,8 @@ def stack_play_args(args):
     set_if_none(args, 'exp_type', 'rnd')
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'emb_epochs', 5000)
 
     if args.train_embeddings and args.n_trajectories == 1024:
@@ -196,8 +203,10 @@ def reco_args(args):
         set_if_none(args, 'action_set_size', 25)
     else:
         set_if_none(args, 'action_set_size', 500)
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'num_eval', 20)
     set_if_none(args, 'entropy_coef', 1e-2)
     set_if_none(args, 'test_action_set_size', 50)
diff --git a/envs/create_game/base_env.py b/envs/create_game/base_env.py
index 35ae827..987066c 100644
--- a/envs/create_game/base_env.py
+++ b/envs/create_game/base_env.py
@@ -123,8 +123,9 @@ class BaseEnv(gym.Env):
         Reset the environment
         """
         self._check_setup()
-        self.space.remove([*self.space.bodies, *self.space.shapes,
-                           *self.space.constraints])
+        # self.space.remove([*self.space.bodies, *self.space.shapes,
+        #                   *self.space.constraints])
+        self.space.remove(*self.space.bodies, *self.space.shapes, *self.space.constraints)
 
         self.ball_traces = []
         self.line_traces = []
diff --git a/main.py b/main.py
index 2619157..d0be0ad 100644
--- a/main.py
+++ b/main.py
@@ -7,14 +7,14 @@ from method.embedder.embedder import extract_dists
 from method.models.main_method import MainMethod
 from method.models.distance_method import DistanceMethod
 
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 
 from arguments import get_args
 from rlf import get_env_interface, RunSettings, run_policy
 
 import envs.recogym
-import envs.block_stack
+# import envs.block_stack
 import envs.interfaces
 import envs.create_game
 
diff --git a/method/dist_mem.py b/method/dist_mem.py
index 7da3bf1..fbd625d 100644
--- a/method/dist_mem.py
+++ b/method/dist_mem.py
@@ -261,7 +261,8 @@ class DistributionMemory(object):
     def load_distributions(self, load_file):
         path = osp.join('method/embedder/saved_distributions', load_file + '.emb')
         print('loading dists from ' + path)
-        ckpt = torch.load(path)
+        # ckpt = torch.load(path)
+        ckpt = torch.load(path, map_location=torch.device('cpu'))
 
         self.mem = ckpt['mem']
         self.mem_keys = ckpt['mem_keys']
diff --git a/method/embedder/embedder.py b/method/embedder/embedder.py
index 4d2dc0e..08e3297 100644
--- a/method/embedder/embedder.py
+++ b/method/embedder/embedder.py
@@ -23,8 +23,8 @@ import sys
 import os
 import os.path as osp
 from tqdm import tqdm
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 from rlf.rl import utils
 
 from torch.utils import data
diff --git a/requirements.txt b/requirements.txt
index 4cc4255..fcc248a 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,13 +1,14 @@
-absl-py==0.8.0
+absl-py
 argh==0.26.2
 astor==0.8.0
 backports.tempfile==1.0
 backports.weakref==1.0.post1
-cffi==1.12.3
+cffi
 chardet==3.0.4
 Click==7.0
+cloudpickle==3.0.0
 cycler==0.10.0
-Cython==0.29.13
+Cython<3
 decorator==4.4.0
 docker-pycreds==0.4.0
 future==0.17.1
@@ -18,60 +19,60 @@ glfw==1.8.3
 google-pasta==0.1.7
 gql==0.1.0
 graphql-core==2.2.1
-grpcio==1.24.0
+grpcio==1.59.3
 gym==0.10.8
-h5py==2.10.0
+h5py
 idna==2.8
-imageio==2.4.1
-joblib==0.13.2
+imageio==2.9.0
+joblib==1.3.2
 Keras-Applications==1.0.8
 Keras-Preprocessing==1.1.0
 kiwisolver==1.1.0
 libtmux==0.8.1
 lockfile==0.12.2
 Markdown==3.1.1
-matplotlib==3.1.2
+matplotlib==3.4
 moviepy==1.0.1
-mujoco-py==2.0.2.5
-numpy==1.15.2
+free-mujoco-py
+numpy==1.24.4
 nvidia-ml-py3==7.352.0
-opencv-python==4.0.0.21
-pandas==0.24.2
+opencv-python==4.9.0.80
+pandas==1.3.5
 pathtools==0.1.2
-Pillow==6.1.0
+Pillow==6.2.0
 promise==2.2.1
-protobuf==3.9.2
+protobuf==3.20.3
 psutil==5.6.3
 pycparser==2.19
-pygame==1.9.6
+pygame
 pyglet==1.4.4
-pymunk==5.4.2
+pymunk==6.6.0
 pyparsing==2.4.2
-PyQt5==5.13.2
-PyQt5-sip==12.7.0
+PyQt5==5.15.10
+PyQt5-sip==12.13.0
 python-dateutil==2.8.0
 pytz==2019.2
-PyYAML==5.1.2
+PyYAML
 requests==2.22.0
 Rx==1.6.1
-scikit-learn==0.21.3
-scipy==1.3.1
-seaborn==0.10.0
+scikit-learn
+scipy
+seaborn==0.13.2
 sentry-sdk==0.12.2
 shortuuid==0.5.0
 six==1.12.0
 sklearn==0.0
 smmap2==2.0.5
 subprocess32==3.5.4
-tensorboard==1.14.0
+tensorboard==2.13.0
 tensorboardX==1.8
-tensorflow==1.14.0
-tensorflow-estimator==1.14.0
+tensorflow==2.13.0rc0
+tensorflow-estimator
 termcolor==1.1.0
-torch==1.2.0
+torch
 tqdm==4.36.1
 urllib3==1.25.6
 wandb==0.8.3
 watchdog==0.9.0
-Werkzeug==0.16.0
+Werkzeug==1.0.1
 wrapt==1.11.2
diff --git a/rlf/baselines/vec_env/dummy_vec_env.py b/rlf/baselines/vec_env/dummy_vec_env.py
index 818bd53..4367f39 100644
--- a/rlf/baselines/vec_env/dummy_vec_env.py
+++ b/rlf/baselines/vec_env/dummy_vec_env.py
@@ -22,7 +22,7 @@ class DummyVecEnv(VecEnv):
         self.keys, shapes, dtypes = obs_space_info(obs_space)
 
         self.buf_obs = { k: np.zeros((self.num_envs,) + tuple(shapes[k]), dtype=dtypes[k]) for k in self.keys }
-        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool)
+        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool_)
         self.buf_rews  = np.zeros((self.num_envs,), dtype=np.float32)
         self.buf_infos = [{} for _ in range(self.num_envs)]
         self.actions = None
diff --git a/rlf/baselines/vec_env/shmem_vec_env.py b/rlf/baselines/vec_env/shmem_vec_env.py
index 7a4d78d..4d9fa7c 100644
--- a/rlf/baselines/vec_env/shmem_vec_env.py
+++ b/rlf/baselines/vec_env/shmem_vec_env.py
@@ -14,7 +14,7 @@ _NP_TO_CT = {np.float32: ctypes.c_float,
              np.int32: ctypes.c_int32,
              np.int8: ctypes.c_int8,
              np.uint8: ctypes.c_char,
-             np.bool: ctypes.c_bool}
+             np.bool_: ctypes.c_bool}
 
 
 class ShmemVecEnv(VecEnv):
diff --git a/rlf/main.py b/rlf/main.py
index dd7cd4f..dc304ee 100644
--- a/rlf/main.py
+++ b/rlf/main.py
@@ -95,6 +95,7 @@ def run_policy(run_settings):
     args.trajectory_len = None
     test_args.trajectory_len = None
 
+    print(args.num_processes)
     envs = make_vec_envs(args.env_name, args.seed, args.num_processes,
                          args.gamma, args.log_dir, args.device,
                          False, args.env_trans_fn, args)
ed09906ce33a6af77bef2e641a45f81306d2f1d4
diff --git a/arguments.py b/arguments.py
index dfc38fb..ec94316 100644
--- a/arguments.py
+++ b/arguments.py
@@ -14,7 +14,8 @@ def grid_args(args):
     set_if_none(args, 'exp_type', 'rnd')
 
     set_if_none(args, 'onehot_state', True)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'sample_clusters', False)
     set_if_none(args, 'action_set_size', 50)
     set_if_none(args, 'test_action_set_size', 50)
@@ -49,7 +50,8 @@ def grid_play_args(args):
         args.n_trajectories = 672
 
     set_if_none(args, 'emb_epochs', 10000)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 16)
     set_if_none(args, 'z_dim', 16)
     set_if_none(args, 'onehot_state', True)
@@ -66,7 +68,8 @@ def grid_play_args(args):
 
 
 def create_args(args):
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
 
     set_if_none(args, 'exp_type', 'NewMain')
     set_if_none(args, 'sample_clusters', False)
@@ -124,15 +127,18 @@ def create_play_args(args):
         args.hidden_dim_option = 128
         args.prefix = 'VideoCreate'
 
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
     args.action_random_sample = False
 
 def stack_args(args):
     set_if_none(args, 'exp_type', 'rnd')
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'action_set_size', 20)
     set_if_none(args, 'test_action_set_size', 20)
     set_if_none(args, 'separate_skip', True)
@@ -172,7 +178,8 @@ def stack_play_args(args):
     set_if_none(args, 'exp_type', 'rnd')
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'emb_epochs', 5000)
 
     if args.train_embeddings and args.n_trajectories == 1024:
@@ -196,8 +203,10 @@ def reco_args(args):
         set_if_none(args, 'action_set_size', 25)
     else:
         set_if_none(args, 'action_set_size', 500)
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'num_eval', 20)
     set_if_none(args, 'entropy_coef', 1e-2)
     set_if_none(args, 'test_action_set_size', 50)
diff --git a/envs/create_game/base_env.py b/envs/create_game/base_env.py
index 35ae827..987066c 100644
--- a/envs/create_game/base_env.py
+++ b/envs/create_game/base_env.py
@@ -123,8 +123,9 @@ class BaseEnv(gym.Env):
         Reset the environment
         """
         self._check_setup()
-        self.space.remove([*self.space.bodies, *self.space.shapes,
-                           *self.space.constraints])
+        # self.space.remove([*self.space.bodies, *self.space.shapes,
+        #                   *self.space.constraints])
+        self.space.remove(*self.space.bodies, *self.space.shapes, *self.space.constraints)
 
         self.ball_traces = []
         self.line_traces = []
diff --git a/envs/create_game/tools/poly.py b/envs/create_game/tools/poly.py
index e875ef5..cb6b009 100644
--- a/envs/create_game/tools/poly.py
+++ b/envs/create_game/tools/poly.py
@@ -14,7 +14,7 @@ class FixedPoly(FixedObj):
         self.body = self._create_body(mass, moment)
         self.body.position = pm.Vec2d(pos[0], pos[1])
 
-        self.vertices = self.get_vertices(pm.Vec2d([0., 0.]), n_sides, angle, size)
+        self.vertices = self.get_vertices(pm.Vec2d(0., 0.), n_sides, angle, size)
 
         self.shape = pm.Poly(self.body, self.vertices)
         self.shape.friction = friction
diff --git a/main.py b/main.py
index 2619157..d0be0ad 100644
--- a/main.py
+++ b/main.py
@@ -7,14 +7,14 @@ from method.embedder.embedder import extract_dists
 from method.models.main_method import MainMethod
 from method.models.distance_method import DistanceMethod
 
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 
 from arguments import get_args
 from rlf import get_env_interface, RunSettings, run_policy
 
 import envs.recogym
-import envs.block_stack
+# import envs.block_stack
 import envs.interfaces
 import envs.create_game
 
diff --git a/method/dist_mem.py b/method/dist_mem.py
index 7da3bf1..fbd625d 100644
--- a/method/dist_mem.py
+++ b/method/dist_mem.py
@@ -261,7 +261,8 @@ class DistributionMemory(object):
     def load_distributions(self, load_file):
         path = osp.join('method/embedder/saved_distributions', load_file + '.emb')
         print('loading dists from ' + path)
-        ckpt = torch.load(path)
+        # ckpt = torch.load(path)
+        ckpt = torch.load(path, map_location=torch.device('cpu'))
 
         self.mem = ckpt['mem']
         self.mem_keys = ckpt['mem_keys']
diff --git a/method/embedder/embedder.py b/method/embedder/embedder.py
index 4d2dc0e..08e3297 100644
--- a/method/embedder/embedder.py
+++ b/method/embedder/embedder.py
@@ -23,8 +23,8 @@ import sys
 import os
 import os.path as osp
 from tqdm import tqdm
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 from rlf.rl import utils
 
 from torch.utils import data
diff --git a/requirements.txt b/requirements.txt
index 4cc4255..fcc248a 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,13 +1,14 @@
-absl-py==0.8.0
+absl-py
 argh==0.26.2
 astor==0.8.0
 backports.tempfile==1.0
 backports.weakref==1.0.post1
-cffi==1.12.3
+cffi
 chardet==3.0.4
 Click==7.0
+cloudpickle==3.0.0
 cycler==0.10.0
-Cython==0.29.13
+Cython<3
 decorator==4.4.0
 docker-pycreds==0.4.0
 future==0.17.1
@@ -18,60 +19,60 @@ glfw==1.8.3
 google-pasta==0.1.7
 gql==0.1.0
 graphql-core==2.2.1
-grpcio==1.24.0
+grpcio==1.59.3
 gym==0.10.8
-h5py==2.10.0
+h5py
 idna==2.8
-imageio==2.4.1
-joblib==0.13.2
+imageio==2.9.0
+joblib==1.3.2
 Keras-Applications==1.0.8
 Keras-Preprocessing==1.1.0
 kiwisolver==1.1.0
 libtmux==0.8.1
 lockfile==0.12.2
 Markdown==3.1.1
-matplotlib==3.1.2
+matplotlib==3.4
 moviepy==1.0.1
-mujoco-py==2.0.2.5
-numpy==1.15.2
+free-mujoco-py
+numpy==1.24.4
 nvidia-ml-py3==7.352.0
-opencv-python==4.0.0.21
-pandas==0.24.2
+opencv-python==4.9.0.80
+pandas==1.3.5
 pathtools==0.1.2
-Pillow==6.1.0
+Pillow==6.2.0
 promise==2.2.1
-protobuf==3.9.2
+protobuf==3.20.3
 psutil==5.6.3
 pycparser==2.19
-pygame==1.9.6
+pygame
 pyglet==1.4.4
-pymunk==5.4.2
+pymunk==6.6.0
 pyparsing==2.4.2
-PyQt5==5.13.2
-PyQt5-sip==12.7.0
+PyQt5==5.15.10
+PyQt5-sip==12.13.0
 python-dateutil==2.8.0
 pytz==2019.2
-PyYAML==5.1.2
+PyYAML
 requests==2.22.0
 Rx==1.6.1
-scikit-learn==0.21.3
-scipy==1.3.1
-seaborn==0.10.0
+scikit-learn
+scipy
+seaborn==0.13.2
 sentry-sdk==0.12.2
 shortuuid==0.5.0
 six==1.12.0
 sklearn==0.0
 smmap2==2.0.5
 subprocess32==3.5.4
-tensorboard==1.14.0
+tensorboard==2.13.0
 tensorboardX==1.8
-tensorflow==1.14.0
-tensorflow-estimator==1.14.0
+tensorflow==2.13.0rc0
+tensorflow-estimator
 termcolor==1.1.0
-torch==1.2.0
+torch
 tqdm==4.36.1
 urllib3==1.25.6
 wandb==0.8.3
 watchdog==0.9.0
-Werkzeug==0.16.0
+Werkzeug==1.0.1
 wrapt==1.11.2
diff --git a/rlf/baselines/vec_env/dummy_vec_env.py b/rlf/baselines/vec_env/dummy_vec_env.py
index 818bd53..4367f39 100644
--- a/rlf/baselines/vec_env/dummy_vec_env.py
+++ b/rlf/baselines/vec_env/dummy_vec_env.py
@@ -22,7 +22,7 @@ class DummyVecEnv(VecEnv):
         self.keys, shapes, dtypes = obs_space_info(obs_space)
 
         self.buf_obs = { k: np.zeros((self.num_envs,) + tuple(shapes[k]), dtype=dtypes[k]) for k in self.keys }
-        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool)
+        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool_)
         self.buf_rews  = np.zeros((self.num_envs,), dtype=np.float32)
         self.buf_infos = [{} for _ in range(self.num_envs)]
         self.actions = None
diff --git a/rlf/baselines/vec_env/shmem_vec_env.py b/rlf/baselines/vec_env/shmem_vec_env.py
index 7a4d78d..4d9fa7c 100644
--- a/rlf/baselines/vec_env/shmem_vec_env.py
+++ b/rlf/baselines/vec_env/shmem_vec_env.py
@@ -14,7 +14,7 @@ _NP_TO_CT = {np.float32: ctypes.c_float,
              np.int32: ctypes.c_int32,
              np.int8: ctypes.c_int8,
              np.uint8: ctypes.c_char,
-             np.bool: ctypes.c_bool}
+             np.bool_: ctypes.c_bool}
 
 
 class ShmemVecEnv(VecEnv):
diff --git a/rlf/main.py b/rlf/main.py
index dd7cd4f..dc304ee 100644
--- a/rlf/main.py
+++ b/rlf/main.py
@@ -95,6 +95,7 @@ def run_policy(run_settings):
     args.trajectory_len = None
     test_args.trajectory_len = None
 
+    print(args.num_processes)
     envs = make_vec_envs(args.env_name, args.seed, args.num_processes,
                          args.gamma, args.log_dir, args.device,
                          False, args.env_trans_fn, args)
ed09906ce33a6af77bef2e641a45f81306d2f1d4
diff --git a/arguments.py b/arguments.py
index dfc38fb..ec94316 100644
--- a/arguments.py
+++ b/arguments.py
@@ -14,7 +14,8 @@ def grid_args(args):
     set_if_none(args, 'exp_type', 'rnd')
 
     set_if_none(args, 'onehot_state', True)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'sample_clusters', False)
     set_if_none(args, 'action_set_size', 50)
     set_if_none(args, 'test_action_set_size', 50)
@@ -49,7 +50,8 @@ def grid_play_args(args):
         args.n_trajectories = 672
 
     set_if_none(args, 'emb_epochs', 10000)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 16)
     set_if_none(args, 'z_dim', 16)
     set_if_none(args, 'onehot_state', True)
@@ -66,7 +68,8 @@ def grid_play_args(args):
 
 
 def create_args(args):
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
 
     set_if_none(args, 'exp_type', 'NewMain')
     set_if_none(args, 'sample_clusters', False)
@@ -124,15 +127,18 @@ def create_play_args(args):
         args.hidden_dim_option = 128
         args.prefix = 'VideoCreate'
 
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
     args.action_random_sample = False
 
 def stack_args(args):
     set_if_none(args, 'exp_type', 'rnd')
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'action_set_size', 20)
     set_if_none(args, 'test_action_set_size', 20)
     set_if_none(args, 'separate_skip', True)
@@ -172,7 +178,8 @@ def stack_play_args(args):
     set_if_none(args, 'exp_type', 'rnd')
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'emb_epochs', 5000)
 
     if args.train_embeddings and args.n_trajectories == 1024:
@@ -196,8 +203,10 @@ def reco_args(args):
         set_if_none(args, 'action_set_size', 25)
     else:
         set_if_none(args, 'action_set_size', 500)
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'num_eval', 20)
     set_if_none(args, 'entropy_coef', 1e-2)
     set_if_none(args, 'test_action_set_size', 50)
diff --git a/envs/create_game/base_env.py b/envs/create_game/base_env.py
index 35ae827..987066c 100644
--- a/envs/create_game/base_env.py
+++ b/envs/create_game/base_env.py
@@ -123,8 +123,9 @@ class BaseEnv(gym.Env):
         Reset the environment
         """
         self._check_setup()
-        self.space.remove([*self.space.bodies, *self.space.shapes,
-                           *self.space.constraints])
+        # self.space.remove([*self.space.bodies, *self.space.shapes,
+        #                   *self.space.constraints])
+        self.space.remove(*self.space.bodies, *self.space.shapes, *self.space.constraints)
 
         self.ball_traces = []
         self.line_traces = []
diff --git a/envs/create_game/tools/ball.py b/envs/create_game/tools/ball.py
index 052cb47..807ce36 100644
--- a/envs/create_game/tools/ball.py
+++ b/envs/create_game/tools/ball.py
@@ -52,9 +52,10 @@ class Ball(GravityObj):
         if self.color == 'basketball':
             self.img.render(screen, scale, self.flipy)
         else:
-            draw_pos = scale * self.flipy(self.body.position)
-            draw_pos[0] = int(draw_pos[0])
-            draw_pos[1] = int(draw_pos[1])
+            draw_pos1 = scale * self.flipy(self.body.position)
+            draw_pos = pymunk.Vec2d(int(draw_pos1[0]), int(draw_pos1[1]))
+            # draw_pos[0] = int(draw_pos1[0])
+            # draw_pos[1] = int(draw_pos1[1])
 
             if self.is_trace:
                 draw_radius = max(2, int(scale * self.radius) // self.scale_radius)
diff --git a/envs/create_game/tools/poly.py b/envs/create_game/tools/poly.py
index e875ef5..cb6b009 100644
--- a/envs/create_game/tools/poly.py
+++ b/envs/create_game/tools/poly.py
@@ -14,7 +14,7 @@ class FixedPoly(FixedObj):
         self.body = self._create_body(mass, moment)
         self.body.position = pm.Vec2d(pos[0], pos[1])
 
-        self.vertices = self.get_vertices(pm.Vec2d([0., 0.]), n_sides, angle, size)
+        self.vertices = self.get_vertices(pm.Vec2d(0., 0.), n_sides, angle, size)
 
         self.shape = pm.Poly(self.body, self.vertices)
         self.shape.friction = friction
diff --git a/main.py b/main.py
index 2619157..d0be0ad 100644
--- a/main.py
+++ b/main.py
@@ -7,14 +7,14 @@ from method.embedder.embedder import extract_dists
 from method.models.main_method import MainMethod
 from method.models.distance_method import DistanceMethod
 
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 
 from arguments import get_args
 from rlf import get_env_interface, RunSettings, run_policy
 
 import envs.recogym
-import envs.block_stack
+# import envs.block_stack
 import envs.interfaces
 import envs.create_game
 
diff --git a/method/dist_mem.py b/method/dist_mem.py
index 7da3bf1..fbd625d 100644
--- a/method/dist_mem.py
+++ b/method/dist_mem.py
@@ -261,7 +261,8 @@ class DistributionMemory(object):
     def load_distributions(self, load_file):
         path = osp.join('method/embedder/saved_distributions', load_file + '.emb')
         print('loading dists from ' + path)
-        ckpt = torch.load(path)
+        # ckpt = torch.load(path)
+        ckpt = torch.load(path, map_location=torch.device('cpu'))
 
         self.mem = ckpt['mem']
         self.mem_keys = ckpt['mem_keys']
diff --git a/method/embedder/embedder.py b/method/embedder/embedder.py
index 4d2dc0e..08e3297 100644
--- a/method/embedder/embedder.py
+++ b/method/embedder/embedder.py
@@ -23,8 +23,8 @@ import sys
 import os
 import os.path as osp
 from tqdm import tqdm
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 from rlf.rl import utils
 
 from torch.utils import data
diff --git a/requirements.txt b/requirements.txt
index 4cc4255..fcc248a 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,13 +1,14 @@
-absl-py==0.8.0
+absl-py
 argh==0.26.2
 astor==0.8.0
 backports.tempfile==1.0
 backports.weakref==1.0.post1
-cffi==1.12.3
+cffi
 chardet==3.0.4
 Click==7.0
+cloudpickle==3.0.0
 cycler==0.10.0
-Cython==0.29.13
+Cython<3
 decorator==4.4.0
 docker-pycreds==0.4.0
 future==0.17.1
@@ -18,60 +19,60 @@ glfw==1.8.3
 google-pasta==0.1.7
 gql==0.1.0
 graphql-core==2.2.1
-grpcio==1.24.0
+grpcio==1.59.3
 gym==0.10.8
-h5py==2.10.0
+h5py
 idna==2.8
-imageio==2.4.1
-joblib==0.13.2
+imageio==2.9.0
+joblib==1.3.2
 Keras-Applications==1.0.8
 Keras-Preprocessing==1.1.0
 kiwisolver==1.1.0
 libtmux==0.8.1
 lockfile==0.12.2
 Markdown==3.1.1
-matplotlib==3.1.2
+matplotlib==3.4
 moviepy==1.0.1
-mujoco-py==2.0.2.5
-numpy==1.15.2
+free-mujoco-py
+numpy==1.24.4
 nvidia-ml-py3==7.352.0
-opencv-python==4.0.0.21
-pandas==0.24.2
+opencv-python==4.9.0.80
+pandas==1.3.5
 pathtools==0.1.2
-Pillow==6.1.0
+Pillow==6.2.0
 promise==2.2.1
-protobuf==3.9.2
+protobuf==3.20.3
 psutil==5.6.3
 pycparser==2.19
-pygame==1.9.6
+pygame
 pyglet==1.4.4
-pymunk==5.4.2
+pymunk==6.6.0
 pyparsing==2.4.2
-PyQt5==5.13.2
-PyQt5-sip==12.7.0
+PyQt5==5.15.10
+PyQt5-sip==12.13.0
 python-dateutil==2.8.0
 pytz==2019.2
-PyYAML==5.1.2
+PyYAML
 requests==2.22.0
 Rx==1.6.1
-scikit-learn==0.21.3
-scipy==1.3.1
-seaborn==0.10.0
+scikit-learn
+scipy
+seaborn==0.13.2
 sentry-sdk==0.12.2
 shortuuid==0.5.0
 six==1.12.0
 sklearn==0.0
 smmap2==2.0.5
 subprocess32==3.5.4
-tensorboard==1.14.0
+tensorboard==2.13.0
 tensorboardX==1.8
-tensorflow==1.14.0
-tensorflow-estimator==1.14.0
+tensorflow==2.13.0rc0
+tensorflow-estimator
 termcolor==1.1.0
-torch==1.2.0
+torch
 tqdm==4.36.1
 urllib3==1.25.6
 wandb==0.8.3
 watchdog==0.9.0
-Werkzeug==0.16.0
+Werkzeug==1.0.1
 wrapt==1.11.2
diff --git a/rlf/baselines/vec_env/dummy_vec_env.py b/rlf/baselines/vec_env/dummy_vec_env.py
index 818bd53..4367f39 100644
--- a/rlf/baselines/vec_env/dummy_vec_env.py
+++ b/rlf/baselines/vec_env/dummy_vec_env.py
@@ -22,7 +22,7 @@ class DummyVecEnv(VecEnv):
         self.keys, shapes, dtypes = obs_space_info(obs_space)
 
         self.buf_obs = { k: np.zeros((self.num_envs,) + tuple(shapes[k]), dtype=dtypes[k]) for k in self.keys }
-        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool)
+        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool_)
         self.buf_rews  = np.zeros((self.num_envs,), dtype=np.float32)
         self.buf_infos = [{} for _ in range(self.num_envs)]
         self.actions = None
diff --git a/rlf/baselines/vec_env/shmem_vec_env.py b/rlf/baselines/vec_env/shmem_vec_env.py
index 7a4d78d..4d9fa7c 100644
--- a/rlf/baselines/vec_env/shmem_vec_env.py
+++ b/rlf/baselines/vec_env/shmem_vec_env.py
@@ -14,7 +14,7 @@ _NP_TO_CT = {np.float32: ctypes.c_float,
              np.int32: ctypes.c_int32,
              np.int8: ctypes.c_int8,
              np.uint8: ctypes.c_char,
-             np.bool: ctypes.c_bool}
+             np.bool_: ctypes.c_bool}
 
 
 class ShmemVecEnv(VecEnv):
diff --git a/rlf/main.py b/rlf/main.py
index dd7cd4f..dc304ee 100644
--- a/rlf/main.py
+++ b/rlf/main.py
@@ -95,6 +95,7 @@ def run_policy(run_settings):
     args.trajectory_len = None
     test_args.trajectory_len = None
 
+    print(args.num_processes)
     envs = make_vec_envs(args.env_name, args.seed, args.num_processes,
                          args.gamma, args.log_dir, args.device,
                          False, args.env_trans_fn, args)
ed09906ce33a6af77bef2e641a45f81306d2f1d4
diff --git a/arguments.py b/arguments.py
index dfc38fb..ec94316 100644
--- a/arguments.py
+++ b/arguments.py
@@ -14,7 +14,8 @@ def grid_args(args):
     set_if_none(args, 'exp_type', 'rnd')
 
     set_if_none(args, 'onehot_state', True)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'sample_clusters', False)
     set_if_none(args, 'action_set_size', 50)
     set_if_none(args, 'test_action_set_size', 50)
@@ -49,7 +50,8 @@ def grid_play_args(args):
         args.n_trajectories = 672
 
     set_if_none(args, 'emb_epochs', 10000)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 16)
     set_if_none(args, 'z_dim', 16)
     set_if_none(args, 'onehot_state', True)
@@ -66,7 +68,8 @@ def grid_play_args(args):
 
 
 def create_args(args):
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
 
     set_if_none(args, 'exp_type', 'NewMain')
     set_if_none(args, 'sample_clusters', False)
@@ -124,15 +127,18 @@ def create_play_args(args):
         args.hidden_dim_option = 128
         args.prefix = 'VideoCreate'
 
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
     args.action_random_sample = False
 
 def stack_args(args):
     set_if_none(args, 'exp_type', 'rnd')
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'action_set_size', 20)
     set_if_none(args, 'test_action_set_size', 20)
     set_if_none(args, 'separate_skip', True)
@@ -172,7 +178,8 @@ def stack_play_args(args):
     set_if_none(args, 'exp_type', 'rnd')
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'emb_epochs', 5000)
 
     if args.train_embeddings and args.n_trajectories == 1024:
@@ -196,8 +203,10 @@ def reco_args(args):
         set_if_none(args, 'action_set_size', 25)
     else:
         set_if_none(args, 'action_set_size', 500)
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'num_eval', 20)
     set_if_none(args, 'entropy_coef', 1e-2)
     set_if_none(args, 'test_action_set_size', 50)
diff --git a/envs/create_game/base_env.py b/envs/create_game/base_env.py
index 35ae827..987066c 100644
--- a/envs/create_game/base_env.py
+++ b/envs/create_game/base_env.py
@@ -123,8 +123,9 @@ class BaseEnv(gym.Env):
         Reset the environment
         """
         self._check_setup()
-        self.space.remove([*self.space.bodies, *self.space.shapes,
-                           *self.space.constraints])
+        # self.space.remove([*self.space.bodies, *self.space.shapes,
+        #                   *self.space.constraints])
+        self.space.remove(*self.space.bodies, *self.space.shapes, *self.space.constraints)
 
         self.ball_traces = []
         self.line_traces = []
diff --git a/envs/create_game/tools/ball.py b/envs/create_game/tools/ball.py
index 052cb47..807ce36 100644
--- a/envs/create_game/tools/ball.py
+++ b/envs/create_game/tools/ball.py
@@ -52,9 +52,10 @@ class Ball(GravityObj):
         if self.color == 'basketball':
             self.img.render(screen, scale, self.flipy)
         else:
-            draw_pos = scale * self.flipy(self.body.position)
-            draw_pos[0] = int(draw_pos[0])
-            draw_pos[1] = int(draw_pos[1])
+            draw_pos1 = scale * self.flipy(self.body.position)
+            draw_pos = pymunk.Vec2d(int(draw_pos1[0]), int(draw_pos1[1]))
+            # draw_pos[0] = int(draw_pos1[0])
+            # draw_pos[1] = int(draw_pos1[1])
 
             if self.is_trace:
                 draw_radius = max(2, int(scale * self.radius) // self.scale_radius)
diff --git a/envs/create_game/tools/poly.py b/envs/create_game/tools/poly.py
index e875ef5..01c5efb 100644
--- a/envs/create_game/tools/poly.py
+++ b/envs/create_game/tools/poly.py
@@ -14,7 +14,7 @@ class FixedPoly(FixedObj):
         self.body = self._create_body(mass, moment)
         self.body.position = pm.Vec2d(pos[0], pos[1])
 
-        self.vertices = self.get_vertices(pm.Vec2d([0., 0.]), n_sides, angle, size)
+        self.vertices = self.get_vertices(pm.Vec2d(0., 0.), n_sides, angle, size)
 
         self.shape = pm.Poly(self.body, self.vertices)
         self.shape.friction = friction
@@ -72,6 +72,7 @@ class Star(FixedPoly):
 
         pointlist = []
         for v in self.vertices:
+            print(v)
             x, y = pm.Vec2d(v).rotated(self.shape.body.angle) + self.shape.body.position
             point = scale * self.flipy([x, y])
             pointlist.append([int(point[0]), int(point[1])])
diff --git a/main.py b/main.py
index 2619157..d0be0ad 100644
--- a/main.py
+++ b/main.py
@@ -7,14 +7,14 @@ from method.embedder.embedder import extract_dists
 from method.models.main_method import MainMethod
 from method.models.distance_method import DistanceMethod
 
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 
 from arguments import get_args
 from rlf import get_env_interface, RunSettings, run_policy
 
 import envs.recogym
-import envs.block_stack
+# import envs.block_stack
 import envs.interfaces
 import envs.create_game
 
diff --git a/method/dist_mem.py b/method/dist_mem.py
index 7da3bf1..fbd625d 100644
--- a/method/dist_mem.py
+++ b/method/dist_mem.py
@@ -261,7 +261,8 @@ class DistributionMemory(object):
     def load_distributions(self, load_file):
         path = osp.join('method/embedder/saved_distributions', load_file + '.emb')
         print('loading dists from ' + path)
-        ckpt = torch.load(path)
+        # ckpt = torch.load(path)
+        ckpt = torch.load(path, map_location=torch.device('cpu'))
 
         self.mem = ckpt['mem']
         self.mem_keys = ckpt['mem_keys']
diff --git a/method/embedder/embedder.py b/method/embedder/embedder.py
index 4d2dc0e..08e3297 100644
--- a/method/embedder/embedder.py
+++ b/method/embedder/embedder.py
@@ -23,8 +23,8 @@ import sys
 import os
 import os.path as osp
 from tqdm import tqdm
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 from rlf.rl import utils
 
 from torch.utils import data
diff --git a/requirements.txt b/requirements.txt
index 4cc4255..fcc248a 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,13 +1,14 @@
-absl-py==0.8.0
+absl-py
 argh==0.26.2
 astor==0.8.0
 backports.tempfile==1.0
 backports.weakref==1.0.post1
-cffi==1.12.3
+cffi
 chardet==3.0.4
 Click==7.0
+cloudpickle==3.0.0
 cycler==0.10.0
-Cython==0.29.13
+Cython<3
 decorator==4.4.0
 docker-pycreds==0.4.0
 future==0.17.1
@@ -18,60 +19,60 @@ glfw==1.8.3
 google-pasta==0.1.7
 gql==0.1.0
 graphql-core==2.2.1
-grpcio==1.24.0
+grpcio==1.59.3
 gym==0.10.8
-h5py==2.10.0
+h5py
 idna==2.8
-imageio==2.4.1
-joblib==0.13.2
+imageio==2.9.0
+joblib==1.3.2
 Keras-Applications==1.0.8
 Keras-Preprocessing==1.1.0
 kiwisolver==1.1.0
 libtmux==0.8.1
 lockfile==0.12.2
 Markdown==3.1.1
-matplotlib==3.1.2
+matplotlib==3.4
 moviepy==1.0.1
-mujoco-py==2.0.2.5
-numpy==1.15.2
+free-mujoco-py
+numpy==1.24.4
 nvidia-ml-py3==7.352.0
-opencv-python==4.0.0.21
-pandas==0.24.2
+opencv-python==4.9.0.80
+pandas==1.3.5
 pathtools==0.1.2
-Pillow==6.1.0
+Pillow==6.2.0
 promise==2.2.1
-protobuf==3.9.2
+protobuf==3.20.3
 psutil==5.6.3
 pycparser==2.19
-pygame==1.9.6
+pygame
 pyglet==1.4.4
-pymunk==5.4.2
+pymunk==6.6.0
 pyparsing==2.4.2
-PyQt5==5.13.2
-PyQt5-sip==12.7.0
+PyQt5==5.15.10
+PyQt5-sip==12.13.0
 python-dateutil==2.8.0
 pytz==2019.2
-PyYAML==5.1.2
+PyYAML
 requests==2.22.0
 Rx==1.6.1
-scikit-learn==0.21.3
-scipy==1.3.1
-seaborn==0.10.0
+scikit-learn
+scipy
+seaborn==0.13.2
 sentry-sdk==0.12.2
 shortuuid==0.5.0
 six==1.12.0
 sklearn==0.0
 smmap2==2.0.5
 subprocess32==3.5.4
-tensorboard==1.14.0
+tensorboard==2.13.0
 tensorboardX==1.8
-tensorflow==1.14.0
-tensorflow-estimator==1.14.0
+tensorflow==2.13.0rc0
+tensorflow-estimator
 termcolor==1.1.0
-torch==1.2.0
+torch
 tqdm==4.36.1
 urllib3==1.25.6
 wandb==0.8.3
 watchdog==0.9.0
-Werkzeug==0.16.0
+Werkzeug==1.0.1
 wrapt==1.11.2
diff --git a/rlf/baselines/vec_env/dummy_vec_env.py b/rlf/baselines/vec_env/dummy_vec_env.py
index 818bd53..4367f39 100644
--- a/rlf/baselines/vec_env/dummy_vec_env.py
+++ b/rlf/baselines/vec_env/dummy_vec_env.py
@@ -22,7 +22,7 @@ class DummyVecEnv(VecEnv):
         self.keys, shapes, dtypes = obs_space_info(obs_space)
 
         self.buf_obs = { k: np.zeros((self.num_envs,) + tuple(shapes[k]), dtype=dtypes[k]) for k in self.keys }
-        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool)
+        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool_)
         self.buf_rews  = np.zeros((self.num_envs,), dtype=np.float32)
         self.buf_infos = [{} for _ in range(self.num_envs)]
         self.actions = None
diff --git a/rlf/baselines/vec_env/shmem_vec_env.py b/rlf/baselines/vec_env/shmem_vec_env.py
index 7a4d78d..4d9fa7c 100644
--- a/rlf/baselines/vec_env/shmem_vec_env.py
+++ b/rlf/baselines/vec_env/shmem_vec_env.py
@@ -14,7 +14,7 @@ _NP_TO_CT = {np.float32: ctypes.c_float,
              np.int32: ctypes.c_int32,
              np.int8: ctypes.c_int8,
              np.uint8: ctypes.c_char,
-             np.bool: ctypes.c_bool}
+             np.bool_: ctypes.c_bool}
 
 
 class ShmemVecEnv(VecEnv):
diff --git a/rlf/main.py b/rlf/main.py
index dd7cd4f..dc304ee 100644
--- a/rlf/main.py
+++ b/rlf/main.py
@@ -95,6 +95,7 @@ def run_policy(run_settings):
     args.trajectory_len = None
     test_args.trajectory_len = None
 
+    print(args.num_processes)
     envs = make_vec_envs(args.env_name, args.seed, args.num_processes,
                          args.gamma, args.log_dir, args.device,
                          False, args.env_trans_fn, args)
ed09906ce33a6af77bef2e641a45f81306d2f1d4
diff --git a/arguments.py b/arguments.py
index dfc38fb..ec94316 100644
--- a/arguments.py
+++ b/arguments.py
@@ -14,7 +14,8 @@ def grid_args(args):
     set_if_none(args, 'exp_type', 'rnd')
 
     set_if_none(args, 'onehot_state', True)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'sample_clusters', False)
     set_if_none(args, 'action_set_size', 50)
     set_if_none(args, 'test_action_set_size', 50)
@@ -49,7 +50,8 @@ def grid_play_args(args):
         args.n_trajectories = 672
 
     set_if_none(args, 'emb_epochs', 10000)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 16)
     set_if_none(args, 'z_dim', 16)
     set_if_none(args, 'onehot_state', True)
@@ -66,7 +68,8 @@ def grid_play_args(args):
 
 
 def create_args(args):
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
 
     set_if_none(args, 'exp_type', 'NewMain')
     set_if_none(args, 'sample_clusters', False)
@@ -124,15 +127,18 @@ def create_play_args(args):
         args.hidden_dim_option = 128
         args.prefix = 'VideoCreate'
 
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
     args.action_random_sample = False
 
 def stack_args(args):
     set_if_none(args, 'exp_type', 'rnd')
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'action_set_size', 20)
     set_if_none(args, 'test_action_set_size', 20)
     set_if_none(args, 'separate_skip', True)
@@ -172,7 +178,8 @@ def stack_play_args(args):
     set_if_none(args, 'exp_type', 'rnd')
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'emb_epochs', 5000)
 
     if args.train_embeddings and args.n_trajectories == 1024:
@@ -196,8 +203,10 @@ def reco_args(args):
         set_if_none(args, 'action_set_size', 25)
     else:
         set_if_none(args, 'action_set_size', 500)
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'num_eval', 20)
     set_if_none(args, 'entropy_coef', 1e-2)
     set_if_none(args, 'test_action_set_size', 50)
diff --git a/envs/create_game/base_env.py b/envs/create_game/base_env.py
index 35ae827..987066c 100644
--- a/envs/create_game/base_env.py
+++ b/envs/create_game/base_env.py
@@ -123,8 +123,9 @@ class BaseEnv(gym.Env):
         Reset the environment
         """
         self._check_setup()
-        self.space.remove([*self.space.bodies, *self.space.shapes,
-                           *self.space.constraints])
+        # self.space.remove([*self.space.bodies, *self.space.shapes,
+        #                   *self.space.constraints])
+        self.space.remove(*self.space.bodies, *self.space.shapes, *self.space.constraints)
 
         self.ball_traces = []
         self.line_traces = []
diff --git a/envs/create_game/tools/ball.py b/envs/create_game/tools/ball.py
index 052cb47..807ce36 100644
--- a/envs/create_game/tools/ball.py
+++ b/envs/create_game/tools/ball.py
@@ -52,9 +52,10 @@ class Ball(GravityObj):
         if self.color == 'basketball':
             self.img.render(screen, scale, self.flipy)
         else:
-            draw_pos = scale * self.flipy(self.body.position)
-            draw_pos[0] = int(draw_pos[0])
-            draw_pos[1] = int(draw_pos[1])
+            draw_pos1 = scale * self.flipy(self.body.position)
+            draw_pos = pymunk.Vec2d(int(draw_pos1[0]), int(draw_pos1[1]))
+            # draw_pos[0] = int(draw_pos1[0])
+            # draw_pos[1] = int(draw_pos1[1])
 
             if self.is_trace:
                 draw_radius = max(2, int(scale * self.radius) // self.scale_radius)
diff --git a/envs/create_game/tools/poly.py b/envs/create_game/tools/poly.py
index e875ef5..4847c66 100644
--- a/envs/create_game/tools/poly.py
+++ b/envs/create_game/tools/poly.py
@@ -14,7 +14,7 @@ class FixedPoly(FixedObj):
         self.body = self._create_body(mass, moment)
         self.body.position = pm.Vec2d(pos[0], pos[1])
 
-        self.vertices = self.get_vertices(pm.Vec2d([0., 0.]), n_sides, angle, size)
+        self.vertices = self.get_vertices(pm.Vec2d(0., 0.), n_sides, angle, size)
 
         self.shape = pm.Poly(self.body, self.vertices)
         self.shape.friction = friction
@@ -72,7 +72,8 @@ class Star(FixedPoly):
 
         pointlist = []
         for v in self.vertices:
-            x, y = pm.Vec2d(v).rotated(self.shape.body.angle) + self.shape.body.position
+            print(v)
+            x, y = pm.Vec2d(v[0], v[1]).rotated(self.shape.body.angle) + self.shape.body.position
             point = scale * self.flipy([x, y])
             pointlist.append([int(point[0]), int(point[1])])
 
diff --git a/main.py b/main.py
index 2619157..d0be0ad 100644
--- a/main.py
+++ b/main.py
@@ -7,14 +7,14 @@ from method.embedder.embedder import extract_dists
 from method.models.main_method import MainMethod
 from method.models.distance_method import DistanceMethod
 
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 
 from arguments import get_args
 from rlf import get_env_interface, RunSettings, run_policy
 
 import envs.recogym
-import envs.block_stack
+# import envs.block_stack
 import envs.interfaces
 import envs.create_game
 
diff --git a/method/dist_mem.py b/method/dist_mem.py
index 7da3bf1..fbd625d 100644
--- a/method/dist_mem.py
+++ b/method/dist_mem.py
@@ -261,7 +261,8 @@ class DistributionMemory(object):
     def load_distributions(self, load_file):
         path = osp.join('method/embedder/saved_distributions', load_file + '.emb')
         print('loading dists from ' + path)
-        ckpt = torch.load(path)
+        # ckpt = torch.load(path)
+        ckpt = torch.load(path, map_location=torch.device('cpu'))
 
         self.mem = ckpt['mem']
         self.mem_keys = ckpt['mem_keys']
diff --git a/method/embedder/embedder.py b/method/embedder/embedder.py
index 4d2dc0e..08e3297 100644
--- a/method/embedder/embedder.py
+++ b/method/embedder/embedder.py
@@ -23,8 +23,8 @@ import sys
 import os
 import os.path as osp
 from tqdm import tqdm
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 from rlf.rl import utils
 
 from torch.utils import data
diff --git a/requirements.txt b/requirements.txt
index 4cc4255..fcc248a 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,13 +1,14 @@
-absl-py==0.8.0
+absl-py
 argh==0.26.2
 astor==0.8.0
 backports.tempfile==1.0
 backports.weakref==1.0.post1
-cffi==1.12.3
+cffi
 chardet==3.0.4
 Click==7.0
+cloudpickle==3.0.0
 cycler==0.10.0
-Cython==0.29.13
+Cython<3
 decorator==4.4.0
 docker-pycreds==0.4.0
 future==0.17.1
@@ -18,60 +19,60 @@ glfw==1.8.3
 google-pasta==0.1.7
 gql==0.1.0
 graphql-core==2.2.1
-grpcio==1.24.0
+grpcio==1.59.3
 gym==0.10.8
-h5py==2.10.0
+h5py
 idna==2.8
-imageio==2.4.1
-joblib==0.13.2
+imageio==2.9.0
+joblib==1.3.2
 Keras-Applications==1.0.8
 Keras-Preprocessing==1.1.0
 kiwisolver==1.1.0
 libtmux==0.8.1
 lockfile==0.12.2
 Markdown==3.1.1
-matplotlib==3.1.2
+matplotlib==3.4
 moviepy==1.0.1
-mujoco-py==2.0.2.5
-numpy==1.15.2
+free-mujoco-py
+numpy==1.24.4
 nvidia-ml-py3==7.352.0
-opencv-python==4.0.0.21
-pandas==0.24.2
+opencv-python==4.9.0.80
+pandas==1.3.5
 pathtools==0.1.2
-Pillow==6.1.0
+Pillow==6.2.0
 promise==2.2.1
-protobuf==3.9.2
+protobuf==3.20.3
 psutil==5.6.3
 pycparser==2.19
-pygame==1.9.6
+pygame
 pyglet==1.4.4
-pymunk==5.4.2
+pymunk==6.6.0
 pyparsing==2.4.2
-PyQt5==5.13.2
-PyQt5-sip==12.7.0
+PyQt5==5.15.10
+PyQt5-sip==12.13.0
 python-dateutil==2.8.0
 pytz==2019.2
-PyYAML==5.1.2
+PyYAML
 requests==2.22.0
 Rx==1.6.1
-scikit-learn==0.21.3
-scipy==1.3.1
-seaborn==0.10.0
+scikit-learn
+scipy
+seaborn==0.13.2
 sentry-sdk==0.12.2
 shortuuid==0.5.0
 six==1.12.0
 sklearn==0.0
 smmap2==2.0.5
 subprocess32==3.5.4
-tensorboard==1.14.0
+tensorboard==2.13.0
 tensorboardX==1.8
-tensorflow==1.14.0
-tensorflow-estimator==1.14.0
+tensorflow==2.13.0rc0
+tensorflow-estimator
 termcolor==1.1.0
-torch==1.2.0
+torch
 tqdm==4.36.1
 urllib3==1.25.6
 wandb==0.8.3
 watchdog==0.9.0
-Werkzeug==0.16.0
+Werkzeug==1.0.1
 wrapt==1.11.2
diff --git a/rlf/baselines/vec_env/dummy_vec_env.py b/rlf/baselines/vec_env/dummy_vec_env.py
index 818bd53..4367f39 100644
--- a/rlf/baselines/vec_env/dummy_vec_env.py
+++ b/rlf/baselines/vec_env/dummy_vec_env.py
@@ -22,7 +22,7 @@ class DummyVecEnv(VecEnv):
         self.keys, shapes, dtypes = obs_space_info(obs_space)
 
         self.buf_obs = { k: np.zeros((self.num_envs,) + tuple(shapes[k]), dtype=dtypes[k]) for k in self.keys }
-        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool)
+        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool_)
         self.buf_rews  = np.zeros((self.num_envs,), dtype=np.float32)
         self.buf_infos = [{} for _ in range(self.num_envs)]
         self.actions = None
diff --git a/rlf/baselines/vec_env/shmem_vec_env.py b/rlf/baselines/vec_env/shmem_vec_env.py
index 7a4d78d..4d9fa7c 100644
--- a/rlf/baselines/vec_env/shmem_vec_env.py
+++ b/rlf/baselines/vec_env/shmem_vec_env.py
@@ -14,7 +14,7 @@ _NP_TO_CT = {np.float32: ctypes.c_float,
              np.int32: ctypes.c_int32,
              np.int8: ctypes.c_int8,
              np.uint8: ctypes.c_char,
-             np.bool: ctypes.c_bool}
+             np.bool_: ctypes.c_bool}
 
 
 class ShmemVecEnv(VecEnv):
diff --git a/rlf/main.py b/rlf/main.py
index dd7cd4f..dc304ee 100644
--- a/rlf/main.py
+++ b/rlf/main.py
@@ -95,6 +95,7 @@ def run_policy(run_settings):
     args.trajectory_len = None
     test_args.trajectory_len = None
 
+    print(args.num_processes)
     envs = make_vec_envs(args.env_name, args.seed, args.num_processes,
                          args.gamma, args.log_dir, args.device,
                          False, args.env_trans_fn, args)
ed09906ce33a6af77bef2e641a45f81306d2f1d4
diff --git a/arguments.py b/arguments.py
index dfc38fb..ec94316 100644
--- a/arguments.py
+++ b/arguments.py
@@ -14,7 +14,8 @@ def grid_args(args):
     set_if_none(args, 'exp_type', 'rnd')
 
     set_if_none(args, 'onehot_state', True)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'sample_clusters', False)
     set_if_none(args, 'action_set_size', 50)
     set_if_none(args, 'test_action_set_size', 50)
@@ -49,7 +50,8 @@ def grid_play_args(args):
         args.n_trajectories = 672
 
     set_if_none(args, 'emb_epochs', 10000)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 16)
     set_if_none(args, 'z_dim', 16)
     set_if_none(args, 'onehot_state', True)
@@ -66,7 +68,8 @@ def grid_play_args(args):
 
 
 def create_args(args):
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
 
     set_if_none(args, 'exp_type', 'NewMain')
     set_if_none(args, 'sample_clusters', False)
@@ -124,15 +127,18 @@ def create_play_args(args):
         args.hidden_dim_option = 128
         args.prefix = 'VideoCreate'
 
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
     args.action_random_sample = False
 
 def stack_args(args):
     set_if_none(args, 'exp_type', 'rnd')
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'action_set_size', 20)
     set_if_none(args, 'test_action_set_size', 20)
     set_if_none(args, 'separate_skip', True)
@@ -172,7 +178,8 @@ def stack_play_args(args):
     set_if_none(args, 'exp_type', 'rnd')
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'emb_epochs', 5000)
 
     if args.train_embeddings and args.n_trajectories == 1024:
@@ -196,8 +203,10 @@ def reco_args(args):
         set_if_none(args, 'action_set_size', 25)
     else:
         set_if_none(args, 'action_set_size', 500)
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'num_eval', 20)
     set_if_none(args, 'entropy_coef', 1e-2)
     set_if_none(args, 'test_action_set_size', 50)
diff --git a/envs/create_game/base_env.py b/envs/create_game/base_env.py
index 35ae827..987066c 100644
--- a/envs/create_game/base_env.py
+++ b/envs/create_game/base_env.py
@@ -123,8 +123,9 @@ class BaseEnv(gym.Env):
         Reset the environment
         """
         self._check_setup()
-        self.space.remove([*self.space.bodies, *self.space.shapes,
-                           *self.space.constraints])
+        # self.space.remove([*self.space.bodies, *self.space.shapes,
+        #                   *self.space.constraints])
+        self.space.remove(*self.space.bodies, *self.space.shapes, *self.space.constraints)
 
         self.ball_traces = []
         self.line_traces = []
diff --git a/envs/create_game/tools/ball.py b/envs/create_game/tools/ball.py
index 052cb47..807ce36 100644
--- a/envs/create_game/tools/ball.py
+++ b/envs/create_game/tools/ball.py
@@ -52,9 +52,10 @@ class Ball(GravityObj):
         if self.color == 'basketball':
             self.img.render(screen, scale, self.flipy)
         else:
-            draw_pos = scale * self.flipy(self.body.position)
-            draw_pos[0] = int(draw_pos[0])
-            draw_pos[1] = int(draw_pos[1])
+            draw_pos1 = scale * self.flipy(self.body.position)
+            draw_pos = pymunk.Vec2d(int(draw_pos1[0]), int(draw_pos1[1]))
+            # draw_pos[0] = int(draw_pos1[0])
+            # draw_pos[1] = int(draw_pos1[1])
 
             if self.is_trace:
                 draw_radius = max(2, int(scale * self.radius) // self.scale_radius)
diff --git a/envs/create_game/tools/funnel.py b/envs/create_game/tools/funnel.py
index 4619843..0f7d9ce 100644
--- a/envs/create_game/tools/funnel.py
+++ b/envs/create_game/tools/funnel.py
@@ -59,7 +59,7 @@ class Funnel(FixedPoly):
         funnel.collision_type = self.collision_type
         funnel.locations = [self.nozzle_position, self.v_1, self.v_2, self.v_3]
         self.shape = funnel
-        space.add(funnel)
+        space.add(funnel.get_body(), funnel)
         self.attached_shapes.append(funnel)
 
         h = space.add_collision_handler(1, self.collision_type)
diff --git a/envs/create_game/tools/poly.py b/envs/create_game/tools/poly.py
index e875ef5..85adee4 100644
--- a/envs/create_game/tools/poly.py
+++ b/envs/create_game/tools/poly.py
@@ -14,7 +14,7 @@ class FixedPoly(FixedObj):
         self.body = self._create_body(mass, moment)
         self.body.position = pm.Vec2d(pos[0], pos[1])
 
-        self.vertices = self.get_vertices(pm.Vec2d([0., 0.]), n_sides, angle, size)
+        self.vertices = self.get_vertices(pm.Vec2d(0., 0.), n_sides, angle, size)
 
         self.shape = pm.Poly(self.body, self.vertices)
         self.shape.friction = friction
@@ -72,7 +72,7 @@ class Star(FixedPoly):
 
         pointlist = []
         for v in self.vertices:
-            x, y = pm.Vec2d(v).rotated(self.shape.body.angle) + self.shape.body.position
+            x, y = pm.Vec2d(v[0], v[1]).rotated(self.shape.body.angle) + self.shape.body.position
             point = scale * self.flipy([x, y])
             pointlist.append([int(point[0]), int(point[1])])
 
diff --git a/main.py b/main.py
index 2619157..d0be0ad 100644
--- a/main.py
+++ b/main.py
@@ -7,14 +7,14 @@ from method.embedder.embedder import extract_dists
 from method.models.main_method import MainMethod
 from method.models.distance_method import DistanceMethod
 
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 
 from arguments import get_args
 from rlf import get_env_interface, RunSettings, run_policy
 
 import envs.recogym
-import envs.block_stack
+# import envs.block_stack
 import envs.interfaces
 import envs.create_game
 
diff --git a/method/dist_mem.py b/method/dist_mem.py
index 7da3bf1..fbd625d 100644
--- a/method/dist_mem.py
+++ b/method/dist_mem.py
@@ -261,7 +261,8 @@ class DistributionMemory(object):
     def load_distributions(self, load_file):
         path = osp.join('method/embedder/saved_distributions', load_file + '.emb')
         print('loading dists from ' + path)
-        ckpt = torch.load(path)
+        # ckpt = torch.load(path)
+        ckpt = torch.load(path, map_location=torch.device('cpu'))
 
         self.mem = ckpt['mem']
         self.mem_keys = ckpt['mem_keys']
diff --git a/method/embedder/embedder.py b/method/embedder/embedder.py
index 4d2dc0e..08e3297 100644
--- a/method/embedder/embedder.py
+++ b/method/embedder/embedder.py
@@ -23,8 +23,8 @@ import sys
 import os
 import os.path as osp
 from tqdm import tqdm
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 from rlf.rl import utils
 
 from torch.utils import data
diff --git a/requirements.txt b/requirements.txt
index 4cc4255..fcc248a 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,13 +1,14 @@
-absl-py==0.8.0
+absl-py
 argh==0.26.2
 astor==0.8.0
 backports.tempfile==1.0
 backports.weakref==1.0.post1
-cffi==1.12.3
+cffi
 chardet==3.0.4
 Click==7.0
+cloudpickle==3.0.0
 cycler==0.10.0
-Cython==0.29.13
+Cython<3
 decorator==4.4.0
 docker-pycreds==0.4.0
 future==0.17.1
@@ -18,60 +19,60 @@ glfw==1.8.3
 google-pasta==0.1.7
 gql==0.1.0
 graphql-core==2.2.1
-grpcio==1.24.0
+grpcio==1.59.3
 gym==0.10.8
-h5py==2.10.0
+h5py
 idna==2.8
-imageio==2.4.1
-joblib==0.13.2
+imageio==2.9.0
+joblib==1.3.2
 Keras-Applications==1.0.8
 Keras-Preprocessing==1.1.0
 kiwisolver==1.1.0
 libtmux==0.8.1
 lockfile==0.12.2
 Markdown==3.1.1
-matplotlib==3.1.2
+matplotlib==3.4
 moviepy==1.0.1
-mujoco-py==2.0.2.5
-numpy==1.15.2
+free-mujoco-py
+numpy==1.24.4
 nvidia-ml-py3==7.352.0
-opencv-python==4.0.0.21
-pandas==0.24.2
+opencv-python==4.9.0.80
+pandas==1.3.5
 pathtools==0.1.2
-Pillow==6.1.0
+Pillow==6.2.0
 promise==2.2.1
-protobuf==3.9.2
+protobuf==3.20.3
 psutil==5.6.3
 pycparser==2.19
-pygame==1.9.6
+pygame
 pyglet==1.4.4
-pymunk==5.4.2
+pymunk==6.6.0
 pyparsing==2.4.2
-PyQt5==5.13.2
-PyQt5-sip==12.7.0
+PyQt5==5.15.10
+PyQt5-sip==12.13.0
 python-dateutil==2.8.0
 pytz==2019.2
-PyYAML==5.1.2
+PyYAML
 requests==2.22.0
 Rx==1.6.1
-scikit-learn==0.21.3
-scipy==1.3.1
-seaborn==0.10.0
+scikit-learn
+scipy
+seaborn==0.13.2
 sentry-sdk==0.12.2
 shortuuid==0.5.0
 six==1.12.0
 sklearn==0.0
 smmap2==2.0.5
 subprocess32==3.5.4
-tensorboard==1.14.0
+tensorboard==2.13.0
 tensorboardX==1.8
-tensorflow==1.14.0
-tensorflow-estimator==1.14.0
+tensorflow==2.13.0rc0
+tensorflow-estimator
 termcolor==1.1.0
-torch==1.2.0
+torch
 tqdm==4.36.1
 urllib3==1.25.6
 wandb==0.8.3
 watchdog==0.9.0
-Werkzeug==0.16.0
+Werkzeug==1.0.1
 wrapt==1.11.2
diff --git a/rlf/baselines/vec_env/dummy_vec_env.py b/rlf/baselines/vec_env/dummy_vec_env.py
index 818bd53..4367f39 100644
--- a/rlf/baselines/vec_env/dummy_vec_env.py
+++ b/rlf/baselines/vec_env/dummy_vec_env.py
@@ -22,7 +22,7 @@ class DummyVecEnv(VecEnv):
         self.keys, shapes, dtypes = obs_space_info(obs_space)
 
         self.buf_obs = { k: np.zeros((self.num_envs,) + tuple(shapes[k]), dtype=dtypes[k]) for k in self.keys }
-        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool)
+        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool_)
         self.buf_rews  = np.zeros((self.num_envs,), dtype=np.float32)
         self.buf_infos = [{} for _ in range(self.num_envs)]
         self.actions = None
diff --git a/rlf/baselines/vec_env/shmem_vec_env.py b/rlf/baselines/vec_env/shmem_vec_env.py
index 7a4d78d..4d9fa7c 100644
--- a/rlf/baselines/vec_env/shmem_vec_env.py
+++ b/rlf/baselines/vec_env/shmem_vec_env.py
@@ -14,7 +14,7 @@ _NP_TO_CT = {np.float32: ctypes.c_float,
              np.int32: ctypes.c_int32,
              np.int8: ctypes.c_int8,
              np.uint8: ctypes.c_char,
-             np.bool: ctypes.c_bool}
+             np.bool_: ctypes.c_bool}
 
 
 class ShmemVecEnv(VecEnv):
diff --git a/rlf/main.py b/rlf/main.py
index dd7cd4f..dc304ee 100644
--- a/rlf/main.py
+++ b/rlf/main.py
@@ -95,6 +95,7 @@ def run_policy(run_settings):
     args.trajectory_len = None
     test_args.trajectory_len = None
 
+    print(args.num_processes)
     envs = make_vec_envs(args.env_name, args.seed, args.num_processes,
                          args.gamma, args.log_dir, args.device,
                          False, args.env_trans_fn, args)
ed09906ce33a6af77bef2e641a45f81306d2f1d4
diff --git a/arguments.py b/arguments.py
index dfc38fb..ec94316 100644
--- a/arguments.py
+++ b/arguments.py
@@ -14,7 +14,8 @@ def grid_args(args):
     set_if_none(args, 'exp_type', 'rnd')
 
     set_if_none(args, 'onehot_state', True)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'sample_clusters', False)
     set_if_none(args, 'action_set_size', 50)
     set_if_none(args, 'test_action_set_size', 50)
@@ -49,7 +50,8 @@ def grid_play_args(args):
         args.n_trajectories = 672
 
     set_if_none(args, 'emb_epochs', 10000)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 16)
     set_if_none(args, 'z_dim', 16)
     set_if_none(args, 'onehot_state', True)
@@ -66,7 +68,8 @@ def grid_play_args(args):
 
 
 def create_args(args):
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
 
     set_if_none(args, 'exp_type', 'NewMain')
     set_if_none(args, 'sample_clusters', False)
@@ -124,15 +127,18 @@ def create_play_args(args):
         args.hidden_dim_option = 128
         args.prefix = 'VideoCreate'
 
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
     args.action_random_sample = False
 
 def stack_args(args):
     set_if_none(args, 'exp_type', 'rnd')
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'action_set_size', 20)
     set_if_none(args, 'test_action_set_size', 20)
     set_if_none(args, 'separate_skip', True)
@@ -172,7 +178,8 @@ def stack_play_args(args):
     set_if_none(args, 'exp_type', 'rnd')
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'emb_epochs', 5000)
 
     if args.train_embeddings and args.n_trajectories == 1024:
@@ -196,8 +203,10 @@ def reco_args(args):
         set_if_none(args, 'action_set_size', 25)
     else:
         set_if_none(args, 'action_set_size', 500)
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'num_eval', 20)
     set_if_none(args, 'entropy_coef', 1e-2)
     set_if_none(args, 'test_action_set_size', 50)
diff --git a/envs/create_game/base_env.py b/envs/create_game/base_env.py
index 35ae827..987066c 100644
--- a/envs/create_game/base_env.py
+++ b/envs/create_game/base_env.py
@@ -123,8 +123,9 @@ class BaseEnv(gym.Env):
         Reset the environment
         """
         self._check_setup()
-        self.space.remove([*self.space.bodies, *self.space.shapes,
-                           *self.space.constraints])
+        # self.space.remove([*self.space.bodies, *self.space.shapes,
+        #                   *self.space.constraints])
+        self.space.remove(*self.space.bodies, *self.space.shapes, *self.space.constraints)
 
         self.ball_traces = []
         self.line_traces = []
diff --git a/envs/create_game/create_game.py b/envs/create_game/create_game.py
index ee5f677..3801f41 100644
--- a/envs/create_game/create_game.py
+++ b/envs/create_game/create_game.py
@@ -241,7 +241,7 @@ class CreateGame(BaseEnv):
 
     def motion_stopped(self):
         all_objs = self.get_all_objs()
-        vel = np.array([np.sqrt(sum(x.shape.body.velocity ** 2))
+        vel = np.array([np.sqrt(sum(x.shape.body.velocity * x.shape.body.velocity))
                         for x in all_objs])
         if (vel < self.settings.min_velocity).all():
             self.zero_vel_steps += 1
diff --git a/envs/create_game/tools/ball.py b/envs/create_game/tools/ball.py
index 052cb47..807ce36 100644
--- a/envs/create_game/tools/ball.py
+++ b/envs/create_game/tools/ball.py
@@ -52,9 +52,10 @@ class Ball(GravityObj):
         if self.color == 'basketball':
             self.img.render(screen, scale, self.flipy)
         else:
-            draw_pos = scale * self.flipy(self.body.position)
-            draw_pos[0] = int(draw_pos[0])
-            draw_pos[1] = int(draw_pos[1])
+            draw_pos1 = scale * self.flipy(self.body.position)
+            draw_pos = pymunk.Vec2d(int(draw_pos1[0]), int(draw_pos1[1]))
+            # draw_pos[0] = int(draw_pos1[0])
+            # draw_pos[1] = int(draw_pos1[1])
 
             if self.is_trace:
                 draw_radius = max(2, int(scale * self.radius) // self.scale_radius)
diff --git a/envs/create_game/tools/funnel.py b/envs/create_game/tools/funnel.py
index 4619843..0f7d9ce 100644
--- a/envs/create_game/tools/funnel.py
+++ b/envs/create_game/tools/funnel.py
@@ -59,7 +59,7 @@ class Funnel(FixedPoly):
         funnel.collision_type = self.collision_type
         funnel.locations = [self.nozzle_position, self.v_1, self.v_2, self.v_3]
         self.shape = funnel
-        space.add(funnel)
+        space.add(funnel.get_body(), funnel)
         self.attached_shapes.append(funnel)
 
         h = space.add_collision_handler(1, self.collision_type)
diff --git a/envs/create_game/tools/poly.py b/envs/create_game/tools/poly.py
index e875ef5..85adee4 100644
--- a/envs/create_game/tools/poly.py
+++ b/envs/create_game/tools/poly.py
@@ -14,7 +14,7 @@ class FixedPoly(FixedObj):
         self.body = self._create_body(mass, moment)
         self.body.position = pm.Vec2d(pos[0], pos[1])
 
-        self.vertices = self.get_vertices(pm.Vec2d([0., 0.]), n_sides, angle, size)
+        self.vertices = self.get_vertices(pm.Vec2d(0., 0.), n_sides, angle, size)
 
         self.shape = pm.Poly(self.body, self.vertices)
         self.shape.friction = friction
@@ -72,7 +72,7 @@ class Star(FixedPoly):
 
         pointlist = []
         for v in self.vertices:
-            x, y = pm.Vec2d(v).rotated(self.shape.body.angle) + self.shape.body.position
+            x, y = pm.Vec2d(v[0], v[1]).rotated(self.shape.body.angle) + self.shape.body.position
             point = scale * self.flipy([x, y])
             pointlist.append([int(point[0]), int(point[1])])
 
diff --git a/main.py b/main.py
index 2619157..d0be0ad 100644
--- a/main.py
+++ b/main.py
@@ -7,14 +7,14 @@ from method.embedder.embedder import extract_dists
 from method.models.main_method import MainMethod
 from method.models.distance_method import DistanceMethod
 
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 
 from arguments import get_args
 from rlf import get_env_interface, RunSettings, run_policy
 
 import envs.recogym
-import envs.block_stack
+# import envs.block_stack
 import envs.interfaces
 import envs.create_game
 
diff --git a/method/dist_mem.py b/method/dist_mem.py
index 7da3bf1..fbd625d 100644
--- a/method/dist_mem.py
+++ b/method/dist_mem.py
@@ -261,7 +261,8 @@ class DistributionMemory(object):
     def load_distributions(self, load_file):
         path = osp.join('method/embedder/saved_distributions', load_file + '.emb')
         print('loading dists from ' + path)
-        ckpt = torch.load(path)
+        # ckpt = torch.load(path)
+        ckpt = torch.load(path, map_location=torch.device('cpu'))
 
         self.mem = ckpt['mem']
         self.mem_keys = ckpt['mem_keys']
diff --git a/method/embedder/embedder.py b/method/embedder/embedder.py
index 4d2dc0e..08e3297 100644
--- a/method/embedder/embedder.py
+++ b/method/embedder/embedder.py
@@ -23,8 +23,8 @@ import sys
 import os
 import os.path as osp
 from tqdm import tqdm
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 from rlf.rl import utils
 
 from torch.utils import data
diff --git a/requirements.txt b/requirements.txt
index 4cc4255..fcc248a 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,13 +1,14 @@
-absl-py==0.8.0
+absl-py
 argh==0.26.2
 astor==0.8.0
 backports.tempfile==1.0
 backports.weakref==1.0.post1
-cffi==1.12.3
+cffi
 chardet==3.0.4
 Click==7.0
+cloudpickle==3.0.0
 cycler==0.10.0
-Cython==0.29.13
+Cython<3
 decorator==4.4.0
 docker-pycreds==0.4.0
 future==0.17.1
@@ -18,60 +19,60 @@ glfw==1.8.3
 google-pasta==0.1.7
 gql==0.1.0
 graphql-core==2.2.1
-grpcio==1.24.0
+grpcio==1.59.3
 gym==0.10.8
-h5py==2.10.0
+h5py
 idna==2.8
-imageio==2.4.1
-joblib==0.13.2
+imageio==2.9.0
+joblib==1.3.2
 Keras-Applications==1.0.8
 Keras-Preprocessing==1.1.0
 kiwisolver==1.1.0
 libtmux==0.8.1
 lockfile==0.12.2
 Markdown==3.1.1
-matplotlib==3.1.2
+matplotlib==3.4
 moviepy==1.0.1
-mujoco-py==2.0.2.5
-numpy==1.15.2
+free-mujoco-py
+numpy==1.24.4
 nvidia-ml-py3==7.352.0
-opencv-python==4.0.0.21
-pandas==0.24.2
+opencv-python==4.9.0.80
+pandas==1.3.5
 pathtools==0.1.2
-Pillow==6.1.0
+Pillow==6.2.0
 promise==2.2.1
-protobuf==3.9.2
+protobuf==3.20.3
 psutil==5.6.3
 pycparser==2.19
-pygame==1.9.6
+pygame
 pyglet==1.4.4
-pymunk==5.4.2
+pymunk==6.6.0
 pyparsing==2.4.2
-PyQt5==5.13.2
-PyQt5-sip==12.7.0
+PyQt5==5.15.10
+PyQt5-sip==12.13.0
 python-dateutil==2.8.0
 pytz==2019.2
-PyYAML==5.1.2
+PyYAML
 requests==2.22.0
 Rx==1.6.1
-scikit-learn==0.21.3
-scipy==1.3.1
-seaborn==0.10.0
+scikit-learn
+scipy
+seaborn==0.13.2
 sentry-sdk==0.12.2
 shortuuid==0.5.0
 six==1.12.0
 sklearn==0.0
 smmap2==2.0.5
 subprocess32==3.5.4
-tensorboard==1.14.0
+tensorboard==2.13.0
 tensorboardX==1.8
-tensorflow==1.14.0
-tensorflow-estimator==1.14.0
+tensorflow==2.13.0rc0
+tensorflow-estimator
 termcolor==1.1.0
-torch==1.2.0
+torch
 tqdm==4.36.1
 urllib3==1.25.6
 wandb==0.8.3
 watchdog==0.9.0
-Werkzeug==0.16.0
+Werkzeug==1.0.1
 wrapt==1.11.2
diff --git a/rlf/baselines/vec_env/dummy_vec_env.py b/rlf/baselines/vec_env/dummy_vec_env.py
index 818bd53..4367f39 100644
--- a/rlf/baselines/vec_env/dummy_vec_env.py
+++ b/rlf/baselines/vec_env/dummy_vec_env.py
@@ -22,7 +22,7 @@ class DummyVecEnv(VecEnv):
         self.keys, shapes, dtypes = obs_space_info(obs_space)
 
         self.buf_obs = { k: np.zeros((self.num_envs,) + tuple(shapes[k]), dtype=dtypes[k]) for k in self.keys }
-        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool)
+        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool_)
         self.buf_rews  = np.zeros((self.num_envs,), dtype=np.float32)
         self.buf_infos = [{} for _ in range(self.num_envs)]
         self.actions = None
diff --git a/rlf/baselines/vec_env/shmem_vec_env.py b/rlf/baselines/vec_env/shmem_vec_env.py
index 7a4d78d..4d9fa7c 100644
--- a/rlf/baselines/vec_env/shmem_vec_env.py
+++ b/rlf/baselines/vec_env/shmem_vec_env.py
@@ -14,7 +14,7 @@ _NP_TO_CT = {np.float32: ctypes.c_float,
              np.int32: ctypes.c_int32,
              np.int8: ctypes.c_int8,
              np.uint8: ctypes.c_char,
-             np.bool: ctypes.c_bool}
+             np.bool_: ctypes.c_bool}
 
 
 class ShmemVecEnv(VecEnv):
diff --git a/rlf/main.py b/rlf/main.py
index dd7cd4f..dc304ee 100644
--- a/rlf/main.py
+++ b/rlf/main.py
@@ -95,6 +95,7 @@ def run_policy(run_settings):
     args.trajectory_len = None
     test_args.trajectory_len = None
 
+    print(args.num_processes)
     envs = make_vec_envs(args.env_name, args.seed, args.num_processes,
                          args.gamma, args.log_dir, args.device,
                          False, args.env_trans_fn, args)
ed09906ce33a6af77bef2e641a45f81306d2f1d4
diff --git a/arguments.py b/arguments.py
index dfc38fb..ec94316 100644
--- a/arguments.py
+++ b/arguments.py
@@ -14,7 +14,8 @@ def grid_args(args):
     set_if_none(args, 'exp_type', 'rnd')
 
     set_if_none(args, 'onehot_state', True)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'sample_clusters', False)
     set_if_none(args, 'action_set_size', 50)
     set_if_none(args, 'test_action_set_size', 50)
@@ -49,7 +50,8 @@ def grid_play_args(args):
         args.n_trajectories = 672
 
     set_if_none(args, 'emb_epochs', 10000)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 16)
     set_if_none(args, 'z_dim', 16)
     set_if_none(args, 'onehot_state', True)
@@ -66,7 +68,8 @@ def grid_play_args(args):
 
 
 def create_args(args):
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
 
     set_if_none(args, 'exp_type', 'NewMain')
     set_if_none(args, 'sample_clusters', False)
@@ -124,15 +127,18 @@ def create_play_args(args):
         args.hidden_dim_option = 128
         args.prefix = 'VideoCreate'
 
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
     args.action_random_sample = False
 
 def stack_args(args):
     set_if_none(args, 'exp_type', 'rnd')
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'action_set_size', 20)
     set_if_none(args, 'test_action_set_size', 20)
     set_if_none(args, 'separate_skip', True)
@@ -172,7 +178,8 @@ def stack_play_args(args):
     set_if_none(args, 'exp_type', 'rnd')
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'emb_epochs', 5000)
 
     if args.train_embeddings and args.n_trajectories == 1024:
@@ -196,8 +203,10 @@ def reco_args(args):
         set_if_none(args, 'action_set_size', 25)
     else:
         set_if_none(args, 'action_set_size', 500)
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'num_eval', 20)
     set_if_none(args, 'entropy_coef', 1e-2)
     set_if_none(args, 'test_action_set_size', 50)
diff --git a/envs/create_game/base_env.py b/envs/create_game/base_env.py
index 35ae827..987066c 100644
--- a/envs/create_game/base_env.py
+++ b/envs/create_game/base_env.py
@@ -123,8 +123,9 @@ class BaseEnv(gym.Env):
         Reset the environment
         """
         self._check_setup()
-        self.space.remove([*self.space.bodies, *self.space.shapes,
-                           *self.space.constraints])
+        # self.space.remove([*self.space.bodies, *self.space.shapes,
+        #                   *self.space.constraints])
+        self.space.remove(*self.space.bodies, *self.space.shapes, *self.space.constraints)
 
         self.ball_traces = []
         self.line_traces = []
diff --git a/envs/create_game/create_game.py b/envs/create_game/create_game.py
index ee5f677..1d40d86 100644
--- a/envs/create_game/create_game.py
+++ b/envs/create_game/create_game.py
@@ -241,7 +241,7 @@ class CreateGame(BaseEnv):
 
     def motion_stopped(self):
         all_objs = self.get_all_objs()
-        vel = np.array([np.sqrt(sum(x.shape.body.velocity ** 2))
+        vel = np.array([np.sqrt(sum(x.shape.body.velocity.x **2 + x.shape.body.velocity.y ** 2))
                         for x in all_objs])
         if (vel < self.settings.min_velocity).all():
             self.zero_vel_steps += 1
diff --git a/envs/create_game/tools/ball.py b/envs/create_game/tools/ball.py
index 052cb47..807ce36 100644
--- a/envs/create_game/tools/ball.py
+++ b/envs/create_game/tools/ball.py
@@ -52,9 +52,10 @@ class Ball(GravityObj):
         if self.color == 'basketball':
             self.img.render(screen, scale, self.flipy)
         else:
-            draw_pos = scale * self.flipy(self.body.position)
-            draw_pos[0] = int(draw_pos[0])
-            draw_pos[1] = int(draw_pos[1])
+            draw_pos1 = scale * self.flipy(self.body.position)
+            draw_pos = pymunk.Vec2d(int(draw_pos1[0]), int(draw_pos1[1]))
+            # draw_pos[0] = int(draw_pos1[0])
+            # draw_pos[1] = int(draw_pos1[1])
 
             if self.is_trace:
                 draw_radius = max(2, int(scale * self.radius) // self.scale_radius)
diff --git a/envs/create_game/tools/funnel.py b/envs/create_game/tools/funnel.py
index 4619843..0f7d9ce 100644
--- a/envs/create_game/tools/funnel.py
+++ b/envs/create_game/tools/funnel.py
@@ -59,7 +59,7 @@ class Funnel(FixedPoly):
         funnel.collision_type = self.collision_type
         funnel.locations = [self.nozzle_position, self.v_1, self.v_2, self.v_3]
         self.shape = funnel
-        space.add(funnel)
+        space.add(funnel.get_body(), funnel)
         self.attached_shapes.append(funnel)
 
         h = space.add_collision_handler(1, self.collision_type)
diff --git a/envs/create_game/tools/poly.py b/envs/create_game/tools/poly.py
index e875ef5..85adee4 100644
--- a/envs/create_game/tools/poly.py
+++ b/envs/create_game/tools/poly.py
@@ -14,7 +14,7 @@ class FixedPoly(FixedObj):
         self.body = self._create_body(mass, moment)
         self.body.position = pm.Vec2d(pos[0], pos[1])
 
-        self.vertices = self.get_vertices(pm.Vec2d([0., 0.]), n_sides, angle, size)
+        self.vertices = self.get_vertices(pm.Vec2d(0., 0.), n_sides, angle, size)
 
         self.shape = pm.Poly(self.body, self.vertices)
         self.shape.friction = friction
@@ -72,7 +72,7 @@ class Star(FixedPoly):
 
         pointlist = []
         for v in self.vertices:
-            x, y = pm.Vec2d(v).rotated(self.shape.body.angle) + self.shape.body.position
+            x, y = pm.Vec2d(v[0], v[1]).rotated(self.shape.body.angle) + self.shape.body.position
             point = scale * self.flipy([x, y])
             pointlist.append([int(point[0]), int(point[1])])
 
diff --git a/main.py b/main.py
index 2619157..d0be0ad 100644
--- a/main.py
+++ b/main.py
@@ -7,14 +7,14 @@ from method.embedder.embedder import extract_dists
 from method.models.main_method import MainMethod
 from method.models.distance_method import DistanceMethod
 
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 
 from arguments import get_args
 from rlf import get_env_interface, RunSettings, run_policy
 
 import envs.recogym
-import envs.block_stack
+# import envs.block_stack
 import envs.interfaces
 import envs.create_game
 
diff --git a/method/dist_mem.py b/method/dist_mem.py
index 7da3bf1..fbd625d 100644
--- a/method/dist_mem.py
+++ b/method/dist_mem.py
@@ -261,7 +261,8 @@ class DistributionMemory(object):
     def load_distributions(self, load_file):
         path = osp.join('method/embedder/saved_distributions', load_file + '.emb')
         print('loading dists from ' + path)
-        ckpt = torch.load(path)
+        # ckpt = torch.load(path)
+        ckpt = torch.load(path, map_location=torch.device('cpu'))
 
         self.mem = ckpt['mem']
         self.mem_keys = ckpt['mem_keys']
diff --git a/method/embedder/embedder.py b/method/embedder/embedder.py
index 4d2dc0e..08e3297 100644
--- a/method/embedder/embedder.py
+++ b/method/embedder/embedder.py
@@ -23,8 +23,8 @@ import sys
 import os
 import os.path as osp
 from tqdm import tqdm
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 from rlf.rl import utils
 
 from torch.utils import data
diff --git a/requirements.txt b/requirements.txt
index 4cc4255..fcc248a 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,13 +1,14 @@
-absl-py==0.8.0
+absl-py
 argh==0.26.2
 astor==0.8.0
 backports.tempfile==1.0
 backports.weakref==1.0.post1
-cffi==1.12.3
+cffi
 chardet==3.0.4
 Click==7.0
+cloudpickle==3.0.0
 cycler==0.10.0
-Cython==0.29.13
+Cython<3
 decorator==4.4.0
 docker-pycreds==0.4.0
 future==0.17.1
@@ -18,60 +19,60 @@ glfw==1.8.3
 google-pasta==0.1.7
 gql==0.1.0
 graphql-core==2.2.1
-grpcio==1.24.0
+grpcio==1.59.3
 gym==0.10.8
-h5py==2.10.0
+h5py
 idna==2.8
-imageio==2.4.1
-joblib==0.13.2
+imageio==2.9.0
+joblib==1.3.2
 Keras-Applications==1.0.8
 Keras-Preprocessing==1.1.0
 kiwisolver==1.1.0
 libtmux==0.8.1
 lockfile==0.12.2
 Markdown==3.1.1
-matplotlib==3.1.2
+matplotlib==3.4
 moviepy==1.0.1
-mujoco-py==2.0.2.5
-numpy==1.15.2
+free-mujoco-py
+numpy==1.24.4
 nvidia-ml-py3==7.352.0
-opencv-python==4.0.0.21
-pandas==0.24.2
+opencv-python==4.9.0.80
+pandas==1.3.5
 pathtools==0.1.2
-Pillow==6.1.0
+Pillow==6.2.0
 promise==2.2.1
-protobuf==3.9.2
+protobuf==3.20.3
 psutil==5.6.3
 pycparser==2.19
-pygame==1.9.6
+pygame
 pyglet==1.4.4
-pymunk==5.4.2
+pymunk==6.6.0
 pyparsing==2.4.2
-PyQt5==5.13.2
-PyQt5-sip==12.7.0
+PyQt5==5.15.10
+PyQt5-sip==12.13.0
 python-dateutil==2.8.0
 pytz==2019.2
-PyYAML==5.1.2
+PyYAML
 requests==2.22.0
 Rx==1.6.1
-scikit-learn==0.21.3
-scipy==1.3.1
-seaborn==0.10.0
+scikit-learn
+scipy
+seaborn==0.13.2
 sentry-sdk==0.12.2
 shortuuid==0.5.0
 six==1.12.0
 sklearn==0.0
 smmap2==2.0.5
 subprocess32==3.5.4
-tensorboard==1.14.0
+tensorboard==2.13.0
 tensorboardX==1.8
-tensorflow==1.14.0
-tensorflow-estimator==1.14.0
+tensorflow==2.13.0rc0
+tensorflow-estimator
 termcolor==1.1.0
-torch==1.2.0
+torch
 tqdm==4.36.1
 urllib3==1.25.6
 wandb==0.8.3
 watchdog==0.9.0
-Werkzeug==0.16.0
+Werkzeug==1.0.1
 wrapt==1.11.2
diff --git a/rlf/baselines/vec_env/dummy_vec_env.py b/rlf/baselines/vec_env/dummy_vec_env.py
index 818bd53..4367f39 100644
--- a/rlf/baselines/vec_env/dummy_vec_env.py
+++ b/rlf/baselines/vec_env/dummy_vec_env.py
@@ -22,7 +22,7 @@ class DummyVecEnv(VecEnv):
         self.keys, shapes, dtypes = obs_space_info(obs_space)
 
         self.buf_obs = { k: np.zeros((self.num_envs,) + tuple(shapes[k]), dtype=dtypes[k]) for k in self.keys }
-        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool)
+        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool_)
         self.buf_rews  = np.zeros((self.num_envs,), dtype=np.float32)
         self.buf_infos = [{} for _ in range(self.num_envs)]
         self.actions = None
diff --git a/rlf/baselines/vec_env/shmem_vec_env.py b/rlf/baselines/vec_env/shmem_vec_env.py
index 7a4d78d..4d9fa7c 100644
--- a/rlf/baselines/vec_env/shmem_vec_env.py
+++ b/rlf/baselines/vec_env/shmem_vec_env.py
@@ -14,7 +14,7 @@ _NP_TO_CT = {np.float32: ctypes.c_float,
              np.int32: ctypes.c_int32,
              np.int8: ctypes.c_int8,
              np.uint8: ctypes.c_char,
-             np.bool: ctypes.c_bool}
+             np.bool_: ctypes.c_bool}
 
 
 class ShmemVecEnv(VecEnv):
diff --git a/rlf/main.py b/rlf/main.py
index dd7cd4f..dc304ee 100644
--- a/rlf/main.py
+++ b/rlf/main.py
@@ -95,6 +95,7 @@ def run_policy(run_settings):
     args.trajectory_len = None
     test_args.trajectory_len = None
 
+    print(args.num_processes)
     envs = make_vec_envs(args.env_name, args.seed, args.num_processes,
                          args.gamma, args.log_dir, args.device,
                          False, args.env_trans_fn, args)
ed09906ce33a6af77bef2e641a45f81306d2f1d4
diff --git a/arguments.py b/arguments.py
index dfc38fb..ec94316 100644
--- a/arguments.py
+++ b/arguments.py
@@ -14,7 +14,8 @@ def grid_args(args):
     set_if_none(args, 'exp_type', 'rnd')
 
     set_if_none(args, 'onehot_state', True)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'sample_clusters', False)
     set_if_none(args, 'action_set_size', 50)
     set_if_none(args, 'test_action_set_size', 50)
@@ -49,7 +50,8 @@ def grid_play_args(args):
         args.n_trajectories = 672
 
     set_if_none(args, 'emb_epochs', 10000)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 16)
     set_if_none(args, 'z_dim', 16)
     set_if_none(args, 'onehot_state', True)
@@ -66,7 +68,8 @@ def grid_play_args(args):
 
 
 def create_args(args):
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
 
     set_if_none(args, 'exp_type', 'NewMain')
     set_if_none(args, 'sample_clusters', False)
@@ -124,15 +127,18 @@ def create_play_args(args):
         args.hidden_dim_option = 128
         args.prefix = 'VideoCreate'
 
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
     args.action_random_sample = False
 
 def stack_args(args):
     set_if_none(args, 'exp_type', 'rnd')
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'action_set_size', 20)
     set_if_none(args, 'test_action_set_size', 20)
     set_if_none(args, 'separate_skip', True)
@@ -172,7 +178,8 @@ def stack_play_args(args):
     set_if_none(args, 'exp_type', 'rnd')
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'emb_epochs', 5000)
 
     if args.train_embeddings and args.n_trajectories == 1024:
@@ -196,8 +203,10 @@ def reco_args(args):
         set_if_none(args, 'action_set_size', 25)
     else:
         set_if_none(args, 'action_set_size', 500)
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'num_eval', 20)
     set_if_none(args, 'entropy_coef', 1e-2)
     set_if_none(args, 'test_action_set_size', 50)
diff --git a/envs/create_game/base_env.py b/envs/create_game/base_env.py
index 35ae827..987066c 100644
--- a/envs/create_game/base_env.py
+++ b/envs/create_game/base_env.py
@@ -123,8 +123,9 @@ class BaseEnv(gym.Env):
         Reset the environment
         """
         self._check_setup()
-        self.space.remove([*self.space.bodies, *self.space.shapes,
-                           *self.space.constraints])
+        # self.space.remove([*self.space.bodies, *self.space.shapes,
+        #                   *self.space.constraints])
+        self.space.remove(*self.space.bodies, *self.space.shapes, *self.space.constraints)
 
         self.ball_traces = []
         self.line_traces = []
diff --git a/envs/create_game/create_game.py b/envs/create_game/create_game.py
index ee5f677..968b4cd 100644
--- a/envs/create_game/create_game.py
+++ b/envs/create_game/create_game.py
@@ -241,7 +241,7 @@ class CreateGame(BaseEnv):
 
     def motion_stopped(self):
         all_objs = self.get_all_objs()
-        vel = np.array([np.sqrt(sum(x.shape.body.velocity ** 2))
+        vel = np.array([np.sqrt((x.shape.body.velocity.x **2 + x.shape.body.velocity.y ** 2))
                         for x in all_objs])
         if (vel < self.settings.min_velocity).all():
             self.zero_vel_steps += 1
diff --git a/envs/create_game/tools/ball.py b/envs/create_game/tools/ball.py
index 052cb47..807ce36 100644
--- a/envs/create_game/tools/ball.py
+++ b/envs/create_game/tools/ball.py
@@ -52,9 +52,10 @@ class Ball(GravityObj):
         if self.color == 'basketball':
             self.img.render(screen, scale, self.flipy)
         else:
-            draw_pos = scale * self.flipy(self.body.position)
-            draw_pos[0] = int(draw_pos[0])
-            draw_pos[1] = int(draw_pos[1])
+            draw_pos1 = scale * self.flipy(self.body.position)
+            draw_pos = pymunk.Vec2d(int(draw_pos1[0]), int(draw_pos1[1]))
+            # draw_pos[0] = int(draw_pos1[0])
+            # draw_pos[1] = int(draw_pos1[1])
 
             if self.is_trace:
                 draw_radius = max(2, int(scale * self.radius) // self.scale_radius)
diff --git a/envs/create_game/tools/funnel.py b/envs/create_game/tools/funnel.py
index 4619843..0f7d9ce 100644
--- a/envs/create_game/tools/funnel.py
+++ b/envs/create_game/tools/funnel.py
@@ -59,7 +59,7 @@ class Funnel(FixedPoly):
         funnel.collision_type = self.collision_type
         funnel.locations = [self.nozzle_position, self.v_1, self.v_2, self.v_3]
         self.shape = funnel
-        space.add(funnel)
+        space.add(funnel.get_body(), funnel)
         self.attached_shapes.append(funnel)
 
         h = space.add_collision_handler(1, self.collision_type)
diff --git a/envs/create_game/tools/poly.py b/envs/create_game/tools/poly.py
index e875ef5..85adee4 100644
--- a/envs/create_game/tools/poly.py
+++ b/envs/create_game/tools/poly.py
@@ -14,7 +14,7 @@ class FixedPoly(FixedObj):
         self.body = self._create_body(mass, moment)
         self.body.position = pm.Vec2d(pos[0], pos[1])
 
-        self.vertices = self.get_vertices(pm.Vec2d([0., 0.]), n_sides, angle, size)
+        self.vertices = self.get_vertices(pm.Vec2d(0., 0.), n_sides, angle, size)
 
         self.shape = pm.Poly(self.body, self.vertices)
         self.shape.friction = friction
@@ -72,7 +72,7 @@ class Star(FixedPoly):
 
         pointlist = []
         for v in self.vertices:
-            x, y = pm.Vec2d(v).rotated(self.shape.body.angle) + self.shape.body.position
+            x, y = pm.Vec2d(v[0], v[1]).rotated(self.shape.body.angle) + self.shape.body.position
             point = scale * self.flipy([x, y])
             pointlist.append([int(point[0]), int(point[1])])
 
diff --git a/main.py b/main.py
index 2619157..d0be0ad 100644
--- a/main.py
+++ b/main.py
@@ -7,14 +7,14 @@ from method.embedder.embedder import extract_dists
 from method.models.main_method import MainMethod
 from method.models.distance_method import DistanceMethod
 
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 
 from arguments import get_args
 from rlf import get_env_interface, RunSettings, run_policy
 
 import envs.recogym
-import envs.block_stack
+# import envs.block_stack
 import envs.interfaces
 import envs.create_game
 
diff --git a/method/dist_mem.py b/method/dist_mem.py
index 7da3bf1..fbd625d 100644
--- a/method/dist_mem.py
+++ b/method/dist_mem.py
@@ -261,7 +261,8 @@ class DistributionMemory(object):
     def load_distributions(self, load_file):
         path = osp.join('method/embedder/saved_distributions', load_file + '.emb')
         print('loading dists from ' + path)
-        ckpt = torch.load(path)
+        # ckpt = torch.load(path)
+        ckpt = torch.load(path, map_location=torch.device('cpu'))
 
         self.mem = ckpt['mem']
         self.mem_keys = ckpt['mem_keys']
diff --git a/method/embedder/embedder.py b/method/embedder/embedder.py
index 4d2dc0e..08e3297 100644
--- a/method/embedder/embedder.py
+++ b/method/embedder/embedder.py
@@ -23,8 +23,8 @@ import sys
 import os
 import os.path as osp
 from tqdm import tqdm
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 from rlf.rl import utils
 
 from torch.utils import data
diff --git a/requirements.txt b/requirements.txt
index 4cc4255..fcc248a 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,13 +1,14 @@
-absl-py==0.8.0
+absl-py
 argh==0.26.2
 astor==0.8.0
 backports.tempfile==1.0
 backports.weakref==1.0.post1
-cffi==1.12.3
+cffi
 chardet==3.0.4
 Click==7.0
+cloudpickle==3.0.0
 cycler==0.10.0
-Cython==0.29.13
+Cython<3
 decorator==4.4.0
 docker-pycreds==0.4.0
 future==0.17.1
@@ -18,60 +19,60 @@ glfw==1.8.3
 google-pasta==0.1.7
 gql==0.1.0
 graphql-core==2.2.1
-grpcio==1.24.0
+grpcio==1.59.3
 gym==0.10.8
-h5py==2.10.0
+h5py
 idna==2.8
-imageio==2.4.1
-joblib==0.13.2
+imageio==2.9.0
+joblib==1.3.2
 Keras-Applications==1.0.8
 Keras-Preprocessing==1.1.0
 kiwisolver==1.1.0
 libtmux==0.8.1
 lockfile==0.12.2
 Markdown==3.1.1
-matplotlib==3.1.2
+matplotlib==3.4
 moviepy==1.0.1
-mujoco-py==2.0.2.5
-numpy==1.15.2
+free-mujoco-py
+numpy==1.24.4
 nvidia-ml-py3==7.352.0
-opencv-python==4.0.0.21
-pandas==0.24.2
+opencv-python==4.9.0.80
+pandas==1.3.5
 pathtools==0.1.2
-Pillow==6.1.0
+Pillow==6.2.0
 promise==2.2.1
-protobuf==3.9.2
+protobuf==3.20.3
 psutil==5.6.3
 pycparser==2.19
-pygame==1.9.6
+pygame
 pyglet==1.4.4
-pymunk==5.4.2
+pymunk==6.6.0
 pyparsing==2.4.2
-PyQt5==5.13.2
-PyQt5-sip==12.7.0
+PyQt5==5.15.10
+PyQt5-sip==12.13.0
 python-dateutil==2.8.0
 pytz==2019.2
-PyYAML==5.1.2
+PyYAML
 requests==2.22.0
 Rx==1.6.1
-scikit-learn==0.21.3
-scipy==1.3.1
-seaborn==0.10.0
+scikit-learn
+scipy
+seaborn==0.13.2
 sentry-sdk==0.12.2
 shortuuid==0.5.0
 six==1.12.0
 sklearn==0.0
 smmap2==2.0.5
 subprocess32==3.5.4
-tensorboard==1.14.0
+tensorboard==2.13.0
 tensorboardX==1.8
-tensorflow==1.14.0
-tensorflow-estimator==1.14.0
+tensorflow==2.13.0rc0
+tensorflow-estimator
 termcolor==1.1.0
-torch==1.2.0
+torch
 tqdm==4.36.1
 urllib3==1.25.6
 wandb==0.8.3
 watchdog==0.9.0
-Werkzeug==0.16.0
+Werkzeug==1.0.1
 wrapt==1.11.2
diff --git a/rlf/baselines/vec_env/dummy_vec_env.py b/rlf/baselines/vec_env/dummy_vec_env.py
index 818bd53..4367f39 100644
--- a/rlf/baselines/vec_env/dummy_vec_env.py
+++ b/rlf/baselines/vec_env/dummy_vec_env.py
@@ -22,7 +22,7 @@ class DummyVecEnv(VecEnv):
         self.keys, shapes, dtypes = obs_space_info(obs_space)
 
         self.buf_obs = { k: np.zeros((self.num_envs,) + tuple(shapes[k]), dtype=dtypes[k]) for k in self.keys }
-        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool)
+        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool_)
         self.buf_rews  = np.zeros((self.num_envs,), dtype=np.float32)
         self.buf_infos = [{} for _ in range(self.num_envs)]
         self.actions = None
diff --git a/rlf/baselines/vec_env/shmem_vec_env.py b/rlf/baselines/vec_env/shmem_vec_env.py
index 7a4d78d..4d9fa7c 100644
--- a/rlf/baselines/vec_env/shmem_vec_env.py
+++ b/rlf/baselines/vec_env/shmem_vec_env.py
@@ -14,7 +14,7 @@ _NP_TO_CT = {np.float32: ctypes.c_float,
              np.int32: ctypes.c_int32,
              np.int8: ctypes.c_int8,
              np.uint8: ctypes.c_char,
-             np.bool: ctypes.c_bool}
+             np.bool_: ctypes.c_bool}
 
 
 class ShmemVecEnv(VecEnv):
diff --git a/rlf/main.py b/rlf/main.py
index dd7cd4f..dc304ee 100644
--- a/rlf/main.py
+++ b/rlf/main.py
@@ -95,6 +95,7 @@ def run_policy(run_settings):
     args.trajectory_len = None
     test_args.trajectory_len = None
 
+    print(args.num_processes)
     envs = make_vec_envs(args.env_name, args.seed, args.num_processes,
                          args.gamma, args.log_dir, args.device,
                          False, args.env_trans_fn, args)
ed09906ce33a6af77bef2e641a45f81306d2f1d4
diff --git a/arguments.py b/arguments.py
index dfc38fb..ec94316 100644
--- a/arguments.py
+++ b/arguments.py
@@ -14,7 +14,8 @@ def grid_args(args):
     set_if_none(args, 'exp_type', 'rnd')
 
     set_if_none(args, 'onehot_state', True)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'sample_clusters', False)
     set_if_none(args, 'action_set_size', 50)
     set_if_none(args, 'test_action_set_size', 50)
@@ -49,7 +50,8 @@ def grid_play_args(args):
         args.n_trajectories = 672
 
     set_if_none(args, 'emb_epochs', 10000)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 16)
     set_if_none(args, 'z_dim', 16)
     set_if_none(args, 'onehot_state', True)
@@ -66,7 +68,8 @@ def grid_play_args(args):
 
 
 def create_args(args):
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
 
     set_if_none(args, 'exp_type', 'NewMain')
     set_if_none(args, 'sample_clusters', False)
@@ -124,15 +127,18 @@ def create_play_args(args):
         args.hidden_dim_option = 128
         args.prefix = 'VideoCreate'
 
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
     args.action_random_sample = False
 
 def stack_args(args):
     set_if_none(args, 'exp_type', 'rnd')
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'action_set_size', 20)
     set_if_none(args, 'test_action_set_size', 20)
     set_if_none(args, 'separate_skip', True)
@@ -172,7 +178,8 @@ def stack_play_args(args):
     set_if_none(args, 'exp_type', 'rnd')
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'emb_epochs', 5000)
 
     if args.train_embeddings and args.n_trajectories == 1024:
@@ -196,8 +203,10 @@ def reco_args(args):
         set_if_none(args, 'action_set_size', 25)
     else:
         set_if_none(args, 'action_set_size', 500)
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'num_eval', 20)
     set_if_none(args, 'entropy_coef', 1e-2)
     set_if_none(args, 'test_action_set_size', 50)
diff --git a/envs/create_game/base_env.py b/envs/create_game/base_env.py
index 35ae827..987066c 100644
--- a/envs/create_game/base_env.py
+++ b/envs/create_game/base_env.py
@@ -123,8 +123,9 @@ class BaseEnv(gym.Env):
         Reset the environment
         """
         self._check_setup()
-        self.space.remove([*self.space.bodies, *self.space.shapes,
-                           *self.space.constraints])
+        # self.space.remove([*self.space.bodies, *self.space.shapes,
+        #                   *self.space.constraints])
+        self.space.remove(*self.space.bodies, *self.space.shapes, *self.space.constraints)
 
         self.ball_traces = []
         self.line_traces = []
diff --git a/envs/create_game/create_game.py b/envs/create_game/create_game.py
index ee5f677..968b4cd 100644
--- a/envs/create_game/create_game.py
+++ b/envs/create_game/create_game.py
@@ -241,7 +241,7 @@ class CreateGame(BaseEnv):
 
     def motion_stopped(self):
         all_objs = self.get_all_objs()
-        vel = np.array([np.sqrt(sum(x.shape.body.velocity ** 2))
+        vel = np.array([np.sqrt((x.shape.body.velocity.x **2 + x.shape.body.velocity.y ** 2))
                         for x in all_objs])
         if (vel < self.settings.min_velocity).all():
             self.zero_vel_steps += 1
diff --git a/envs/create_game/tools/ball.py b/envs/create_game/tools/ball.py
index 052cb47..807ce36 100644
--- a/envs/create_game/tools/ball.py
+++ b/envs/create_game/tools/ball.py
@@ -52,9 +52,10 @@ class Ball(GravityObj):
         if self.color == 'basketball':
             self.img.render(screen, scale, self.flipy)
         else:
-            draw_pos = scale * self.flipy(self.body.position)
-            draw_pos[0] = int(draw_pos[0])
-            draw_pos[1] = int(draw_pos[1])
+            draw_pos1 = scale * self.flipy(self.body.position)
+            draw_pos = pymunk.Vec2d(int(draw_pos1[0]), int(draw_pos1[1]))
+            # draw_pos[0] = int(draw_pos1[0])
+            # draw_pos[1] = int(draw_pos1[1])
 
             if self.is_trace:
                 draw_radius = max(2, int(scale * self.radius) // self.scale_radius)
diff --git a/envs/create_game/tools/funnel.py b/envs/create_game/tools/funnel.py
index 4619843..0f7d9ce 100644
--- a/envs/create_game/tools/funnel.py
+++ b/envs/create_game/tools/funnel.py
@@ -59,7 +59,7 @@ class Funnel(FixedPoly):
         funnel.collision_type = self.collision_type
         funnel.locations = [self.nozzle_position, self.v_1, self.v_2, self.v_3]
         self.shape = funnel
-        space.add(funnel)
+        space.add(funnel.get_body(), funnel)
         self.attached_shapes.append(funnel)
 
         h = space.add_collision_handler(1, self.collision_type)
diff --git a/envs/create_game/tools/poly.py b/envs/create_game/tools/poly.py
index e875ef5..85adee4 100644
--- a/envs/create_game/tools/poly.py
+++ b/envs/create_game/tools/poly.py
@@ -14,7 +14,7 @@ class FixedPoly(FixedObj):
         self.body = self._create_body(mass, moment)
         self.body.position = pm.Vec2d(pos[0], pos[1])
 
-        self.vertices = self.get_vertices(pm.Vec2d([0., 0.]), n_sides, angle, size)
+        self.vertices = self.get_vertices(pm.Vec2d(0., 0.), n_sides, angle, size)
 
         self.shape = pm.Poly(self.body, self.vertices)
         self.shape.friction = friction
@@ -72,7 +72,7 @@ class Star(FixedPoly):
 
         pointlist = []
         for v in self.vertices:
-            x, y = pm.Vec2d(v).rotated(self.shape.body.angle) + self.shape.body.position
+            x, y = pm.Vec2d(v[0], v[1]).rotated(self.shape.body.angle) + self.shape.body.position
             point = scale * self.flipy([x, y])
             pointlist.append([int(point[0]), int(point[1])])
 
diff --git a/main.py b/main.py
index 2619157..d0be0ad 100644
--- a/main.py
+++ b/main.py
@@ -7,14 +7,14 @@ from method.embedder.embedder import extract_dists
 from method.models.main_method import MainMethod
 from method.models.distance_method import DistanceMethod
 
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 
 from arguments import get_args
 from rlf import get_env_interface, RunSettings, run_policy
 
 import envs.recogym
-import envs.block_stack
+# import envs.block_stack
 import envs.interfaces
 import envs.create_game
 
diff --git a/method/dist_mem.py b/method/dist_mem.py
index 7da3bf1..fbd625d 100644
--- a/method/dist_mem.py
+++ b/method/dist_mem.py
@@ -261,7 +261,8 @@ class DistributionMemory(object):
     def load_distributions(self, load_file):
         path = osp.join('method/embedder/saved_distributions', load_file + '.emb')
         print('loading dists from ' + path)
-        ckpt = torch.load(path)
+        # ckpt = torch.load(path)
+        ckpt = torch.load(path, map_location=torch.device('cpu'))
 
         self.mem = ckpt['mem']
         self.mem_keys = ckpt['mem_keys']
diff --git a/method/embedder/embedder.py b/method/embedder/embedder.py
index 4d2dc0e..08e3297 100644
--- a/method/embedder/embedder.py
+++ b/method/embedder/embedder.py
@@ -23,8 +23,8 @@ import sys
 import os
 import os.path as osp
 from tqdm import tqdm
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 from rlf.rl import utils
 
 from torch.utils import data
diff --git a/requirements.txt b/requirements.txt
index 4cc4255..fcc248a 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,13 +1,14 @@
-absl-py==0.8.0
+absl-py
 argh==0.26.2
 astor==0.8.0
 backports.tempfile==1.0
 backports.weakref==1.0.post1
-cffi==1.12.3
+cffi
 chardet==3.0.4
 Click==7.0
+cloudpickle==3.0.0
 cycler==0.10.0
-Cython==0.29.13
+Cython<3
 decorator==4.4.0
 docker-pycreds==0.4.0
 future==0.17.1
@@ -18,60 +19,60 @@ glfw==1.8.3
 google-pasta==0.1.7
 gql==0.1.0
 graphql-core==2.2.1
-grpcio==1.24.0
+grpcio==1.59.3
 gym==0.10.8
-h5py==2.10.0
+h5py
 idna==2.8
-imageio==2.4.1
-joblib==0.13.2
+imageio==2.9.0
+joblib==1.3.2
 Keras-Applications==1.0.8
 Keras-Preprocessing==1.1.0
 kiwisolver==1.1.0
 libtmux==0.8.1
 lockfile==0.12.2
 Markdown==3.1.1
-matplotlib==3.1.2
+matplotlib==3.4
 moviepy==1.0.1
-mujoco-py==2.0.2.5
-numpy==1.15.2
+free-mujoco-py
+numpy==1.24.4
 nvidia-ml-py3==7.352.0
-opencv-python==4.0.0.21
-pandas==0.24.2
+opencv-python==4.9.0.80
+pandas==1.3.5
 pathtools==0.1.2
-Pillow==6.1.0
+Pillow==6.2.0
 promise==2.2.1
-protobuf==3.9.2
+protobuf==3.20.3
 psutil==5.6.3
 pycparser==2.19
-pygame==1.9.6
+pygame
 pyglet==1.4.4
-pymunk==5.4.2
+pymunk==6.6.0
 pyparsing==2.4.2
-PyQt5==5.13.2
-PyQt5-sip==12.7.0
+PyQt5==5.15.10
+PyQt5-sip==12.13.0
 python-dateutil==2.8.0
 pytz==2019.2
-PyYAML==5.1.2
+PyYAML
 requests==2.22.0
 Rx==1.6.1
-scikit-learn==0.21.3
-scipy==1.3.1
-seaborn==0.10.0
+scikit-learn
+scipy
+seaborn==0.13.2
 sentry-sdk==0.12.2
 shortuuid==0.5.0
 six==1.12.0
 sklearn==0.0
 smmap2==2.0.5
 subprocess32==3.5.4
-tensorboard==1.14.0
+tensorboard==2.13.0
 tensorboardX==1.8
-tensorflow==1.14.0
-tensorflow-estimator==1.14.0
+tensorflow==2.13.0rc0
+tensorflow-estimator
 termcolor==1.1.0
-torch==1.2.0
+torch
 tqdm==4.36.1
 urllib3==1.25.6
 wandb==0.8.3
 watchdog==0.9.0
-Werkzeug==0.16.0
+Werkzeug==1.0.1
 wrapt==1.11.2
diff --git a/rlf/baselines/vec_env/dummy_vec_env.py b/rlf/baselines/vec_env/dummy_vec_env.py
index 818bd53..4367f39 100644
--- a/rlf/baselines/vec_env/dummy_vec_env.py
+++ b/rlf/baselines/vec_env/dummy_vec_env.py
@@ -22,7 +22,7 @@ class DummyVecEnv(VecEnv):
         self.keys, shapes, dtypes = obs_space_info(obs_space)
 
         self.buf_obs = { k: np.zeros((self.num_envs,) + tuple(shapes[k]), dtype=dtypes[k]) for k in self.keys }
-        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool)
+        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool_)
         self.buf_rews  = np.zeros((self.num_envs,), dtype=np.float32)
         self.buf_infos = [{} for _ in range(self.num_envs)]
         self.actions = None
diff --git a/rlf/baselines/vec_env/shmem_vec_env.py b/rlf/baselines/vec_env/shmem_vec_env.py
index 7a4d78d..4d9fa7c 100644
--- a/rlf/baselines/vec_env/shmem_vec_env.py
+++ b/rlf/baselines/vec_env/shmem_vec_env.py
@@ -14,7 +14,7 @@ _NP_TO_CT = {np.float32: ctypes.c_float,
              np.int32: ctypes.c_int32,
              np.int8: ctypes.c_int8,
              np.uint8: ctypes.c_char,
-             np.bool: ctypes.c_bool}
+             np.bool_: ctypes.c_bool}
 
 
 class ShmemVecEnv(VecEnv):
diff --git a/rlf/main.py b/rlf/main.py
index dd7cd4f..dc304ee 100644
--- a/rlf/main.py
+++ b/rlf/main.py
@@ -95,6 +95,7 @@ def run_policy(run_settings):
     args.trajectory_len = None
     test_args.trajectory_len = None
 
+    print(args.num_processes)
     envs = make_vec_envs(args.env_name, args.seed, args.num_processes,
                          args.gamma, args.log_dir, args.device,
                          False, args.env_trans_fn, args)
diff --git a/rlf/rl/envs.py b/rlf/rl/envs.py
index b41b6b9..e59734f 100755
--- a/rlf/rl/envs.py
+++ b/rlf/rl/envs.py
@@ -264,8 +264,8 @@ class VecPyTorchFrameStack(VecEnvWrapper):
     def step_wait(self):
         obs, rews, news, infos = self.venv.step_wait()
 
-        self.stacked_obs[:, :-self.shape_dim0] = \
-            self.stacked_obs[:, self.shape_dim0:]
+        a = self.stacked_obs.clone()
+        self.stacked_obs[:, :-self.shape_dim0] = a[:, self.shape_dim0:]
         for (i, new) in enumerate(news):
             if new:
                 self.stacked_obs[i] = 0
ed09906ce33a6af77bef2e641a45f81306d2f1d4
diff --git a/arguments.py b/arguments.py
index dfc38fb..ec94316 100644
--- a/arguments.py
+++ b/arguments.py
@@ -14,7 +14,8 @@ def grid_args(args):
     set_if_none(args, 'exp_type', 'rnd')
 
     set_if_none(args, 'onehot_state', True)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'sample_clusters', False)
     set_if_none(args, 'action_set_size', 50)
     set_if_none(args, 'test_action_set_size', 50)
@@ -49,7 +50,8 @@ def grid_play_args(args):
         args.n_trajectories = 672
 
     set_if_none(args, 'emb_epochs', 10000)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 16)
     set_if_none(args, 'z_dim', 16)
     set_if_none(args, 'onehot_state', True)
@@ -66,7 +68,8 @@ def grid_play_args(args):
 
 
 def create_args(args):
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
 
     set_if_none(args, 'exp_type', 'NewMain')
     set_if_none(args, 'sample_clusters', False)
@@ -124,15 +127,18 @@ def create_play_args(args):
         args.hidden_dim_option = 128
         args.prefix = 'VideoCreate'
 
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
     args.action_random_sample = False
 
 def stack_args(args):
     set_if_none(args, 'exp_type', 'rnd')
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'action_set_size', 20)
     set_if_none(args, 'test_action_set_size', 20)
     set_if_none(args, 'separate_skip', True)
@@ -172,7 +178,8 @@ def stack_play_args(args):
     set_if_none(args, 'exp_type', 'rnd')
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'emb_epochs', 5000)
 
     if args.train_embeddings and args.n_trajectories == 1024:
@@ -196,8 +203,10 @@ def reco_args(args):
         set_if_none(args, 'action_set_size', 25)
     else:
         set_if_none(args, 'action_set_size', 500)
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'num_eval', 20)
     set_if_none(args, 'entropy_coef', 1e-2)
     set_if_none(args, 'test_action_set_size', 50)
diff --git a/envs/create_game/base_env.py b/envs/create_game/base_env.py
index 35ae827..987066c 100644
--- a/envs/create_game/base_env.py
+++ b/envs/create_game/base_env.py
@@ -123,8 +123,9 @@ class BaseEnv(gym.Env):
         Reset the environment
         """
         self._check_setup()
-        self.space.remove([*self.space.bodies, *self.space.shapes,
-                           *self.space.constraints])
+        # self.space.remove([*self.space.bodies, *self.space.shapes,
+        #                   *self.space.constraints])
+        self.space.remove(*self.space.bodies, *self.space.shapes, *self.space.constraints)
 
         self.ball_traces = []
         self.line_traces = []
diff --git a/envs/create_game/create_game.py b/envs/create_game/create_game.py
index ee5f677..968b4cd 100644
--- a/envs/create_game/create_game.py
+++ b/envs/create_game/create_game.py
@@ -241,7 +241,7 @@ class CreateGame(BaseEnv):
 
     def motion_stopped(self):
         all_objs = self.get_all_objs()
-        vel = np.array([np.sqrt(sum(x.shape.body.velocity ** 2))
+        vel = np.array([np.sqrt((x.shape.body.velocity.x **2 + x.shape.body.velocity.y ** 2))
                         for x in all_objs])
         if (vel < self.settings.min_velocity).all():
             self.zero_vel_steps += 1
diff --git a/envs/create_game/tools/ball.py b/envs/create_game/tools/ball.py
index 052cb47..807ce36 100644
--- a/envs/create_game/tools/ball.py
+++ b/envs/create_game/tools/ball.py
@@ -52,9 +52,10 @@ class Ball(GravityObj):
         if self.color == 'basketball':
             self.img.render(screen, scale, self.flipy)
         else:
-            draw_pos = scale * self.flipy(self.body.position)
-            draw_pos[0] = int(draw_pos[0])
-            draw_pos[1] = int(draw_pos[1])
+            draw_pos1 = scale * self.flipy(self.body.position)
+            draw_pos = pymunk.Vec2d(int(draw_pos1[0]), int(draw_pos1[1]))
+            # draw_pos[0] = int(draw_pos1[0])
+            # draw_pos[1] = int(draw_pos1[1])
 
             if self.is_trace:
                 draw_radius = max(2, int(scale * self.radius) // self.scale_radius)
diff --git a/envs/create_game/tools/bucket.py b/envs/create_game/tools/bucket.py
index 494768f..e8ce1bc 100644
--- a/envs/create_game/tools/bucket.py
+++ b/envs/create_game/tools/bucket.py
@@ -59,7 +59,7 @@ class Bucket(FixedPoly):
         bucket.collision_type = self.collision_type
         bucket.locations = [self.center_position, self.v_1, self.v_2, self.v_3, self.v_4]
         self.shape = bucket
-        space.add(bucket)
+        space.add(bucket.get_body(), bucket)
         self.attached_shapes.append(bucket)
 
         # Called when 1 (movable objects) collides with 3 (bucket)
diff --git a/envs/create_game/tools/cannon.py b/envs/create_game/tools/cannon.py
index 62c8ba9..13ad978 100644
--- a/envs/create_game/tools/cannon.py
+++ b/envs/create_game/tools/cannon.py
@@ -60,7 +60,7 @@ class Cannon(FixedRect):
         cannon.collision_type = self.collision_type
         cannon.properties = (self.new_pos, self.launch_dir)
         self.shape = cannon
-        space.add(cannon)
+        space.add(cannon.get_body(), cannon)
         self.attached_shapes.append(cannon)
 
         h = space.add_collision_handler(1, self.collision_type)
diff --git a/envs/create_game/tools/funnel.py b/envs/create_game/tools/funnel.py
index 4619843..0f7d9ce 100644
--- a/envs/create_game/tools/funnel.py
+++ b/envs/create_game/tools/funnel.py
@@ -59,7 +59,7 @@ class Funnel(FixedPoly):
         funnel.collision_type = self.collision_type
         funnel.locations = [self.nozzle_position, self.v_1, self.v_2, self.v_3]
         self.shape = funnel
-        space.add(funnel)
+        space.add(funnel.get_body(), funnel)
         self.attached_shapes.append(funnel)
 
         h = space.add_collision_handler(1, self.collision_type)
diff --git a/envs/create_game/tools/poly.py b/envs/create_game/tools/poly.py
index e875ef5..85adee4 100644
--- a/envs/create_game/tools/poly.py
+++ b/envs/create_game/tools/poly.py
@@ -14,7 +14,7 @@ class FixedPoly(FixedObj):
         self.body = self._create_body(mass, moment)
         self.body.position = pm.Vec2d(pos[0], pos[1])
 
-        self.vertices = self.get_vertices(pm.Vec2d([0., 0.]), n_sides, angle, size)
+        self.vertices = self.get_vertices(pm.Vec2d(0., 0.), n_sides, angle, size)
 
         self.shape = pm.Poly(self.body, self.vertices)
         self.shape.friction = friction
@@ -72,7 +72,7 @@ class Star(FixedPoly):
 
         pointlist = []
         for v in self.vertices:
-            x, y = pm.Vec2d(v).rotated(self.shape.body.angle) + self.shape.body.position
+            x, y = pm.Vec2d(v[0], v[1]).rotated(self.shape.body.angle) + self.shape.body.position
             point = scale * self.flipy([x, y])
             pointlist.append([int(point[0]), int(point[1])])
 
diff --git a/main.py b/main.py
index 2619157..d0be0ad 100644
--- a/main.py
+++ b/main.py
@@ -7,14 +7,14 @@ from method.embedder.embedder import extract_dists
 from method.models.main_method import MainMethod
 from method.models.distance_method import DistanceMethod
 
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 
 from arguments import get_args
 from rlf import get_env_interface, RunSettings, run_policy
 
 import envs.recogym
-import envs.block_stack
+# import envs.block_stack
 import envs.interfaces
 import envs.create_game
 
diff --git a/method/dist_mem.py b/method/dist_mem.py
index 7da3bf1..fbd625d 100644
--- a/method/dist_mem.py
+++ b/method/dist_mem.py
@@ -261,7 +261,8 @@ class DistributionMemory(object):
     def load_distributions(self, load_file):
         path = osp.join('method/embedder/saved_distributions', load_file + '.emb')
         print('loading dists from ' + path)
-        ckpt = torch.load(path)
+        # ckpt = torch.load(path)
+        ckpt = torch.load(path, map_location=torch.device('cpu'))
 
         self.mem = ckpt['mem']
         self.mem_keys = ckpt['mem_keys']
diff --git a/method/embedder/embedder.py b/method/embedder/embedder.py
index 4d2dc0e..08e3297 100644
--- a/method/embedder/embedder.py
+++ b/method/embedder/embedder.py
@@ -23,8 +23,8 @@ import sys
 import os
 import os.path as osp
 from tqdm import tqdm
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 from rlf.rl import utils
 
 from torch.utils import data
diff --git a/requirements.txt b/requirements.txt
index 4cc4255..fcc248a 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,13 +1,14 @@
-absl-py==0.8.0
+absl-py
 argh==0.26.2
 astor==0.8.0
 backports.tempfile==1.0
 backports.weakref==1.0.post1
-cffi==1.12.3
+cffi
 chardet==3.0.4
 Click==7.0
+cloudpickle==3.0.0
 cycler==0.10.0
-Cython==0.29.13
+Cython<3
 decorator==4.4.0
 docker-pycreds==0.4.0
 future==0.17.1
@@ -18,60 +19,60 @@ glfw==1.8.3
 google-pasta==0.1.7
 gql==0.1.0
 graphql-core==2.2.1
-grpcio==1.24.0
+grpcio==1.59.3
 gym==0.10.8
-h5py==2.10.0
+h5py
 idna==2.8
-imageio==2.4.1
-joblib==0.13.2
+imageio==2.9.0
+joblib==1.3.2
 Keras-Applications==1.0.8
 Keras-Preprocessing==1.1.0
 kiwisolver==1.1.0
 libtmux==0.8.1
 lockfile==0.12.2
 Markdown==3.1.1
-matplotlib==3.1.2
+matplotlib==3.4
 moviepy==1.0.1
-mujoco-py==2.0.2.5
-numpy==1.15.2
+free-mujoco-py
+numpy==1.24.4
 nvidia-ml-py3==7.352.0
-opencv-python==4.0.0.21
-pandas==0.24.2
+opencv-python==4.9.0.80
+pandas==1.3.5
 pathtools==0.1.2
-Pillow==6.1.0
+Pillow==6.2.0
 promise==2.2.1
-protobuf==3.9.2
+protobuf==3.20.3
 psutil==5.6.3
 pycparser==2.19
-pygame==1.9.6
+pygame
 pyglet==1.4.4
-pymunk==5.4.2
+pymunk==6.6.0
 pyparsing==2.4.2
-PyQt5==5.13.2
-PyQt5-sip==12.7.0
+PyQt5==5.15.10
+PyQt5-sip==12.13.0
 python-dateutil==2.8.0
 pytz==2019.2
-PyYAML==5.1.2
+PyYAML
 requests==2.22.0
 Rx==1.6.1
-scikit-learn==0.21.3
-scipy==1.3.1
-seaborn==0.10.0
+scikit-learn
+scipy
+seaborn==0.13.2
 sentry-sdk==0.12.2
 shortuuid==0.5.0
 six==1.12.0
 sklearn==0.0
 smmap2==2.0.5
 subprocess32==3.5.4
-tensorboard==1.14.0
+tensorboard==2.13.0
 tensorboardX==1.8
-tensorflow==1.14.0
-tensorflow-estimator==1.14.0
+tensorflow==2.13.0rc0
+tensorflow-estimator
 termcolor==1.1.0
-torch==1.2.0
+torch
 tqdm==4.36.1
 urllib3==1.25.6
 wandb==0.8.3
 watchdog==0.9.0
-Werkzeug==0.16.0
+Werkzeug==1.0.1
 wrapt==1.11.2
diff --git a/rlf/baselines/vec_env/dummy_vec_env.py b/rlf/baselines/vec_env/dummy_vec_env.py
index 818bd53..4367f39 100644
--- a/rlf/baselines/vec_env/dummy_vec_env.py
+++ b/rlf/baselines/vec_env/dummy_vec_env.py
@@ -22,7 +22,7 @@ class DummyVecEnv(VecEnv):
         self.keys, shapes, dtypes = obs_space_info(obs_space)
 
         self.buf_obs = { k: np.zeros((self.num_envs,) + tuple(shapes[k]), dtype=dtypes[k]) for k in self.keys }
-        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool)
+        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool_)
         self.buf_rews  = np.zeros((self.num_envs,), dtype=np.float32)
         self.buf_infos = [{} for _ in range(self.num_envs)]
         self.actions = None
diff --git a/rlf/baselines/vec_env/shmem_vec_env.py b/rlf/baselines/vec_env/shmem_vec_env.py
index 7a4d78d..4d9fa7c 100644
--- a/rlf/baselines/vec_env/shmem_vec_env.py
+++ b/rlf/baselines/vec_env/shmem_vec_env.py
@@ -14,7 +14,7 @@ _NP_TO_CT = {np.float32: ctypes.c_float,
              np.int32: ctypes.c_int32,
              np.int8: ctypes.c_int8,
              np.uint8: ctypes.c_char,
-             np.bool: ctypes.c_bool}
+             np.bool_: ctypes.c_bool}
 
 
 class ShmemVecEnv(VecEnv):
diff --git a/rlf/main.py b/rlf/main.py
index dd7cd4f..dc304ee 100644
--- a/rlf/main.py
+++ b/rlf/main.py
@@ -95,6 +95,7 @@ def run_policy(run_settings):
     args.trajectory_len = None
     test_args.trajectory_len = None
 
+    print(args.num_processes)
     envs = make_vec_envs(args.env_name, args.seed, args.num_processes,
                          args.gamma, args.log_dir, args.device,
                          False, args.env_trans_fn, args)
diff --git a/rlf/rl/envs.py b/rlf/rl/envs.py
index b41b6b9..e59734f 100755
--- a/rlf/rl/envs.py
+++ b/rlf/rl/envs.py
@@ -264,8 +264,8 @@ class VecPyTorchFrameStack(VecEnvWrapper):
     def step_wait(self):
         obs, rews, news, infos = self.venv.step_wait()
 
-        self.stacked_obs[:, :-self.shape_dim0] = \
-            self.stacked_obs[:, self.shape_dim0:]
+        a = self.stacked_obs.clone()
+        self.stacked_obs[:, :-self.shape_dim0] = a[:, self.shape_dim0:]
         for (i, new) in enumerate(news):
             if new:
                 self.stacked_obs[i] = 0
ed09906ce33a6af77bef2e641a45f81306d2f1d4
diff --git a/arguments.py b/arguments.py
index dfc38fb..ec94316 100644
--- a/arguments.py
+++ b/arguments.py
@@ -14,7 +14,8 @@ def grid_args(args):
     set_if_none(args, 'exp_type', 'rnd')
 
     set_if_none(args, 'onehot_state', True)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'sample_clusters', False)
     set_if_none(args, 'action_set_size', 50)
     set_if_none(args, 'test_action_set_size', 50)
@@ -49,7 +50,8 @@ def grid_play_args(args):
         args.n_trajectories = 672
 
     set_if_none(args, 'emb_epochs', 10000)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 16)
     set_if_none(args, 'z_dim', 16)
     set_if_none(args, 'onehot_state', True)
@@ -66,7 +68,8 @@ def grid_play_args(args):
 
 
 def create_args(args):
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
 
     set_if_none(args, 'exp_type', 'NewMain')
     set_if_none(args, 'sample_clusters', False)
@@ -124,15 +127,18 @@ def create_play_args(args):
         args.hidden_dim_option = 128
         args.prefix = 'VideoCreate'
 
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
     args.action_random_sample = False
 
 def stack_args(args):
     set_if_none(args, 'exp_type', 'rnd')
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'action_set_size', 20)
     set_if_none(args, 'test_action_set_size', 20)
     set_if_none(args, 'separate_skip', True)
@@ -172,7 +178,8 @@ def stack_play_args(args):
     set_if_none(args, 'exp_type', 'rnd')
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'emb_epochs', 5000)
 
     if args.train_embeddings and args.n_trajectories == 1024:
@@ -196,8 +203,10 @@ def reco_args(args):
         set_if_none(args, 'action_set_size', 25)
     else:
         set_if_none(args, 'action_set_size', 500)
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'num_eval', 20)
     set_if_none(args, 'entropy_coef', 1e-2)
     set_if_none(args, 'test_action_set_size', 50)
diff --git a/envs/create_game/base_env.py b/envs/create_game/base_env.py
index 35ae827..987066c 100644
--- a/envs/create_game/base_env.py
+++ b/envs/create_game/base_env.py
@@ -123,8 +123,9 @@ class BaseEnv(gym.Env):
         Reset the environment
         """
         self._check_setup()
-        self.space.remove([*self.space.bodies, *self.space.shapes,
-                           *self.space.constraints])
+        # self.space.remove([*self.space.bodies, *self.space.shapes,
+        #                   *self.space.constraints])
+        self.space.remove(*self.space.bodies, *self.space.shapes, *self.space.constraints)
 
         self.ball_traces = []
         self.line_traces = []
diff --git a/envs/create_game/create_game.py b/envs/create_game/create_game.py
index ee5f677..968b4cd 100644
--- a/envs/create_game/create_game.py
+++ b/envs/create_game/create_game.py
@@ -241,7 +241,7 @@ class CreateGame(BaseEnv):
 
     def motion_stopped(self):
         all_objs = self.get_all_objs()
-        vel = np.array([np.sqrt(sum(x.shape.body.velocity ** 2))
+        vel = np.array([np.sqrt((x.shape.body.velocity.x **2 + x.shape.body.velocity.y ** 2))
                         for x in all_objs])
         if (vel < self.settings.min_velocity).all():
             self.zero_vel_steps += 1
diff --git a/envs/create_game/tools/ball.py b/envs/create_game/tools/ball.py
index 052cb47..807ce36 100644
--- a/envs/create_game/tools/ball.py
+++ b/envs/create_game/tools/ball.py
@@ -52,9 +52,10 @@ class Ball(GravityObj):
         if self.color == 'basketball':
             self.img.render(screen, scale, self.flipy)
         else:
-            draw_pos = scale * self.flipy(self.body.position)
-            draw_pos[0] = int(draw_pos[0])
-            draw_pos[1] = int(draw_pos[1])
+            draw_pos1 = scale * self.flipy(self.body.position)
+            draw_pos = pymunk.Vec2d(int(draw_pos1[0]), int(draw_pos1[1]))
+            # draw_pos[0] = int(draw_pos1[0])
+            # draw_pos[1] = int(draw_pos1[1])
 
             if self.is_trace:
                 draw_radius = max(2, int(scale * self.radius) // self.scale_radius)
diff --git a/envs/create_game/tools/basic_obj.py b/envs/create_game/tools/basic_obj.py
index 86e48c4..b1670c2 100644
--- a/envs/create_game/tools/basic_obj.py
+++ b/envs/create_game/tools/basic_obj.py
@@ -37,9 +37,9 @@ class BasicObj(object):
 
     def remove_from_space(self, space):
         space.remove(
-            [*self.attached_bodies,
-            *self.attached_shapes,
-            *self.attached_constraints]
+            self.attached_bodies,
+            self.attached_shapes,
+            self.attached_constraints
             )
 
     def render(self, screen, scale=None, anti_alias=False):
diff --git a/envs/create_game/tools/bucket.py b/envs/create_game/tools/bucket.py
index 494768f..e8ce1bc 100644
--- a/envs/create_game/tools/bucket.py
+++ b/envs/create_game/tools/bucket.py
@@ -59,7 +59,7 @@ class Bucket(FixedPoly):
         bucket.collision_type = self.collision_type
         bucket.locations = [self.center_position, self.v_1, self.v_2, self.v_3, self.v_4]
         self.shape = bucket
-        space.add(bucket)
+        space.add(bucket.get_body(), bucket)
         self.attached_shapes.append(bucket)
 
         # Called when 1 (movable objects) collides with 3 (bucket)
diff --git a/envs/create_game/tools/cannon.py b/envs/create_game/tools/cannon.py
index 62c8ba9..13ad978 100644
--- a/envs/create_game/tools/cannon.py
+++ b/envs/create_game/tools/cannon.py
@@ -60,7 +60,7 @@ class Cannon(FixedRect):
         cannon.collision_type = self.collision_type
         cannon.properties = (self.new_pos, self.launch_dir)
         self.shape = cannon
-        space.add(cannon)
+        space.add(cannon.get_body(), cannon)
         self.attached_shapes.append(cannon)
 
         h = space.add_collision_handler(1, self.collision_type)
diff --git a/envs/create_game/tools/funnel.py b/envs/create_game/tools/funnel.py
index 4619843..0f7d9ce 100644
--- a/envs/create_game/tools/funnel.py
+++ b/envs/create_game/tools/funnel.py
@@ -59,7 +59,7 @@ class Funnel(FixedPoly):
         funnel.collision_type = self.collision_type
         funnel.locations = [self.nozzle_position, self.v_1, self.v_2, self.v_3]
         self.shape = funnel
-        space.add(funnel)
+        space.add(funnel.get_body(), funnel)
         self.attached_shapes.append(funnel)
 
         h = space.add_collision_handler(1, self.collision_type)
diff --git a/envs/create_game/tools/poly.py b/envs/create_game/tools/poly.py
index e875ef5..85adee4 100644
--- a/envs/create_game/tools/poly.py
+++ b/envs/create_game/tools/poly.py
@@ -14,7 +14,7 @@ class FixedPoly(FixedObj):
         self.body = self._create_body(mass, moment)
         self.body.position = pm.Vec2d(pos[0], pos[1])
 
-        self.vertices = self.get_vertices(pm.Vec2d([0., 0.]), n_sides, angle, size)
+        self.vertices = self.get_vertices(pm.Vec2d(0., 0.), n_sides, angle, size)
 
         self.shape = pm.Poly(self.body, self.vertices)
         self.shape.friction = friction
@@ -72,7 +72,7 @@ class Star(FixedPoly):
 
         pointlist = []
         for v in self.vertices:
-            x, y = pm.Vec2d(v).rotated(self.shape.body.angle) + self.shape.body.position
+            x, y = pm.Vec2d(v[0], v[1]).rotated(self.shape.body.angle) + self.shape.body.position
             point = scale * self.flipy([x, y])
             pointlist.append([int(point[0]), int(point[1])])
 
diff --git a/main.py b/main.py
index 2619157..d0be0ad 100644
--- a/main.py
+++ b/main.py
@@ -7,14 +7,14 @@ from method.embedder.embedder import extract_dists
 from method.models.main_method import MainMethod
 from method.models.distance_method import DistanceMethod
 
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 
 from arguments import get_args
 from rlf import get_env_interface, RunSettings, run_policy
 
 import envs.recogym
-import envs.block_stack
+# import envs.block_stack
 import envs.interfaces
 import envs.create_game
 
diff --git a/method/dist_mem.py b/method/dist_mem.py
index 7da3bf1..fbd625d 100644
--- a/method/dist_mem.py
+++ b/method/dist_mem.py
@@ -261,7 +261,8 @@ class DistributionMemory(object):
     def load_distributions(self, load_file):
         path = osp.join('method/embedder/saved_distributions', load_file + '.emb')
         print('loading dists from ' + path)
-        ckpt = torch.load(path)
+        # ckpt = torch.load(path)
+        ckpt = torch.load(path, map_location=torch.device('cpu'))
 
         self.mem = ckpt['mem']
         self.mem_keys = ckpt['mem_keys']
diff --git a/method/embedder/embedder.py b/method/embedder/embedder.py
index 4d2dc0e..08e3297 100644
--- a/method/embedder/embedder.py
+++ b/method/embedder/embedder.py
@@ -23,8 +23,8 @@ import sys
 import os
 import os.path as osp
 from tqdm import tqdm
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 from rlf.rl import utils
 
 from torch.utils import data
diff --git a/requirements.txt b/requirements.txt
index 4cc4255..fcc248a 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,13 +1,14 @@
-absl-py==0.8.0
+absl-py
 argh==0.26.2
 astor==0.8.0
 backports.tempfile==1.0
 backports.weakref==1.0.post1
-cffi==1.12.3
+cffi
 chardet==3.0.4
 Click==7.0
+cloudpickle==3.0.0
 cycler==0.10.0
-Cython==0.29.13
+Cython<3
 decorator==4.4.0
 docker-pycreds==0.4.0
 future==0.17.1
@@ -18,60 +19,60 @@ glfw==1.8.3
 google-pasta==0.1.7
 gql==0.1.0
 graphql-core==2.2.1
-grpcio==1.24.0
+grpcio==1.59.3
 gym==0.10.8
-h5py==2.10.0
+h5py
 idna==2.8
-imageio==2.4.1
-joblib==0.13.2
+imageio==2.9.0
+joblib==1.3.2
 Keras-Applications==1.0.8
 Keras-Preprocessing==1.1.0
 kiwisolver==1.1.0
 libtmux==0.8.1
 lockfile==0.12.2
 Markdown==3.1.1
-matplotlib==3.1.2
+matplotlib==3.4
 moviepy==1.0.1
-mujoco-py==2.0.2.5
-numpy==1.15.2
+free-mujoco-py
+numpy==1.24.4
 nvidia-ml-py3==7.352.0
-opencv-python==4.0.0.21
-pandas==0.24.2
+opencv-python==4.9.0.80
+pandas==1.3.5
 pathtools==0.1.2
-Pillow==6.1.0
+Pillow==6.2.0
 promise==2.2.1
-protobuf==3.9.2
+protobuf==3.20.3
 psutil==5.6.3
 pycparser==2.19
-pygame==1.9.6
+pygame
 pyglet==1.4.4
-pymunk==5.4.2
+pymunk==6.6.0
 pyparsing==2.4.2
-PyQt5==5.13.2
-PyQt5-sip==12.7.0
+PyQt5==5.15.10
+PyQt5-sip==12.13.0
 python-dateutil==2.8.0
 pytz==2019.2
-PyYAML==5.1.2
+PyYAML
 requests==2.22.0
 Rx==1.6.1
-scikit-learn==0.21.3
-scipy==1.3.1
-seaborn==0.10.0
+scikit-learn
+scipy
+seaborn==0.13.2
 sentry-sdk==0.12.2
 shortuuid==0.5.0
 six==1.12.0
 sklearn==0.0
 smmap2==2.0.5
 subprocess32==3.5.4
-tensorboard==1.14.0
+tensorboard==2.13.0
 tensorboardX==1.8
-tensorflow==1.14.0
-tensorflow-estimator==1.14.0
+tensorflow==2.13.0rc0
+tensorflow-estimator
 termcolor==1.1.0
-torch==1.2.0
+torch
 tqdm==4.36.1
 urllib3==1.25.6
 wandb==0.8.3
 watchdog==0.9.0
-Werkzeug==0.16.0
+Werkzeug==1.0.1
 wrapt==1.11.2
diff --git a/rlf/baselines/vec_env/dummy_vec_env.py b/rlf/baselines/vec_env/dummy_vec_env.py
index 818bd53..4367f39 100644
--- a/rlf/baselines/vec_env/dummy_vec_env.py
+++ b/rlf/baselines/vec_env/dummy_vec_env.py
@@ -22,7 +22,7 @@ class DummyVecEnv(VecEnv):
         self.keys, shapes, dtypes = obs_space_info(obs_space)
 
         self.buf_obs = { k: np.zeros((self.num_envs,) + tuple(shapes[k]), dtype=dtypes[k]) for k in self.keys }
-        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool)
+        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool_)
         self.buf_rews  = np.zeros((self.num_envs,), dtype=np.float32)
         self.buf_infos = [{} for _ in range(self.num_envs)]
         self.actions = None
diff --git a/rlf/baselines/vec_env/shmem_vec_env.py b/rlf/baselines/vec_env/shmem_vec_env.py
index 7a4d78d..4d9fa7c 100644
--- a/rlf/baselines/vec_env/shmem_vec_env.py
+++ b/rlf/baselines/vec_env/shmem_vec_env.py
@@ -14,7 +14,7 @@ _NP_TO_CT = {np.float32: ctypes.c_float,
              np.int32: ctypes.c_int32,
              np.int8: ctypes.c_int8,
              np.uint8: ctypes.c_char,
-             np.bool: ctypes.c_bool}
+             np.bool_: ctypes.c_bool}
 
 
 class ShmemVecEnv(VecEnv):
diff --git a/rlf/main.py b/rlf/main.py
index dd7cd4f..dc304ee 100644
--- a/rlf/main.py
+++ b/rlf/main.py
@@ -95,6 +95,7 @@ def run_policy(run_settings):
     args.trajectory_len = None
     test_args.trajectory_len = None
 
+    print(args.num_processes)
     envs = make_vec_envs(args.env_name, args.seed, args.num_processes,
                          args.gamma, args.log_dir, args.device,
                          False, args.env_trans_fn, args)
diff --git a/rlf/rl/envs.py b/rlf/rl/envs.py
index b41b6b9..e59734f 100755
--- a/rlf/rl/envs.py
+++ b/rlf/rl/envs.py
@@ -264,8 +264,8 @@ class VecPyTorchFrameStack(VecEnvWrapper):
     def step_wait(self):
         obs, rews, news, infos = self.venv.step_wait()
 
-        self.stacked_obs[:, :-self.shape_dim0] = \
-            self.stacked_obs[:, self.shape_dim0:]
+        a = self.stacked_obs.clone()
+        self.stacked_obs[:, :-self.shape_dim0] = a[:, self.shape_dim0:]
         for (i, new) in enumerate(news):
             if new:
                 self.stacked_obs[i] = 0
ed09906ce33a6af77bef2e641a45f81306d2f1d4
diff --git a/arguments.py b/arguments.py
index dfc38fb..ec94316 100644
--- a/arguments.py
+++ b/arguments.py
@@ -14,7 +14,8 @@ def grid_args(args):
     set_if_none(args, 'exp_type', 'rnd')
 
     set_if_none(args, 'onehot_state', True)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'sample_clusters', False)
     set_if_none(args, 'action_set_size', 50)
     set_if_none(args, 'test_action_set_size', 50)
@@ -49,7 +50,8 @@ def grid_play_args(args):
         args.n_trajectories = 672
 
     set_if_none(args, 'emb_epochs', 10000)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 16)
     set_if_none(args, 'z_dim', 16)
     set_if_none(args, 'onehot_state', True)
@@ -66,7 +68,8 @@ def grid_play_args(args):
 
 
 def create_args(args):
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
 
     set_if_none(args, 'exp_type', 'NewMain')
     set_if_none(args, 'sample_clusters', False)
@@ -124,15 +127,18 @@ def create_play_args(args):
         args.hidden_dim_option = 128
         args.prefix = 'VideoCreate'
 
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
     args.action_random_sample = False
 
 def stack_args(args):
     set_if_none(args, 'exp_type', 'rnd')
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'action_set_size', 20)
     set_if_none(args, 'test_action_set_size', 20)
     set_if_none(args, 'separate_skip', True)
@@ -172,7 +178,8 @@ def stack_play_args(args):
     set_if_none(args, 'exp_type', 'rnd')
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'emb_epochs', 5000)
 
     if args.train_embeddings and args.n_trajectories == 1024:
@@ -196,8 +203,10 @@ def reco_args(args):
         set_if_none(args, 'action_set_size', 25)
     else:
         set_if_none(args, 'action_set_size', 500)
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'num_eval', 20)
     set_if_none(args, 'entropy_coef', 1e-2)
     set_if_none(args, 'test_action_set_size', 50)
diff --git a/envs/create_game/base_env.py b/envs/create_game/base_env.py
index 35ae827..987066c 100644
--- a/envs/create_game/base_env.py
+++ b/envs/create_game/base_env.py
@@ -123,8 +123,9 @@ class BaseEnv(gym.Env):
         Reset the environment
         """
         self._check_setup()
-        self.space.remove([*self.space.bodies, *self.space.shapes,
-                           *self.space.constraints])
+        # self.space.remove([*self.space.bodies, *self.space.shapes,
+        #                   *self.space.constraints])
+        self.space.remove(*self.space.bodies, *self.space.shapes, *self.space.constraints)
 
         self.ball_traces = []
         self.line_traces = []
diff --git a/envs/create_game/create_game.py b/envs/create_game/create_game.py
index ee5f677..968b4cd 100644
--- a/envs/create_game/create_game.py
+++ b/envs/create_game/create_game.py
@@ -241,7 +241,7 @@ class CreateGame(BaseEnv):
 
     def motion_stopped(self):
         all_objs = self.get_all_objs()
-        vel = np.array([np.sqrt(sum(x.shape.body.velocity ** 2))
+        vel = np.array([np.sqrt((x.shape.body.velocity.x **2 + x.shape.body.velocity.y ** 2))
                         for x in all_objs])
         if (vel < self.settings.min_velocity).all():
             self.zero_vel_steps += 1
diff --git a/envs/create_game/tools/ball.py b/envs/create_game/tools/ball.py
index 052cb47..807ce36 100644
--- a/envs/create_game/tools/ball.py
+++ b/envs/create_game/tools/ball.py
@@ -52,9 +52,10 @@ class Ball(GravityObj):
         if self.color == 'basketball':
             self.img.render(screen, scale, self.flipy)
         else:
-            draw_pos = scale * self.flipy(self.body.position)
-            draw_pos[0] = int(draw_pos[0])
-            draw_pos[1] = int(draw_pos[1])
+            draw_pos1 = scale * self.flipy(self.body.position)
+            draw_pos = pymunk.Vec2d(int(draw_pos1[0]), int(draw_pos1[1]))
+            # draw_pos[0] = int(draw_pos1[0])
+            # draw_pos[1] = int(draw_pos1[1])
 
             if self.is_trace:
                 draw_radius = max(2, int(scale * self.radius) // self.scale_radius)
diff --git a/envs/create_game/tools/basic_obj.py b/envs/create_game/tools/basic_obj.py
index 86e48c4..b1670c2 100644
--- a/envs/create_game/tools/basic_obj.py
+++ b/envs/create_game/tools/basic_obj.py
@@ -37,9 +37,9 @@ class BasicObj(object):
 
     def remove_from_space(self, space):
         space.remove(
-            [*self.attached_bodies,
-            *self.attached_shapes,
-            *self.attached_constraints]
+            self.attached_bodies,
+            self.attached_shapes,
+            self.attached_constraints
             )
 
     def render(self, screen, scale=None, anti_alias=False):
diff --git a/envs/create_game/tools/bucket.py b/envs/create_game/tools/bucket.py
index 494768f..e8ce1bc 100644
--- a/envs/create_game/tools/bucket.py
+++ b/envs/create_game/tools/bucket.py
@@ -59,7 +59,7 @@ class Bucket(FixedPoly):
         bucket.collision_type = self.collision_type
         bucket.locations = [self.center_position, self.v_1, self.v_2, self.v_3, self.v_4]
         self.shape = bucket
-        space.add(bucket)
+        space.add(bucket.get_body(), bucket)
         self.attached_shapes.append(bucket)
 
         # Called when 1 (movable objects) collides with 3 (bucket)
diff --git a/envs/create_game/tools/cannon.py b/envs/create_game/tools/cannon.py
index 62c8ba9..215f1e4 100644
--- a/envs/create_game/tools/cannon.py
+++ b/envs/create_game/tools/cannon.py
@@ -60,7 +60,7 @@ class Cannon(FixedRect):
         cannon.collision_type = self.collision_type
         cannon.properties = (self.new_pos, self.launch_dir)
         self.shape = cannon
-        space.add(cannon)
+        space.add(self.get_body(), cannon)
         self.attached_shapes.append(cannon)
 
         h = space.add_collision_handler(1, self.collision_type)
diff --git a/envs/create_game/tools/funnel.py b/envs/create_game/tools/funnel.py
index 4619843..0f7d9ce 100644
--- a/envs/create_game/tools/funnel.py
+++ b/envs/create_game/tools/funnel.py
@@ -59,7 +59,7 @@ class Funnel(FixedPoly):
         funnel.collision_type = self.collision_type
         funnel.locations = [self.nozzle_position, self.v_1, self.v_2, self.v_3]
         self.shape = funnel
-        space.add(funnel)
+        space.add(funnel.get_body(), funnel)
         self.attached_shapes.append(funnel)
 
         h = space.add_collision_handler(1, self.collision_type)
diff --git a/envs/create_game/tools/poly.py b/envs/create_game/tools/poly.py
index e875ef5..85adee4 100644
--- a/envs/create_game/tools/poly.py
+++ b/envs/create_game/tools/poly.py
@@ -14,7 +14,7 @@ class FixedPoly(FixedObj):
         self.body = self._create_body(mass, moment)
         self.body.position = pm.Vec2d(pos[0], pos[1])
 
-        self.vertices = self.get_vertices(pm.Vec2d([0., 0.]), n_sides, angle, size)
+        self.vertices = self.get_vertices(pm.Vec2d(0., 0.), n_sides, angle, size)
 
         self.shape = pm.Poly(self.body, self.vertices)
         self.shape.friction = friction
@@ -72,7 +72,7 @@ class Star(FixedPoly):
 
         pointlist = []
         for v in self.vertices:
-            x, y = pm.Vec2d(v).rotated(self.shape.body.angle) + self.shape.body.position
+            x, y = pm.Vec2d(v[0], v[1]).rotated(self.shape.body.angle) + self.shape.body.position
             point = scale * self.flipy([x, y])
             pointlist.append([int(point[0]), int(point[1])])
 
diff --git a/main.py b/main.py
index 2619157..d0be0ad 100644
--- a/main.py
+++ b/main.py
@@ -7,14 +7,14 @@ from method.embedder.embedder import extract_dists
 from method.models.main_method import MainMethod
 from method.models.distance_method import DistanceMethod
 
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 
 from arguments import get_args
 from rlf import get_env_interface, RunSettings, run_policy
 
 import envs.recogym
-import envs.block_stack
+# import envs.block_stack
 import envs.interfaces
 import envs.create_game
 
diff --git a/method/dist_mem.py b/method/dist_mem.py
index 7da3bf1..fbd625d 100644
--- a/method/dist_mem.py
+++ b/method/dist_mem.py
@@ -261,7 +261,8 @@ class DistributionMemory(object):
     def load_distributions(self, load_file):
         path = osp.join('method/embedder/saved_distributions', load_file + '.emb')
         print('loading dists from ' + path)
-        ckpt = torch.load(path)
+        # ckpt = torch.load(path)
+        ckpt = torch.load(path, map_location=torch.device('cpu'))
 
         self.mem = ckpt['mem']
         self.mem_keys = ckpt['mem_keys']
diff --git a/method/embedder/embedder.py b/method/embedder/embedder.py
index 4d2dc0e..08e3297 100644
--- a/method/embedder/embedder.py
+++ b/method/embedder/embedder.py
@@ -23,8 +23,8 @@ import sys
 import os
 import os.path as osp
 from tqdm import tqdm
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 from rlf.rl import utils
 
 from torch.utils import data
diff --git a/requirements.txt b/requirements.txt
index 4cc4255..fcc248a 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,13 +1,14 @@
-absl-py==0.8.0
+absl-py
 argh==0.26.2
 astor==0.8.0
 backports.tempfile==1.0
 backports.weakref==1.0.post1
-cffi==1.12.3
+cffi
 chardet==3.0.4
 Click==7.0
+cloudpickle==3.0.0
 cycler==0.10.0
-Cython==0.29.13
+Cython<3
 decorator==4.4.0
 docker-pycreds==0.4.0
 future==0.17.1
@@ -18,60 +19,60 @@ glfw==1.8.3
 google-pasta==0.1.7
 gql==0.1.0
 graphql-core==2.2.1
-grpcio==1.24.0
+grpcio==1.59.3
 gym==0.10.8
-h5py==2.10.0
+h5py
 idna==2.8
-imageio==2.4.1
-joblib==0.13.2
+imageio==2.9.0
+joblib==1.3.2
 Keras-Applications==1.0.8
 Keras-Preprocessing==1.1.0
 kiwisolver==1.1.0
 libtmux==0.8.1
 lockfile==0.12.2
 Markdown==3.1.1
-matplotlib==3.1.2
+matplotlib==3.4
 moviepy==1.0.1
-mujoco-py==2.0.2.5
-numpy==1.15.2
+free-mujoco-py
+numpy==1.24.4
 nvidia-ml-py3==7.352.0
-opencv-python==4.0.0.21
-pandas==0.24.2
+opencv-python==4.9.0.80
+pandas==1.3.5
 pathtools==0.1.2
-Pillow==6.1.0
+Pillow==6.2.0
 promise==2.2.1
-protobuf==3.9.2
+protobuf==3.20.3
 psutil==5.6.3
 pycparser==2.19
-pygame==1.9.6
+pygame
 pyglet==1.4.4
-pymunk==5.4.2
+pymunk==6.6.0
 pyparsing==2.4.2
-PyQt5==5.13.2
-PyQt5-sip==12.7.0
+PyQt5==5.15.10
+PyQt5-sip==12.13.0
 python-dateutil==2.8.0
 pytz==2019.2
-PyYAML==5.1.2
+PyYAML
 requests==2.22.0
 Rx==1.6.1
-scikit-learn==0.21.3
-scipy==1.3.1
-seaborn==0.10.0
+scikit-learn
+scipy
+seaborn==0.13.2
 sentry-sdk==0.12.2
 shortuuid==0.5.0
 six==1.12.0
 sklearn==0.0
 smmap2==2.0.5
 subprocess32==3.5.4
-tensorboard==1.14.0
+tensorboard==2.13.0
 tensorboardX==1.8
-tensorflow==1.14.0
-tensorflow-estimator==1.14.0
+tensorflow==2.13.0rc0
+tensorflow-estimator
 termcolor==1.1.0
-torch==1.2.0
+torch
 tqdm==4.36.1
 urllib3==1.25.6
 wandb==0.8.3
 watchdog==0.9.0
-Werkzeug==0.16.0
+Werkzeug==1.0.1
 wrapt==1.11.2
diff --git a/rlf/baselines/vec_env/dummy_vec_env.py b/rlf/baselines/vec_env/dummy_vec_env.py
index 818bd53..4367f39 100644
--- a/rlf/baselines/vec_env/dummy_vec_env.py
+++ b/rlf/baselines/vec_env/dummy_vec_env.py
@@ -22,7 +22,7 @@ class DummyVecEnv(VecEnv):
         self.keys, shapes, dtypes = obs_space_info(obs_space)
 
         self.buf_obs = { k: np.zeros((self.num_envs,) + tuple(shapes[k]), dtype=dtypes[k]) for k in self.keys }
-        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool)
+        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool_)
         self.buf_rews  = np.zeros((self.num_envs,), dtype=np.float32)
         self.buf_infos = [{} for _ in range(self.num_envs)]
         self.actions = None
diff --git a/rlf/baselines/vec_env/shmem_vec_env.py b/rlf/baselines/vec_env/shmem_vec_env.py
index 7a4d78d..4d9fa7c 100644
--- a/rlf/baselines/vec_env/shmem_vec_env.py
+++ b/rlf/baselines/vec_env/shmem_vec_env.py
@@ -14,7 +14,7 @@ _NP_TO_CT = {np.float32: ctypes.c_float,
              np.int32: ctypes.c_int32,
              np.int8: ctypes.c_int8,
              np.uint8: ctypes.c_char,
-             np.bool: ctypes.c_bool}
+             np.bool_: ctypes.c_bool}
 
 
 class ShmemVecEnv(VecEnv):
diff --git a/rlf/main.py b/rlf/main.py
index dd7cd4f..dc304ee 100644
--- a/rlf/main.py
+++ b/rlf/main.py
@@ -95,6 +95,7 @@ def run_policy(run_settings):
     args.trajectory_len = None
     test_args.trajectory_len = None
 
+    print(args.num_processes)
     envs = make_vec_envs(args.env_name, args.seed, args.num_processes,
                          args.gamma, args.log_dir, args.device,
                          False, args.env_trans_fn, args)
diff --git a/rlf/rl/envs.py b/rlf/rl/envs.py
index b41b6b9..e59734f 100755
--- a/rlf/rl/envs.py
+++ b/rlf/rl/envs.py
@@ -264,8 +264,8 @@ class VecPyTorchFrameStack(VecEnvWrapper):
     def step_wait(self):
         obs, rews, news, infos = self.venv.step_wait()
 
-        self.stacked_obs[:, :-self.shape_dim0] = \
-            self.stacked_obs[:, self.shape_dim0:]
+        a = self.stacked_obs.clone()
+        self.stacked_obs[:, :-self.shape_dim0] = a[:, self.shape_dim0:]
         for (i, new) in enumerate(news):
             if new:
                 self.stacked_obs[i] = 0
ed09906ce33a6af77bef2e641a45f81306d2f1d4
diff --git a/arguments.py b/arguments.py
index dfc38fb..ec94316 100644
--- a/arguments.py
+++ b/arguments.py
@@ -14,7 +14,8 @@ def grid_args(args):
     set_if_none(args, 'exp_type', 'rnd')
 
     set_if_none(args, 'onehot_state', True)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'sample_clusters', False)
     set_if_none(args, 'action_set_size', 50)
     set_if_none(args, 'test_action_set_size', 50)
@@ -49,7 +50,8 @@ def grid_play_args(args):
         args.n_trajectories = 672
 
     set_if_none(args, 'emb_epochs', 10000)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 16)
     set_if_none(args, 'z_dim', 16)
     set_if_none(args, 'onehot_state', True)
@@ -66,7 +68,8 @@ def grid_play_args(args):
 
 
 def create_args(args):
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
 
     set_if_none(args, 'exp_type', 'NewMain')
     set_if_none(args, 'sample_clusters', False)
@@ -124,15 +127,18 @@ def create_play_args(args):
         args.hidden_dim_option = 128
         args.prefix = 'VideoCreate'
 
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
     args.action_random_sample = False
 
 def stack_args(args):
     set_if_none(args, 'exp_type', 'rnd')
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'action_set_size', 20)
     set_if_none(args, 'test_action_set_size', 20)
     set_if_none(args, 'separate_skip', True)
@@ -172,7 +178,8 @@ def stack_play_args(args):
     set_if_none(args, 'exp_type', 'rnd')
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'emb_epochs', 5000)
 
     if args.train_embeddings and args.n_trajectories == 1024:
@@ -196,8 +203,10 @@ def reco_args(args):
         set_if_none(args, 'action_set_size', 25)
     else:
         set_if_none(args, 'action_set_size', 500)
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'num_eval', 20)
     set_if_none(args, 'entropy_coef', 1e-2)
     set_if_none(args, 'test_action_set_size', 50)
diff --git a/envs/create_game/base_env.py b/envs/create_game/base_env.py
index 35ae827..987066c 100644
--- a/envs/create_game/base_env.py
+++ b/envs/create_game/base_env.py
@@ -123,8 +123,9 @@ class BaseEnv(gym.Env):
         Reset the environment
         """
         self._check_setup()
-        self.space.remove([*self.space.bodies, *self.space.shapes,
-                           *self.space.constraints])
+        # self.space.remove([*self.space.bodies, *self.space.shapes,
+        #                   *self.space.constraints])
+        self.space.remove(*self.space.bodies, *self.space.shapes, *self.space.constraints)
 
         self.ball_traces = []
         self.line_traces = []
diff --git a/envs/create_game/create_game.py b/envs/create_game/create_game.py
index ee5f677..968b4cd 100644
--- a/envs/create_game/create_game.py
+++ b/envs/create_game/create_game.py
@@ -241,7 +241,7 @@ class CreateGame(BaseEnv):
 
     def motion_stopped(self):
         all_objs = self.get_all_objs()
-        vel = np.array([np.sqrt(sum(x.shape.body.velocity ** 2))
+        vel = np.array([np.sqrt((x.shape.body.velocity.x **2 + x.shape.body.velocity.y ** 2))
                         for x in all_objs])
         if (vel < self.settings.min_velocity).all():
             self.zero_vel_steps += 1
diff --git a/envs/create_game/tools/ball.py b/envs/create_game/tools/ball.py
index 052cb47..807ce36 100644
--- a/envs/create_game/tools/ball.py
+++ b/envs/create_game/tools/ball.py
@@ -52,9 +52,10 @@ class Ball(GravityObj):
         if self.color == 'basketball':
             self.img.render(screen, scale, self.flipy)
         else:
-            draw_pos = scale * self.flipy(self.body.position)
-            draw_pos[0] = int(draw_pos[0])
-            draw_pos[1] = int(draw_pos[1])
+            draw_pos1 = scale * self.flipy(self.body.position)
+            draw_pos = pymunk.Vec2d(int(draw_pos1[0]), int(draw_pos1[1]))
+            # draw_pos[0] = int(draw_pos1[0])
+            # draw_pos[1] = int(draw_pos1[1])
 
             if self.is_trace:
                 draw_radius = max(2, int(scale * self.radius) // self.scale_radius)
diff --git a/envs/create_game/tools/basic_obj.py b/envs/create_game/tools/basic_obj.py
index 86e48c4..b1670c2 100644
--- a/envs/create_game/tools/basic_obj.py
+++ b/envs/create_game/tools/basic_obj.py
@@ -37,9 +37,9 @@ class BasicObj(object):
 
     def remove_from_space(self, space):
         space.remove(
-            [*self.attached_bodies,
-            *self.attached_shapes,
-            *self.attached_constraints]
+            self.attached_bodies,
+            self.attached_shapes,
+            self.attached_constraints
             )
 
     def render(self, screen, scale=None, anti_alias=False):
diff --git a/envs/create_game/tools/bucket.py b/envs/create_game/tools/bucket.py
index 494768f..580b615 100644
--- a/envs/create_game/tools/bucket.py
+++ b/envs/create_game/tools/bucket.py
@@ -59,7 +59,7 @@ class Bucket(FixedPoly):
         bucket.collision_type = self.collision_type
         bucket.locations = [self.center_position, self.v_1, self.v_2, self.v_3, self.v_4]
         self.shape = bucket
-        space.add(bucket)
+        space.add(self.get_body(), bucket)
         self.attached_shapes.append(bucket)
 
         # Called when 1 (movable objects) collides with 3 (bucket)
diff --git a/envs/create_game/tools/cannon.py b/envs/create_game/tools/cannon.py
index 62c8ba9..215f1e4 100644
--- a/envs/create_game/tools/cannon.py
+++ b/envs/create_game/tools/cannon.py
@@ -60,7 +60,7 @@ class Cannon(FixedRect):
         cannon.collision_type = self.collision_type
         cannon.properties = (self.new_pos, self.launch_dir)
         self.shape = cannon
-        space.add(cannon)
+        space.add(self.get_body(), cannon)
         self.attached_shapes.append(cannon)
 
         h = space.add_collision_handler(1, self.collision_type)
diff --git a/envs/create_game/tools/funnel.py b/envs/create_game/tools/funnel.py
index 4619843..0f7d9ce 100644
--- a/envs/create_game/tools/funnel.py
+++ b/envs/create_game/tools/funnel.py
@@ -59,7 +59,7 @@ class Funnel(FixedPoly):
         funnel.collision_type = self.collision_type
         funnel.locations = [self.nozzle_position, self.v_1, self.v_2, self.v_3]
         self.shape = funnel
-        space.add(funnel)
+        space.add(funnel.get_body(), funnel)
         self.attached_shapes.append(funnel)
 
         h = space.add_collision_handler(1, self.collision_type)
diff --git a/envs/create_game/tools/poly.py b/envs/create_game/tools/poly.py
index e875ef5..85adee4 100644
--- a/envs/create_game/tools/poly.py
+++ b/envs/create_game/tools/poly.py
@@ -14,7 +14,7 @@ class FixedPoly(FixedObj):
         self.body = self._create_body(mass, moment)
         self.body.position = pm.Vec2d(pos[0], pos[1])
 
-        self.vertices = self.get_vertices(pm.Vec2d([0., 0.]), n_sides, angle, size)
+        self.vertices = self.get_vertices(pm.Vec2d(0., 0.), n_sides, angle, size)
 
         self.shape = pm.Poly(self.body, self.vertices)
         self.shape.friction = friction
@@ -72,7 +72,7 @@ class Star(FixedPoly):
 
         pointlist = []
         for v in self.vertices:
-            x, y = pm.Vec2d(v).rotated(self.shape.body.angle) + self.shape.body.position
+            x, y = pm.Vec2d(v[0], v[1]).rotated(self.shape.body.angle) + self.shape.body.position
             point = scale * self.flipy([x, y])
             pointlist.append([int(point[0]), int(point[1])])
 
diff --git a/main.py b/main.py
index 2619157..d0be0ad 100644
--- a/main.py
+++ b/main.py
@@ -7,14 +7,14 @@ from method.embedder.embedder import extract_dists
 from method.models.main_method import MainMethod
 from method.models.distance_method import DistanceMethod
 
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 
 from arguments import get_args
 from rlf import get_env_interface, RunSettings, run_policy
 
 import envs.recogym
-import envs.block_stack
+# import envs.block_stack
 import envs.interfaces
 import envs.create_game
 
diff --git a/method/dist_mem.py b/method/dist_mem.py
index 7da3bf1..fbd625d 100644
--- a/method/dist_mem.py
+++ b/method/dist_mem.py
@@ -261,7 +261,8 @@ class DistributionMemory(object):
     def load_distributions(self, load_file):
         path = osp.join('method/embedder/saved_distributions', load_file + '.emb')
         print('loading dists from ' + path)
-        ckpt = torch.load(path)
+        # ckpt = torch.load(path)
+        ckpt = torch.load(path, map_location=torch.device('cpu'))
 
         self.mem = ckpt['mem']
         self.mem_keys = ckpt['mem_keys']
diff --git a/method/embedder/embedder.py b/method/embedder/embedder.py
index 4d2dc0e..08e3297 100644
--- a/method/embedder/embedder.py
+++ b/method/embedder/embedder.py
@@ -23,8 +23,8 @@ import sys
 import os
 import os.path as osp
 from tqdm import tqdm
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 from rlf.rl import utils
 
 from torch.utils import data
diff --git a/requirements.txt b/requirements.txt
index 4cc4255..fcc248a 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,13 +1,14 @@
-absl-py==0.8.0
+absl-py
 argh==0.26.2
 astor==0.8.0
 backports.tempfile==1.0
 backports.weakref==1.0.post1
-cffi==1.12.3
+cffi
 chardet==3.0.4
 Click==7.0
+cloudpickle==3.0.0
 cycler==0.10.0
-Cython==0.29.13
+Cython<3
 decorator==4.4.0
 docker-pycreds==0.4.0
 future==0.17.1
@@ -18,60 +19,60 @@ glfw==1.8.3
 google-pasta==0.1.7
 gql==0.1.0
 graphql-core==2.2.1
-grpcio==1.24.0
+grpcio==1.59.3
 gym==0.10.8
-h5py==2.10.0
+h5py
 idna==2.8
-imageio==2.4.1
-joblib==0.13.2
+imageio==2.9.0
+joblib==1.3.2
 Keras-Applications==1.0.8
 Keras-Preprocessing==1.1.0
 kiwisolver==1.1.0
 libtmux==0.8.1
 lockfile==0.12.2
 Markdown==3.1.1
-matplotlib==3.1.2
+matplotlib==3.4
 moviepy==1.0.1
-mujoco-py==2.0.2.5
-numpy==1.15.2
+free-mujoco-py
+numpy==1.24.4
 nvidia-ml-py3==7.352.0
-opencv-python==4.0.0.21
-pandas==0.24.2
+opencv-python==4.9.0.80
+pandas==1.3.5
 pathtools==0.1.2
-Pillow==6.1.0
+Pillow==6.2.0
 promise==2.2.1
-protobuf==3.9.2
+protobuf==3.20.3
 psutil==5.6.3
 pycparser==2.19
-pygame==1.9.6
+pygame
 pyglet==1.4.4
-pymunk==5.4.2
+pymunk==6.6.0
 pyparsing==2.4.2
-PyQt5==5.13.2
-PyQt5-sip==12.7.0
+PyQt5==5.15.10
+PyQt5-sip==12.13.0
 python-dateutil==2.8.0
 pytz==2019.2
-PyYAML==5.1.2
+PyYAML
 requests==2.22.0
 Rx==1.6.1
-scikit-learn==0.21.3
-scipy==1.3.1
-seaborn==0.10.0
+scikit-learn
+scipy
+seaborn==0.13.2
 sentry-sdk==0.12.2
 shortuuid==0.5.0
 six==1.12.0
 sklearn==0.0
 smmap2==2.0.5
 subprocess32==3.5.4
-tensorboard==1.14.0
+tensorboard==2.13.0
 tensorboardX==1.8
-tensorflow==1.14.0
-tensorflow-estimator==1.14.0
+tensorflow==2.13.0rc0
+tensorflow-estimator
 termcolor==1.1.0
-torch==1.2.0
+torch
 tqdm==4.36.1
 urllib3==1.25.6
 wandb==0.8.3
 watchdog==0.9.0
-Werkzeug==0.16.0
+Werkzeug==1.0.1
 wrapt==1.11.2
diff --git a/rlf/baselines/vec_env/dummy_vec_env.py b/rlf/baselines/vec_env/dummy_vec_env.py
index 818bd53..4367f39 100644
--- a/rlf/baselines/vec_env/dummy_vec_env.py
+++ b/rlf/baselines/vec_env/dummy_vec_env.py
@@ -22,7 +22,7 @@ class DummyVecEnv(VecEnv):
         self.keys, shapes, dtypes = obs_space_info(obs_space)
 
         self.buf_obs = { k: np.zeros((self.num_envs,) + tuple(shapes[k]), dtype=dtypes[k]) for k in self.keys }
-        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool)
+        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool_)
         self.buf_rews  = np.zeros((self.num_envs,), dtype=np.float32)
         self.buf_infos = [{} for _ in range(self.num_envs)]
         self.actions = None
diff --git a/rlf/baselines/vec_env/shmem_vec_env.py b/rlf/baselines/vec_env/shmem_vec_env.py
index 7a4d78d..4d9fa7c 100644
--- a/rlf/baselines/vec_env/shmem_vec_env.py
+++ b/rlf/baselines/vec_env/shmem_vec_env.py
@@ -14,7 +14,7 @@ _NP_TO_CT = {np.float32: ctypes.c_float,
              np.int32: ctypes.c_int32,
              np.int8: ctypes.c_int8,
              np.uint8: ctypes.c_char,
-             np.bool: ctypes.c_bool}
+             np.bool_: ctypes.c_bool}
 
 
 class ShmemVecEnv(VecEnv):
diff --git a/rlf/main.py b/rlf/main.py
index dd7cd4f..dc304ee 100644
--- a/rlf/main.py
+++ b/rlf/main.py
@@ -95,6 +95,7 @@ def run_policy(run_settings):
     args.trajectory_len = None
     test_args.trajectory_len = None
 
+    print(args.num_processes)
     envs = make_vec_envs(args.env_name, args.seed, args.num_processes,
                          args.gamma, args.log_dir, args.device,
                          False, args.env_trans_fn, args)
diff --git a/rlf/rl/envs.py b/rlf/rl/envs.py
index b41b6b9..e59734f 100755
--- a/rlf/rl/envs.py
+++ b/rlf/rl/envs.py
@@ -264,8 +264,8 @@ class VecPyTorchFrameStack(VecEnvWrapper):
     def step_wait(self):
         obs, rews, news, infos = self.venv.step_wait()
 
-        self.stacked_obs[:, :-self.shape_dim0] = \
-            self.stacked_obs[:, self.shape_dim0:]
+        a = self.stacked_obs.clone()
+        self.stacked_obs[:, :-self.shape_dim0] = a[:, self.shape_dim0:]
         for (i, new) in enumerate(news):
             if new:
                 self.stacked_obs[i] = 0
ed09906ce33a6af77bef2e641a45f81306d2f1d4
diff --git a/arguments.py b/arguments.py
index dfc38fb..ec94316 100644
--- a/arguments.py
+++ b/arguments.py
@@ -14,7 +14,8 @@ def grid_args(args):
     set_if_none(args, 'exp_type', 'rnd')
 
     set_if_none(args, 'onehot_state', True)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'sample_clusters', False)
     set_if_none(args, 'action_set_size', 50)
     set_if_none(args, 'test_action_set_size', 50)
@@ -49,7 +50,8 @@ def grid_play_args(args):
         args.n_trajectories = 672
 
     set_if_none(args, 'emb_epochs', 10000)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 16)
     set_if_none(args, 'z_dim', 16)
     set_if_none(args, 'onehot_state', True)
@@ -66,7 +68,8 @@ def grid_play_args(args):
 
 
 def create_args(args):
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
 
     set_if_none(args, 'exp_type', 'NewMain')
     set_if_none(args, 'sample_clusters', False)
@@ -124,15 +127,18 @@ def create_play_args(args):
         args.hidden_dim_option = 128
         args.prefix = 'VideoCreate'
 
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
     args.action_random_sample = False
 
 def stack_args(args):
     set_if_none(args, 'exp_type', 'rnd')
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'action_set_size', 20)
     set_if_none(args, 'test_action_set_size', 20)
     set_if_none(args, 'separate_skip', True)
@@ -172,7 +178,8 @@ def stack_play_args(args):
     set_if_none(args, 'exp_type', 'rnd')
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'emb_epochs', 5000)
 
     if args.train_embeddings and args.n_trajectories == 1024:
@@ -196,8 +203,10 @@ def reco_args(args):
         set_if_none(args, 'action_set_size', 25)
     else:
         set_if_none(args, 'action_set_size', 500)
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'num_eval', 20)
     set_if_none(args, 'entropy_coef', 1e-2)
     set_if_none(args, 'test_action_set_size', 50)
diff --git a/envs/create_game/base_env.py b/envs/create_game/base_env.py
index 35ae827..987066c 100644
--- a/envs/create_game/base_env.py
+++ b/envs/create_game/base_env.py
@@ -123,8 +123,9 @@ class BaseEnv(gym.Env):
         Reset the environment
         """
         self._check_setup()
-        self.space.remove([*self.space.bodies, *self.space.shapes,
-                           *self.space.constraints])
+        # self.space.remove([*self.space.bodies, *self.space.shapes,
+        #                   *self.space.constraints])
+        self.space.remove(*self.space.bodies, *self.space.shapes, *self.space.constraints)
 
         self.ball_traces = []
         self.line_traces = []
diff --git a/envs/create_game/create_game.py b/envs/create_game/create_game.py
index ee5f677..968b4cd 100644
--- a/envs/create_game/create_game.py
+++ b/envs/create_game/create_game.py
@@ -241,7 +241,7 @@ class CreateGame(BaseEnv):
 
     def motion_stopped(self):
         all_objs = self.get_all_objs()
-        vel = np.array([np.sqrt(sum(x.shape.body.velocity ** 2))
+        vel = np.array([np.sqrt((x.shape.body.velocity.x **2 + x.shape.body.velocity.y ** 2))
                         for x in all_objs])
         if (vel < self.settings.min_velocity).all():
             self.zero_vel_steps += 1
diff --git a/envs/create_game/tools/ball.py b/envs/create_game/tools/ball.py
index 052cb47..807ce36 100644
--- a/envs/create_game/tools/ball.py
+++ b/envs/create_game/tools/ball.py
@@ -52,9 +52,10 @@ class Ball(GravityObj):
         if self.color == 'basketball':
             self.img.render(screen, scale, self.flipy)
         else:
-            draw_pos = scale * self.flipy(self.body.position)
-            draw_pos[0] = int(draw_pos[0])
-            draw_pos[1] = int(draw_pos[1])
+            draw_pos1 = scale * self.flipy(self.body.position)
+            draw_pos = pymunk.Vec2d(int(draw_pos1[0]), int(draw_pos1[1]))
+            # draw_pos[0] = int(draw_pos1[0])
+            # draw_pos[1] = int(draw_pos1[1])
 
             if self.is_trace:
                 draw_radius = max(2, int(scale * self.radius) // self.scale_radius)
diff --git a/envs/create_game/tools/basic_obj.py b/envs/create_game/tools/basic_obj.py
index 86e48c4..0517872 100644
--- a/envs/create_game/tools/basic_obj.py
+++ b/envs/create_game/tools/basic_obj.py
@@ -36,10 +36,11 @@ class BasicObj(object):
         self.attached_shapes.append(self.shape)
 
     def remove_from_space(self, space):
+        print(len(self.attached_bodies))
         space.remove(
-            [*self.attached_bodies,
-            *self.attached_shapes,
-            *self.attached_constraints]
+            self.attached_bodies,
+            self.attached_shapes,
+            self.attached_constraints
             )
 
     def render(self, screen, scale=None, anti_alias=False):
diff --git a/envs/create_game/tools/bucket.py b/envs/create_game/tools/bucket.py
index 494768f..580b615 100644
--- a/envs/create_game/tools/bucket.py
+++ b/envs/create_game/tools/bucket.py
@@ -59,7 +59,7 @@ class Bucket(FixedPoly):
         bucket.collision_type = self.collision_type
         bucket.locations = [self.center_position, self.v_1, self.v_2, self.v_3, self.v_4]
         self.shape = bucket
-        space.add(bucket)
+        space.add(self.get_body(), bucket)
         self.attached_shapes.append(bucket)
 
         # Called when 1 (movable objects) collides with 3 (bucket)
diff --git a/envs/create_game/tools/cannon.py b/envs/create_game/tools/cannon.py
index 62c8ba9..215f1e4 100644
--- a/envs/create_game/tools/cannon.py
+++ b/envs/create_game/tools/cannon.py
@@ -60,7 +60,7 @@ class Cannon(FixedRect):
         cannon.collision_type = self.collision_type
         cannon.properties = (self.new_pos, self.launch_dir)
         self.shape = cannon
-        space.add(cannon)
+        space.add(self.get_body(), cannon)
         self.attached_shapes.append(cannon)
 
         h = space.add_collision_handler(1, self.collision_type)
diff --git a/envs/create_game/tools/funnel.py b/envs/create_game/tools/funnel.py
index 4619843..0f7d9ce 100644
--- a/envs/create_game/tools/funnel.py
+++ b/envs/create_game/tools/funnel.py
@@ -59,7 +59,7 @@ class Funnel(FixedPoly):
         funnel.collision_type = self.collision_type
         funnel.locations = [self.nozzle_position, self.v_1, self.v_2, self.v_3]
         self.shape = funnel
-        space.add(funnel)
+        space.add(funnel.get_body(), funnel)
         self.attached_shapes.append(funnel)
 
         h = space.add_collision_handler(1, self.collision_type)
diff --git a/envs/create_game/tools/poly.py b/envs/create_game/tools/poly.py
index e875ef5..85adee4 100644
--- a/envs/create_game/tools/poly.py
+++ b/envs/create_game/tools/poly.py
@@ -14,7 +14,7 @@ class FixedPoly(FixedObj):
         self.body = self._create_body(mass, moment)
         self.body.position = pm.Vec2d(pos[0], pos[1])
 
-        self.vertices = self.get_vertices(pm.Vec2d([0., 0.]), n_sides, angle, size)
+        self.vertices = self.get_vertices(pm.Vec2d(0., 0.), n_sides, angle, size)
 
         self.shape = pm.Poly(self.body, self.vertices)
         self.shape.friction = friction
@@ -72,7 +72,7 @@ class Star(FixedPoly):
 
         pointlist = []
         for v in self.vertices:
-            x, y = pm.Vec2d(v).rotated(self.shape.body.angle) + self.shape.body.position
+            x, y = pm.Vec2d(v[0], v[1]).rotated(self.shape.body.angle) + self.shape.body.position
             point = scale * self.flipy([x, y])
             pointlist.append([int(point[0]), int(point[1])])
 
diff --git a/main.py b/main.py
index 2619157..d0be0ad 100644
--- a/main.py
+++ b/main.py
@@ -7,14 +7,14 @@ from method.embedder.embedder import extract_dists
 from method.models.main_method import MainMethod
 from method.models.distance_method import DistanceMethod
 
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 
 from arguments import get_args
 from rlf import get_env_interface, RunSettings, run_policy
 
 import envs.recogym
-import envs.block_stack
+# import envs.block_stack
 import envs.interfaces
 import envs.create_game
 
diff --git a/method/dist_mem.py b/method/dist_mem.py
index 7da3bf1..fbd625d 100644
--- a/method/dist_mem.py
+++ b/method/dist_mem.py
@@ -261,7 +261,8 @@ class DistributionMemory(object):
     def load_distributions(self, load_file):
         path = osp.join('method/embedder/saved_distributions', load_file + '.emb')
         print('loading dists from ' + path)
-        ckpt = torch.load(path)
+        # ckpt = torch.load(path)
+        ckpt = torch.load(path, map_location=torch.device('cpu'))
 
         self.mem = ckpt['mem']
         self.mem_keys = ckpt['mem_keys']
diff --git a/method/embedder/embedder.py b/method/embedder/embedder.py
index 4d2dc0e..08e3297 100644
--- a/method/embedder/embedder.py
+++ b/method/embedder/embedder.py
@@ -23,8 +23,8 @@ import sys
 import os
 import os.path as osp
 from tqdm import tqdm
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 from rlf.rl import utils
 
 from torch.utils import data
diff --git a/requirements.txt b/requirements.txt
index 4cc4255..fcc248a 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,13 +1,14 @@
-absl-py==0.8.0
+absl-py
 argh==0.26.2
 astor==0.8.0
 backports.tempfile==1.0
 backports.weakref==1.0.post1
-cffi==1.12.3
+cffi
 chardet==3.0.4
 Click==7.0
+cloudpickle==3.0.0
 cycler==0.10.0
-Cython==0.29.13
+Cython<3
 decorator==4.4.0
 docker-pycreds==0.4.0
 future==0.17.1
@@ -18,60 +19,60 @@ glfw==1.8.3
 google-pasta==0.1.7
 gql==0.1.0
 graphql-core==2.2.1
-grpcio==1.24.0
+grpcio==1.59.3
 gym==0.10.8
-h5py==2.10.0
+h5py
 idna==2.8
-imageio==2.4.1
-joblib==0.13.2
+imageio==2.9.0
+joblib==1.3.2
 Keras-Applications==1.0.8
 Keras-Preprocessing==1.1.0
 kiwisolver==1.1.0
 libtmux==0.8.1
 lockfile==0.12.2
 Markdown==3.1.1
-matplotlib==3.1.2
+matplotlib==3.4
 moviepy==1.0.1
-mujoco-py==2.0.2.5
-numpy==1.15.2
+free-mujoco-py
+numpy==1.24.4
 nvidia-ml-py3==7.352.0
-opencv-python==4.0.0.21
-pandas==0.24.2
+opencv-python==4.9.0.80
+pandas==1.3.5
 pathtools==0.1.2
-Pillow==6.1.0
+Pillow==6.2.0
 promise==2.2.1
-protobuf==3.9.2
+protobuf==3.20.3
 psutil==5.6.3
 pycparser==2.19
-pygame==1.9.6
+pygame
 pyglet==1.4.4
-pymunk==5.4.2
+pymunk==6.6.0
 pyparsing==2.4.2
-PyQt5==5.13.2
-PyQt5-sip==12.7.0
+PyQt5==5.15.10
+PyQt5-sip==12.13.0
 python-dateutil==2.8.0
 pytz==2019.2
-PyYAML==5.1.2
+PyYAML
 requests==2.22.0
 Rx==1.6.1
-scikit-learn==0.21.3
-scipy==1.3.1
-seaborn==0.10.0
+scikit-learn
+scipy
+seaborn==0.13.2
 sentry-sdk==0.12.2
 shortuuid==0.5.0
 six==1.12.0
 sklearn==0.0
 smmap2==2.0.5
 subprocess32==3.5.4
-tensorboard==1.14.0
+tensorboard==2.13.0
 tensorboardX==1.8
-tensorflow==1.14.0
-tensorflow-estimator==1.14.0
+tensorflow==2.13.0rc0
+tensorflow-estimator
 termcolor==1.1.0
-torch==1.2.0
+torch
 tqdm==4.36.1
 urllib3==1.25.6
 wandb==0.8.3
 watchdog==0.9.0
-Werkzeug==0.16.0
+Werkzeug==1.0.1
 wrapt==1.11.2
diff --git a/rlf/baselines/vec_env/dummy_vec_env.py b/rlf/baselines/vec_env/dummy_vec_env.py
index 818bd53..4367f39 100644
--- a/rlf/baselines/vec_env/dummy_vec_env.py
+++ b/rlf/baselines/vec_env/dummy_vec_env.py
@@ -22,7 +22,7 @@ class DummyVecEnv(VecEnv):
         self.keys, shapes, dtypes = obs_space_info(obs_space)
 
         self.buf_obs = { k: np.zeros((self.num_envs,) + tuple(shapes[k]), dtype=dtypes[k]) for k in self.keys }
-        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool)
+        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool_)
         self.buf_rews  = np.zeros((self.num_envs,), dtype=np.float32)
         self.buf_infos = [{} for _ in range(self.num_envs)]
         self.actions = None
diff --git a/rlf/baselines/vec_env/shmem_vec_env.py b/rlf/baselines/vec_env/shmem_vec_env.py
index 7a4d78d..4d9fa7c 100644
--- a/rlf/baselines/vec_env/shmem_vec_env.py
+++ b/rlf/baselines/vec_env/shmem_vec_env.py
@@ -14,7 +14,7 @@ _NP_TO_CT = {np.float32: ctypes.c_float,
              np.int32: ctypes.c_int32,
              np.int8: ctypes.c_int8,
              np.uint8: ctypes.c_char,
-             np.bool: ctypes.c_bool}
+             np.bool_: ctypes.c_bool}
 
 
 class ShmemVecEnv(VecEnv):
diff --git a/rlf/main.py b/rlf/main.py
index dd7cd4f..dc304ee 100644
--- a/rlf/main.py
+++ b/rlf/main.py
@@ -95,6 +95,7 @@ def run_policy(run_settings):
     args.trajectory_len = None
     test_args.trajectory_len = None
 
+    print(args.num_processes)
     envs = make_vec_envs(args.env_name, args.seed, args.num_processes,
                          args.gamma, args.log_dir, args.device,
                          False, args.env_trans_fn, args)
diff --git a/rlf/rl/envs.py b/rlf/rl/envs.py
index b41b6b9..e59734f 100755
--- a/rlf/rl/envs.py
+++ b/rlf/rl/envs.py
@@ -264,8 +264,8 @@ class VecPyTorchFrameStack(VecEnvWrapper):
     def step_wait(self):
         obs, rews, news, infos = self.venv.step_wait()
 
-        self.stacked_obs[:, :-self.shape_dim0] = \
-            self.stacked_obs[:, self.shape_dim0:]
+        a = self.stacked_obs.clone()
+        self.stacked_obs[:, :-self.shape_dim0] = a[:, self.shape_dim0:]
         for (i, new) in enumerate(news):
             if new:
                 self.stacked_obs[i] = 0
ed09906ce33a6af77bef2e641a45f81306d2f1d4
diff --git a/arguments.py b/arguments.py
index dfc38fb..ec94316 100644
--- a/arguments.py
+++ b/arguments.py
@@ -14,7 +14,8 @@ def grid_args(args):
     set_if_none(args, 'exp_type', 'rnd')
 
     set_if_none(args, 'onehot_state', True)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'sample_clusters', False)
     set_if_none(args, 'action_set_size', 50)
     set_if_none(args, 'test_action_set_size', 50)
@@ -49,7 +50,8 @@ def grid_play_args(args):
         args.n_trajectories = 672
 
     set_if_none(args, 'emb_epochs', 10000)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 16)
     set_if_none(args, 'z_dim', 16)
     set_if_none(args, 'onehot_state', True)
@@ -66,7 +68,8 @@ def grid_play_args(args):
 
 
 def create_args(args):
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
 
     set_if_none(args, 'exp_type', 'NewMain')
     set_if_none(args, 'sample_clusters', False)
@@ -124,15 +127,18 @@ def create_play_args(args):
         args.hidden_dim_option = 128
         args.prefix = 'VideoCreate'
 
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
     args.action_random_sample = False
 
 def stack_args(args):
     set_if_none(args, 'exp_type', 'rnd')
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'action_set_size', 20)
     set_if_none(args, 'test_action_set_size', 20)
     set_if_none(args, 'separate_skip', True)
@@ -172,7 +178,8 @@ def stack_play_args(args):
     set_if_none(args, 'exp_type', 'rnd')
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'emb_epochs', 5000)
 
     if args.train_embeddings and args.n_trajectories == 1024:
@@ -196,8 +203,10 @@ def reco_args(args):
         set_if_none(args, 'action_set_size', 25)
     else:
         set_if_none(args, 'action_set_size', 500)
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'num_eval', 20)
     set_if_none(args, 'entropy_coef', 1e-2)
     set_if_none(args, 'test_action_set_size', 50)
diff --git a/envs/create_game/base_env.py b/envs/create_game/base_env.py
index 35ae827..987066c 100644
--- a/envs/create_game/base_env.py
+++ b/envs/create_game/base_env.py
@@ -123,8 +123,9 @@ class BaseEnv(gym.Env):
         Reset the environment
         """
         self._check_setup()
-        self.space.remove([*self.space.bodies, *self.space.shapes,
-                           *self.space.constraints])
+        # self.space.remove([*self.space.bodies, *self.space.shapes,
+        #                   *self.space.constraints])
+        self.space.remove(*self.space.bodies, *self.space.shapes, *self.space.constraints)
 
         self.ball_traces = []
         self.line_traces = []
diff --git a/envs/create_game/create_game.py b/envs/create_game/create_game.py
index ee5f677..968b4cd 100644
--- a/envs/create_game/create_game.py
+++ b/envs/create_game/create_game.py
@@ -241,7 +241,7 @@ class CreateGame(BaseEnv):
 
     def motion_stopped(self):
         all_objs = self.get_all_objs()
-        vel = np.array([np.sqrt(sum(x.shape.body.velocity ** 2))
+        vel = np.array([np.sqrt((x.shape.body.velocity.x **2 + x.shape.body.velocity.y ** 2))
                         for x in all_objs])
         if (vel < self.settings.min_velocity).all():
             self.zero_vel_steps += 1
diff --git a/envs/create_game/tools/ball.py b/envs/create_game/tools/ball.py
index 052cb47..807ce36 100644
--- a/envs/create_game/tools/ball.py
+++ b/envs/create_game/tools/ball.py
@@ -52,9 +52,10 @@ class Ball(GravityObj):
         if self.color == 'basketball':
             self.img.render(screen, scale, self.flipy)
         else:
-            draw_pos = scale * self.flipy(self.body.position)
-            draw_pos[0] = int(draw_pos[0])
-            draw_pos[1] = int(draw_pos[1])
+            draw_pos1 = scale * self.flipy(self.body.position)
+            draw_pos = pymunk.Vec2d(int(draw_pos1[0]), int(draw_pos1[1]))
+            # draw_pos[0] = int(draw_pos1[0])
+            # draw_pos[1] = int(draw_pos1[1])
 
             if self.is_trace:
                 draw_radius = max(2, int(scale * self.radius) // self.scale_radius)
diff --git a/envs/create_game/tools/basic_obj.py b/envs/create_game/tools/basic_obj.py
index 86e48c4..2c5ad68 100644
--- a/envs/create_game/tools/basic_obj.py
+++ b/envs/create_game/tools/basic_obj.py
@@ -37,9 +37,9 @@ class BasicObj(object):
 
     def remove_from_space(self, space):
         space.remove(
-            [*self.attached_bodies,
-            *self.attached_shapes,
-            *self.attached_constraints]
+            self.attached_bodies[0],
+            self.attached_shapes[0],
+            self.attached_constraints[0]
             )
 
     def render(self, screen, scale=None, anti_alias=False):
diff --git a/envs/create_game/tools/bucket.py b/envs/create_game/tools/bucket.py
index 494768f..580b615 100644
--- a/envs/create_game/tools/bucket.py
+++ b/envs/create_game/tools/bucket.py
@@ -59,7 +59,7 @@ class Bucket(FixedPoly):
         bucket.collision_type = self.collision_type
         bucket.locations = [self.center_position, self.v_1, self.v_2, self.v_3, self.v_4]
         self.shape = bucket
-        space.add(bucket)
+        space.add(self.get_body(), bucket)
         self.attached_shapes.append(bucket)
 
         # Called when 1 (movable objects) collides with 3 (bucket)
diff --git a/envs/create_game/tools/cannon.py b/envs/create_game/tools/cannon.py
index 62c8ba9..215f1e4 100644
--- a/envs/create_game/tools/cannon.py
+++ b/envs/create_game/tools/cannon.py
@@ -60,7 +60,7 @@ class Cannon(FixedRect):
         cannon.collision_type = self.collision_type
         cannon.properties = (self.new_pos, self.launch_dir)
         self.shape = cannon
-        space.add(cannon)
+        space.add(self.get_body(), cannon)
         self.attached_shapes.append(cannon)
 
         h = space.add_collision_handler(1, self.collision_type)
diff --git a/envs/create_game/tools/funnel.py b/envs/create_game/tools/funnel.py
index 4619843..0f7d9ce 100644
--- a/envs/create_game/tools/funnel.py
+++ b/envs/create_game/tools/funnel.py
@@ -59,7 +59,7 @@ class Funnel(FixedPoly):
         funnel.collision_type = self.collision_type
         funnel.locations = [self.nozzle_position, self.v_1, self.v_2, self.v_3]
         self.shape = funnel
-        space.add(funnel)
+        space.add(funnel.get_body(), funnel)
         self.attached_shapes.append(funnel)
 
         h = space.add_collision_handler(1, self.collision_type)
diff --git a/envs/create_game/tools/poly.py b/envs/create_game/tools/poly.py
index e875ef5..85adee4 100644
--- a/envs/create_game/tools/poly.py
+++ b/envs/create_game/tools/poly.py
@@ -14,7 +14,7 @@ class FixedPoly(FixedObj):
         self.body = self._create_body(mass, moment)
         self.body.position = pm.Vec2d(pos[0], pos[1])
 
-        self.vertices = self.get_vertices(pm.Vec2d([0., 0.]), n_sides, angle, size)
+        self.vertices = self.get_vertices(pm.Vec2d(0., 0.), n_sides, angle, size)
 
         self.shape = pm.Poly(self.body, self.vertices)
         self.shape.friction = friction
@@ -72,7 +72,7 @@ class Star(FixedPoly):
 
         pointlist = []
         for v in self.vertices:
-            x, y = pm.Vec2d(v).rotated(self.shape.body.angle) + self.shape.body.position
+            x, y = pm.Vec2d(v[0], v[1]).rotated(self.shape.body.angle) + self.shape.body.position
             point = scale * self.flipy([x, y])
             pointlist.append([int(point[0]), int(point[1])])
 
diff --git a/main.py b/main.py
index 2619157..d0be0ad 100644
--- a/main.py
+++ b/main.py
@@ -7,14 +7,14 @@ from method.embedder.embedder import extract_dists
 from method.models.main_method import MainMethod
 from method.models.distance_method import DistanceMethod
 
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 
 from arguments import get_args
 from rlf import get_env_interface, RunSettings, run_policy
 
 import envs.recogym
-import envs.block_stack
+# import envs.block_stack
 import envs.interfaces
 import envs.create_game
 
diff --git a/method/dist_mem.py b/method/dist_mem.py
index 7da3bf1..fbd625d 100644
--- a/method/dist_mem.py
+++ b/method/dist_mem.py
@@ -261,7 +261,8 @@ class DistributionMemory(object):
     def load_distributions(self, load_file):
         path = osp.join('method/embedder/saved_distributions', load_file + '.emb')
         print('loading dists from ' + path)
-        ckpt = torch.load(path)
+        # ckpt = torch.load(path)
+        ckpt = torch.load(path, map_location=torch.device('cpu'))
 
         self.mem = ckpt['mem']
         self.mem_keys = ckpt['mem_keys']
diff --git a/method/embedder/embedder.py b/method/embedder/embedder.py
index 4d2dc0e..08e3297 100644
--- a/method/embedder/embedder.py
+++ b/method/embedder/embedder.py
@@ -23,8 +23,8 @@ import sys
 import os
 import os.path as osp
 from tqdm import tqdm
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 from rlf.rl import utils
 
 from torch.utils import data
diff --git a/requirements.txt b/requirements.txt
index 4cc4255..fcc248a 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,13 +1,14 @@
-absl-py==0.8.0
+absl-py
 argh==0.26.2
 astor==0.8.0
 backports.tempfile==1.0
 backports.weakref==1.0.post1
-cffi==1.12.3
+cffi
 chardet==3.0.4
 Click==7.0
+cloudpickle==3.0.0
 cycler==0.10.0
-Cython==0.29.13
+Cython<3
 decorator==4.4.0
 docker-pycreds==0.4.0
 future==0.17.1
@@ -18,60 +19,60 @@ glfw==1.8.3
 google-pasta==0.1.7
 gql==0.1.0
 graphql-core==2.2.1
-grpcio==1.24.0
+grpcio==1.59.3
 gym==0.10.8
-h5py==2.10.0
+h5py
 idna==2.8
-imageio==2.4.1
-joblib==0.13.2
+imageio==2.9.0
+joblib==1.3.2
 Keras-Applications==1.0.8
 Keras-Preprocessing==1.1.0
 kiwisolver==1.1.0
 libtmux==0.8.1
 lockfile==0.12.2
 Markdown==3.1.1
-matplotlib==3.1.2
+matplotlib==3.4
 moviepy==1.0.1
-mujoco-py==2.0.2.5
-numpy==1.15.2
+free-mujoco-py
+numpy==1.24.4
 nvidia-ml-py3==7.352.0
-opencv-python==4.0.0.21
-pandas==0.24.2
+opencv-python==4.9.0.80
+pandas==1.3.5
 pathtools==0.1.2
-Pillow==6.1.0
+Pillow==6.2.0
 promise==2.2.1
-protobuf==3.9.2
+protobuf==3.20.3
 psutil==5.6.3
 pycparser==2.19
-pygame==1.9.6
+pygame
 pyglet==1.4.4
-pymunk==5.4.2
+pymunk==6.6.0
 pyparsing==2.4.2
-PyQt5==5.13.2
-PyQt5-sip==12.7.0
+PyQt5==5.15.10
+PyQt5-sip==12.13.0
 python-dateutil==2.8.0
 pytz==2019.2
-PyYAML==5.1.2
+PyYAML
 requests==2.22.0
 Rx==1.6.1
-scikit-learn==0.21.3
-scipy==1.3.1
-seaborn==0.10.0
+scikit-learn
+scipy
+seaborn==0.13.2
 sentry-sdk==0.12.2
 shortuuid==0.5.0
 six==1.12.0
 sklearn==0.0
 smmap2==2.0.5
 subprocess32==3.5.4
-tensorboard==1.14.0
+tensorboard==2.13.0
 tensorboardX==1.8
-tensorflow==1.14.0
-tensorflow-estimator==1.14.0
+tensorflow==2.13.0rc0
+tensorflow-estimator
 termcolor==1.1.0
-torch==1.2.0
+torch
 tqdm==4.36.1
 urllib3==1.25.6
 wandb==0.8.3
 watchdog==0.9.0
-Werkzeug==0.16.0
+Werkzeug==1.0.1
 wrapt==1.11.2
diff --git a/rlf/baselines/vec_env/dummy_vec_env.py b/rlf/baselines/vec_env/dummy_vec_env.py
index 818bd53..4367f39 100644
--- a/rlf/baselines/vec_env/dummy_vec_env.py
+++ b/rlf/baselines/vec_env/dummy_vec_env.py
@@ -22,7 +22,7 @@ class DummyVecEnv(VecEnv):
         self.keys, shapes, dtypes = obs_space_info(obs_space)
 
         self.buf_obs = { k: np.zeros((self.num_envs,) + tuple(shapes[k]), dtype=dtypes[k]) for k in self.keys }
-        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool)
+        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool_)
         self.buf_rews  = np.zeros((self.num_envs,), dtype=np.float32)
         self.buf_infos = [{} for _ in range(self.num_envs)]
         self.actions = None
diff --git a/rlf/baselines/vec_env/shmem_vec_env.py b/rlf/baselines/vec_env/shmem_vec_env.py
index 7a4d78d..4d9fa7c 100644
--- a/rlf/baselines/vec_env/shmem_vec_env.py
+++ b/rlf/baselines/vec_env/shmem_vec_env.py
@@ -14,7 +14,7 @@ _NP_TO_CT = {np.float32: ctypes.c_float,
              np.int32: ctypes.c_int32,
              np.int8: ctypes.c_int8,
              np.uint8: ctypes.c_char,
-             np.bool: ctypes.c_bool}
+             np.bool_: ctypes.c_bool}
 
 
 class ShmemVecEnv(VecEnv):
diff --git a/rlf/main.py b/rlf/main.py
index dd7cd4f..dc304ee 100644
--- a/rlf/main.py
+++ b/rlf/main.py
@@ -95,6 +95,7 @@ def run_policy(run_settings):
     args.trajectory_len = None
     test_args.trajectory_len = None
 
+    print(args.num_processes)
     envs = make_vec_envs(args.env_name, args.seed, args.num_processes,
                          args.gamma, args.log_dir, args.device,
                          False, args.env_trans_fn, args)
diff --git a/rlf/rl/envs.py b/rlf/rl/envs.py
index b41b6b9..e59734f 100755
--- a/rlf/rl/envs.py
+++ b/rlf/rl/envs.py
@@ -264,8 +264,8 @@ class VecPyTorchFrameStack(VecEnvWrapper):
     def step_wait(self):
         obs, rews, news, infos = self.venv.step_wait()
 
-        self.stacked_obs[:, :-self.shape_dim0] = \
-            self.stacked_obs[:, self.shape_dim0:]
+        a = self.stacked_obs.clone()
+        self.stacked_obs[:, :-self.shape_dim0] = a[:, self.shape_dim0:]
         for (i, new) in enumerate(news):
             if new:
                 self.stacked_obs[i] = 0
ed09906ce33a6af77bef2e641a45f81306d2f1d4
diff --git a/arguments.py b/arguments.py
index dfc38fb..ec94316 100644
--- a/arguments.py
+++ b/arguments.py
@@ -14,7 +14,8 @@ def grid_args(args):
     set_if_none(args, 'exp_type', 'rnd')
 
     set_if_none(args, 'onehot_state', True)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'sample_clusters', False)
     set_if_none(args, 'action_set_size', 50)
     set_if_none(args, 'test_action_set_size', 50)
@@ -49,7 +50,8 @@ def grid_play_args(args):
         args.n_trajectories = 672
 
     set_if_none(args, 'emb_epochs', 10000)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 16)
     set_if_none(args, 'z_dim', 16)
     set_if_none(args, 'onehot_state', True)
@@ -66,7 +68,8 @@ def grid_play_args(args):
 
 
 def create_args(args):
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
 
     set_if_none(args, 'exp_type', 'NewMain')
     set_if_none(args, 'sample_clusters', False)
@@ -124,15 +127,18 @@ def create_play_args(args):
         args.hidden_dim_option = 128
         args.prefix = 'VideoCreate'
 
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
     args.action_random_sample = False
 
 def stack_args(args):
     set_if_none(args, 'exp_type', 'rnd')
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'action_set_size', 20)
     set_if_none(args, 'test_action_set_size', 20)
     set_if_none(args, 'separate_skip', True)
@@ -172,7 +178,8 @@ def stack_play_args(args):
     set_if_none(args, 'exp_type', 'rnd')
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'emb_epochs', 5000)
 
     if args.train_embeddings and args.n_trajectories == 1024:
@@ -196,8 +203,10 @@ def reco_args(args):
         set_if_none(args, 'action_set_size', 25)
     else:
         set_if_none(args, 'action_set_size', 500)
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'num_eval', 20)
     set_if_none(args, 'entropy_coef', 1e-2)
     set_if_none(args, 'test_action_set_size', 50)
diff --git a/envs/create_game/base_env.py b/envs/create_game/base_env.py
index 35ae827..987066c 100644
--- a/envs/create_game/base_env.py
+++ b/envs/create_game/base_env.py
@@ -123,8 +123,9 @@ class BaseEnv(gym.Env):
         Reset the environment
         """
         self._check_setup()
-        self.space.remove([*self.space.bodies, *self.space.shapes,
-                           *self.space.constraints])
+        # self.space.remove([*self.space.bodies, *self.space.shapes,
+        #                   *self.space.constraints])
+        self.space.remove(*self.space.bodies, *self.space.shapes, *self.space.constraints)
 
         self.ball_traces = []
         self.line_traces = []
diff --git a/envs/create_game/create_game.py b/envs/create_game/create_game.py
index ee5f677..968b4cd 100644
--- a/envs/create_game/create_game.py
+++ b/envs/create_game/create_game.py
@@ -241,7 +241,7 @@ class CreateGame(BaseEnv):
 
     def motion_stopped(self):
         all_objs = self.get_all_objs()
-        vel = np.array([np.sqrt(sum(x.shape.body.velocity ** 2))
+        vel = np.array([np.sqrt((x.shape.body.velocity.x **2 + x.shape.body.velocity.y ** 2))
                         for x in all_objs])
         if (vel < self.settings.min_velocity).all():
             self.zero_vel_steps += 1
diff --git a/envs/create_game/tools/ball.py b/envs/create_game/tools/ball.py
index 052cb47..807ce36 100644
--- a/envs/create_game/tools/ball.py
+++ b/envs/create_game/tools/ball.py
@@ -52,9 +52,10 @@ class Ball(GravityObj):
         if self.color == 'basketball':
             self.img.render(screen, scale, self.flipy)
         else:
-            draw_pos = scale * self.flipy(self.body.position)
-            draw_pos[0] = int(draw_pos[0])
-            draw_pos[1] = int(draw_pos[1])
+            draw_pos1 = scale * self.flipy(self.body.position)
+            draw_pos = pymunk.Vec2d(int(draw_pos1[0]), int(draw_pos1[1]))
+            # draw_pos[0] = int(draw_pos1[0])
+            # draw_pos[1] = int(draw_pos1[1])
 
             if self.is_trace:
                 draw_radius = max(2, int(scale * self.radius) // self.scale_radius)
diff --git a/envs/create_game/tools/basic_obj.py b/envs/create_game/tools/basic_obj.py
index 86e48c4..2c5ad68 100644
--- a/envs/create_game/tools/basic_obj.py
+++ b/envs/create_game/tools/basic_obj.py
@@ -37,9 +37,9 @@ class BasicObj(object):
 
     def remove_from_space(self, space):
         space.remove(
-            [*self.attached_bodies,
-            *self.attached_shapes,
-            *self.attached_constraints]
+            self.attached_bodies[0],
+            self.attached_shapes[0],
+            self.attached_constraints[0]
             )
 
     def render(self, screen, scale=None, anti_alias=False):
diff --git a/envs/create_game/tools/bucket.py b/envs/create_game/tools/bucket.py
index 494768f..580b615 100644
--- a/envs/create_game/tools/bucket.py
+++ b/envs/create_game/tools/bucket.py
@@ -59,7 +59,7 @@ class Bucket(FixedPoly):
         bucket.collision_type = self.collision_type
         bucket.locations = [self.center_position, self.v_1, self.v_2, self.v_3, self.v_4]
         self.shape = bucket
-        space.add(bucket)
+        space.add(self.get_body(), bucket)
         self.attached_shapes.append(bucket)
 
         # Called when 1 (movable objects) collides with 3 (bucket)
diff --git a/envs/create_game/tools/cannon.py b/envs/create_game/tools/cannon.py
index 62c8ba9..215f1e4 100644
--- a/envs/create_game/tools/cannon.py
+++ b/envs/create_game/tools/cannon.py
@@ -60,7 +60,7 @@ class Cannon(FixedRect):
         cannon.collision_type = self.collision_type
         cannon.properties = (self.new_pos, self.launch_dir)
         self.shape = cannon
-        space.add(cannon)
+        space.add(self.get_body(), cannon)
         self.attached_shapes.append(cannon)
 
         h = space.add_collision_handler(1, self.collision_type)
diff --git a/envs/create_game/tools/funnel.py b/envs/create_game/tools/funnel.py
index 4619843..526dced 100644
--- a/envs/create_game/tools/funnel.py
+++ b/envs/create_game/tools/funnel.py
@@ -59,7 +59,7 @@ class Funnel(FixedPoly):
         funnel.collision_type = self.collision_type
         funnel.locations = [self.nozzle_position, self.v_1, self.v_2, self.v_3]
         self.shape = funnel
-        space.add(funnel)
+        space.add(self.get_body(), funnel)
         self.attached_shapes.append(funnel)
 
         h = space.add_collision_handler(1, self.collision_type)
diff --git a/envs/create_game/tools/poly.py b/envs/create_game/tools/poly.py
index e875ef5..85adee4 100644
--- a/envs/create_game/tools/poly.py
+++ b/envs/create_game/tools/poly.py
@@ -14,7 +14,7 @@ class FixedPoly(FixedObj):
         self.body = self._create_body(mass, moment)
         self.body.position = pm.Vec2d(pos[0], pos[1])
 
-        self.vertices = self.get_vertices(pm.Vec2d([0., 0.]), n_sides, angle, size)
+        self.vertices = self.get_vertices(pm.Vec2d(0., 0.), n_sides, angle, size)
 
         self.shape = pm.Poly(self.body, self.vertices)
         self.shape.friction = friction
@@ -72,7 +72,7 @@ class Star(FixedPoly):
 
         pointlist = []
         for v in self.vertices:
-            x, y = pm.Vec2d(v).rotated(self.shape.body.angle) + self.shape.body.position
+            x, y = pm.Vec2d(v[0], v[1]).rotated(self.shape.body.angle) + self.shape.body.position
             point = scale * self.flipy([x, y])
             pointlist.append([int(point[0]), int(point[1])])
 
diff --git a/main.py b/main.py
index 2619157..d0be0ad 100644
--- a/main.py
+++ b/main.py
@@ -7,14 +7,14 @@ from method.embedder.embedder import extract_dists
 from method.models.main_method import MainMethod
 from method.models.distance_method import DistanceMethod
 
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 
 from arguments import get_args
 from rlf import get_env_interface, RunSettings, run_policy
 
 import envs.recogym
-import envs.block_stack
+# import envs.block_stack
 import envs.interfaces
 import envs.create_game
 
diff --git a/method/dist_mem.py b/method/dist_mem.py
index 7da3bf1..fbd625d 100644
--- a/method/dist_mem.py
+++ b/method/dist_mem.py
@@ -261,7 +261,8 @@ class DistributionMemory(object):
     def load_distributions(self, load_file):
         path = osp.join('method/embedder/saved_distributions', load_file + '.emb')
         print('loading dists from ' + path)
-        ckpt = torch.load(path)
+        # ckpt = torch.load(path)
+        ckpt = torch.load(path, map_location=torch.device('cpu'))
 
         self.mem = ckpt['mem']
         self.mem_keys = ckpt['mem_keys']
diff --git a/method/embedder/embedder.py b/method/embedder/embedder.py
index 4d2dc0e..08e3297 100644
--- a/method/embedder/embedder.py
+++ b/method/embedder/embedder.py
@@ -23,8 +23,8 @@ import sys
 import os
 import os.path as osp
 from tqdm import tqdm
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 from rlf.rl import utils
 
 from torch.utils import data
diff --git a/requirements.txt b/requirements.txt
index 4cc4255..fcc248a 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,13 +1,14 @@
-absl-py==0.8.0
+absl-py
 argh==0.26.2
 astor==0.8.0
 backports.tempfile==1.0
 backports.weakref==1.0.post1
-cffi==1.12.3
+cffi
 chardet==3.0.4
 Click==7.0
+cloudpickle==3.0.0
 cycler==0.10.0
-Cython==0.29.13
+Cython<3
 decorator==4.4.0
 docker-pycreds==0.4.0
 future==0.17.1
@@ -18,60 +19,60 @@ glfw==1.8.3
 google-pasta==0.1.7
 gql==0.1.0
 graphql-core==2.2.1
-grpcio==1.24.0
+grpcio==1.59.3
 gym==0.10.8
-h5py==2.10.0
+h5py
 idna==2.8
-imageio==2.4.1
-joblib==0.13.2
+imageio==2.9.0
+joblib==1.3.2
 Keras-Applications==1.0.8
 Keras-Preprocessing==1.1.0
 kiwisolver==1.1.0
 libtmux==0.8.1
 lockfile==0.12.2
 Markdown==3.1.1
-matplotlib==3.1.2
+matplotlib==3.4
 moviepy==1.0.1
-mujoco-py==2.0.2.5
-numpy==1.15.2
+free-mujoco-py
+numpy==1.24.4
 nvidia-ml-py3==7.352.0
-opencv-python==4.0.0.21
-pandas==0.24.2
+opencv-python==4.9.0.80
+pandas==1.3.5
 pathtools==0.1.2
-Pillow==6.1.0
+Pillow==6.2.0
 promise==2.2.1
-protobuf==3.9.2
+protobuf==3.20.3
 psutil==5.6.3
 pycparser==2.19
-pygame==1.9.6
+pygame
 pyglet==1.4.4
-pymunk==5.4.2
+pymunk==6.6.0
 pyparsing==2.4.2
-PyQt5==5.13.2
-PyQt5-sip==12.7.0
+PyQt5==5.15.10
+PyQt5-sip==12.13.0
 python-dateutil==2.8.0
 pytz==2019.2
-PyYAML==5.1.2
+PyYAML
 requests==2.22.0
 Rx==1.6.1
-scikit-learn==0.21.3
-scipy==1.3.1
-seaborn==0.10.0
+scikit-learn
+scipy
+seaborn==0.13.2
 sentry-sdk==0.12.2
 shortuuid==0.5.0
 six==1.12.0
 sklearn==0.0
 smmap2==2.0.5
 subprocess32==3.5.4
-tensorboard==1.14.0
+tensorboard==2.13.0
 tensorboardX==1.8
-tensorflow==1.14.0
-tensorflow-estimator==1.14.0
+tensorflow==2.13.0rc0
+tensorflow-estimator
 termcolor==1.1.0
-torch==1.2.0
+torch
 tqdm==4.36.1
 urllib3==1.25.6
 wandb==0.8.3
 watchdog==0.9.0
-Werkzeug==0.16.0
+Werkzeug==1.0.1
 wrapt==1.11.2
diff --git a/rlf/baselines/vec_env/dummy_vec_env.py b/rlf/baselines/vec_env/dummy_vec_env.py
index 818bd53..4367f39 100644
--- a/rlf/baselines/vec_env/dummy_vec_env.py
+++ b/rlf/baselines/vec_env/dummy_vec_env.py
@@ -22,7 +22,7 @@ class DummyVecEnv(VecEnv):
         self.keys, shapes, dtypes = obs_space_info(obs_space)
 
         self.buf_obs = { k: np.zeros((self.num_envs,) + tuple(shapes[k]), dtype=dtypes[k]) for k in self.keys }
-        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool)
+        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool_)
         self.buf_rews  = np.zeros((self.num_envs,), dtype=np.float32)
         self.buf_infos = [{} for _ in range(self.num_envs)]
         self.actions = None
diff --git a/rlf/baselines/vec_env/shmem_vec_env.py b/rlf/baselines/vec_env/shmem_vec_env.py
index 7a4d78d..4d9fa7c 100644
--- a/rlf/baselines/vec_env/shmem_vec_env.py
+++ b/rlf/baselines/vec_env/shmem_vec_env.py
@@ -14,7 +14,7 @@ _NP_TO_CT = {np.float32: ctypes.c_float,
              np.int32: ctypes.c_int32,
              np.int8: ctypes.c_int8,
              np.uint8: ctypes.c_char,
-             np.bool: ctypes.c_bool}
+             np.bool_: ctypes.c_bool}
 
 
 class ShmemVecEnv(VecEnv):
diff --git a/rlf/main.py b/rlf/main.py
index dd7cd4f..dc304ee 100644
--- a/rlf/main.py
+++ b/rlf/main.py
@@ -95,6 +95,7 @@ def run_policy(run_settings):
     args.trajectory_len = None
     test_args.trajectory_len = None
 
+    print(args.num_processes)
     envs = make_vec_envs(args.env_name, args.seed, args.num_processes,
                          args.gamma, args.log_dir, args.device,
                          False, args.env_trans_fn, args)
diff --git a/rlf/rl/envs.py b/rlf/rl/envs.py
index b41b6b9..e59734f 100755
--- a/rlf/rl/envs.py
+++ b/rlf/rl/envs.py
@@ -264,8 +264,8 @@ class VecPyTorchFrameStack(VecEnvWrapper):
     def step_wait(self):
         obs, rews, news, infos = self.venv.step_wait()
 
-        self.stacked_obs[:, :-self.shape_dim0] = \
-            self.stacked_obs[:, self.shape_dim0:]
+        a = self.stacked_obs.clone()
+        self.stacked_obs[:, :-self.shape_dim0] = a[:, self.shape_dim0:]
         for (i, new) in enumerate(news):
             if new:
                 self.stacked_obs[i] = 0
ed09906ce33a6af77bef2e641a45f81306d2f1d4
diff --git a/arguments.py b/arguments.py
index dfc38fb..ec94316 100644
--- a/arguments.py
+++ b/arguments.py
@@ -14,7 +14,8 @@ def grid_args(args):
     set_if_none(args, 'exp_type', 'rnd')
 
     set_if_none(args, 'onehot_state', True)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'sample_clusters', False)
     set_if_none(args, 'action_set_size', 50)
     set_if_none(args, 'test_action_set_size', 50)
@@ -49,7 +50,8 @@ def grid_play_args(args):
         args.n_trajectories = 672
 
     set_if_none(args, 'emb_epochs', 10000)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 16)
     set_if_none(args, 'z_dim', 16)
     set_if_none(args, 'onehot_state', True)
@@ -66,7 +68,8 @@ def grid_play_args(args):
 
 
 def create_args(args):
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
 
     set_if_none(args, 'exp_type', 'NewMain')
     set_if_none(args, 'sample_clusters', False)
@@ -124,15 +127,18 @@ def create_play_args(args):
         args.hidden_dim_option = 128
         args.prefix = 'VideoCreate'
 
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
     args.action_random_sample = False
 
 def stack_args(args):
     set_if_none(args, 'exp_type', 'rnd')
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'action_set_size', 20)
     set_if_none(args, 'test_action_set_size', 20)
     set_if_none(args, 'separate_skip', True)
@@ -172,7 +178,8 @@ def stack_play_args(args):
     set_if_none(args, 'exp_type', 'rnd')
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'emb_epochs', 5000)
 
     if args.train_embeddings and args.n_trajectories == 1024:
@@ -196,8 +203,10 @@ def reco_args(args):
         set_if_none(args, 'action_set_size', 25)
     else:
         set_if_none(args, 'action_set_size', 500)
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'num_eval', 20)
     set_if_none(args, 'entropy_coef', 1e-2)
     set_if_none(args, 'test_action_set_size', 50)
diff --git a/envs/create_game/base_env.py b/envs/create_game/base_env.py
index 35ae827..987066c 100644
--- a/envs/create_game/base_env.py
+++ b/envs/create_game/base_env.py
@@ -123,8 +123,9 @@ class BaseEnv(gym.Env):
         Reset the environment
         """
         self._check_setup()
-        self.space.remove([*self.space.bodies, *self.space.shapes,
-                           *self.space.constraints])
+        # self.space.remove([*self.space.bodies, *self.space.shapes,
+        #                   *self.space.constraints])
+        self.space.remove(*self.space.bodies, *self.space.shapes, *self.space.constraints)
 
         self.ball_traces = []
         self.line_traces = []
diff --git a/envs/create_game/create_game.py b/envs/create_game/create_game.py
index ee5f677..968b4cd 100644
--- a/envs/create_game/create_game.py
+++ b/envs/create_game/create_game.py
@@ -241,7 +241,7 @@ class CreateGame(BaseEnv):
 
     def motion_stopped(self):
         all_objs = self.get_all_objs()
-        vel = np.array([np.sqrt(sum(x.shape.body.velocity ** 2))
+        vel = np.array([np.sqrt((x.shape.body.velocity.x **2 + x.shape.body.velocity.y ** 2))
                         for x in all_objs])
         if (vel < self.settings.min_velocity).all():
             self.zero_vel_steps += 1
diff --git a/envs/create_game/tools/ball.py b/envs/create_game/tools/ball.py
index 052cb47..807ce36 100644
--- a/envs/create_game/tools/ball.py
+++ b/envs/create_game/tools/ball.py
@@ -52,9 +52,10 @@ class Ball(GravityObj):
         if self.color == 'basketball':
             self.img.render(screen, scale, self.flipy)
         else:
-            draw_pos = scale * self.flipy(self.body.position)
-            draw_pos[0] = int(draw_pos[0])
-            draw_pos[1] = int(draw_pos[1])
+            draw_pos1 = scale * self.flipy(self.body.position)
+            draw_pos = pymunk.Vec2d(int(draw_pos1[0]), int(draw_pos1[1]))
+            # draw_pos[0] = int(draw_pos1[0])
+            # draw_pos[1] = int(draw_pos1[1])
 
             if self.is_trace:
                 draw_radius = max(2, int(scale * self.radius) // self.scale_radius)
diff --git a/envs/create_game/tools/basic_obj.py b/envs/create_game/tools/basic_obj.py
index 86e48c4..2c5ad68 100644
--- a/envs/create_game/tools/basic_obj.py
+++ b/envs/create_game/tools/basic_obj.py
@@ -37,9 +37,9 @@ class BasicObj(object):
 
     def remove_from_space(self, space):
         space.remove(
-            [*self.attached_bodies,
-            *self.attached_shapes,
-            *self.attached_constraints]
+            self.attached_bodies[0],
+            self.attached_shapes[0],
+            self.attached_constraints[0]
             )
 
     def render(self, screen, scale=None, anti_alias=False):
diff --git a/envs/create_game/tools/bucket.py b/envs/create_game/tools/bucket.py
index 494768f..580b615 100644
--- a/envs/create_game/tools/bucket.py
+++ b/envs/create_game/tools/bucket.py
@@ -59,7 +59,7 @@ class Bucket(FixedPoly):
         bucket.collision_type = self.collision_type
         bucket.locations = [self.center_position, self.v_1, self.v_2, self.v_3, self.v_4]
         self.shape = bucket
-        space.add(bucket)
+        space.add(self.get_body(), bucket)
         self.attached_shapes.append(bucket)
 
         # Called when 1 (movable objects) collides with 3 (bucket)
diff --git a/envs/create_game/tools/cannon.py b/envs/create_game/tools/cannon.py
index 62c8ba9..faf60ec 100644
--- a/envs/create_game/tools/cannon.py
+++ b/envs/create_game/tools/cannon.py
@@ -60,7 +60,7 @@ class Cannon(FixedRect):
         cannon.collision_type = self.collision_type
         cannon.properties = (self.new_pos, self.launch_dir)
         self.shape = cannon
-        space.add(cannon)
+        space.add(self.img.get_body(), cannon)
         self.attached_shapes.append(cannon)
 
         h = space.add_collision_handler(1, self.collision_type)
diff --git a/envs/create_game/tools/funnel.py b/envs/create_game/tools/funnel.py
index 4619843..526dced 100644
--- a/envs/create_game/tools/funnel.py
+++ b/envs/create_game/tools/funnel.py
@@ -59,7 +59,7 @@ class Funnel(FixedPoly):
         funnel.collision_type = self.collision_type
         funnel.locations = [self.nozzle_position, self.v_1, self.v_2, self.v_3]
         self.shape = funnel
-        space.add(funnel)
+        space.add(self.get_body(), funnel)
         self.attached_shapes.append(funnel)
 
         h = space.add_collision_handler(1, self.collision_type)
diff --git a/envs/create_game/tools/poly.py b/envs/create_game/tools/poly.py
index e875ef5..85adee4 100644
--- a/envs/create_game/tools/poly.py
+++ b/envs/create_game/tools/poly.py
@@ -14,7 +14,7 @@ class FixedPoly(FixedObj):
         self.body = self._create_body(mass, moment)
         self.body.position = pm.Vec2d(pos[0], pos[1])
 
-        self.vertices = self.get_vertices(pm.Vec2d([0., 0.]), n_sides, angle, size)
+        self.vertices = self.get_vertices(pm.Vec2d(0., 0.), n_sides, angle, size)
 
         self.shape = pm.Poly(self.body, self.vertices)
         self.shape.friction = friction
@@ -72,7 +72,7 @@ class Star(FixedPoly):
 
         pointlist = []
         for v in self.vertices:
-            x, y = pm.Vec2d(v).rotated(self.shape.body.angle) + self.shape.body.position
+            x, y = pm.Vec2d(v[0], v[1]).rotated(self.shape.body.angle) + self.shape.body.position
             point = scale * self.flipy([x, y])
             pointlist.append([int(point[0]), int(point[1])])
 
diff --git a/main.py b/main.py
index 2619157..d0be0ad 100644
--- a/main.py
+++ b/main.py
@@ -7,14 +7,14 @@ from method.embedder.embedder import extract_dists
 from method.models.main_method import MainMethod
 from method.models.distance_method import DistanceMethod
 
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 
 from arguments import get_args
 from rlf import get_env_interface, RunSettings, run_policy
 
 import envs.recogym
-import envs.block_stack
+# import envs.block_stack
 import envs.interfaces
 import envs.create_game
 
diff --git a/method/dist_mem.py b/method/dist_mem.py
index 7da3bf1..fbd625d 100644
--- a/method/dist_mem.py
+++ b/method/dist_mem.py
@@ -261,7 +261,8 @@ class DistributionMemory(object):
     def load_distributions(self, load_file):
         path = osp.join('method/embedder/saved_distributions', load_file + '.emb')
         print('loading dists from ' + path)
-        ckpt = torch.load(path)
+        # ckpt = torch.load(path)
+        ckpt = torch.load(path, map_location=torch.device('cpu'))
 
         self.mem = ckpt['mem']
         self.mem_keys = ckpt['mem_keys']
diff --git a/method/embedder/embedder.py b/method/embedder/embedder.py
index 4d2dc0e..08e3297 100644
--- a/method/embedder/embedder.py
+++ b/method/embedder/embedder.py
@@ -23,8 +23,8 @@ import sys
 import os
 import os.path as osp
 from tqdm import tqdm
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 from rlf.rl import utils
 
 from torch.utils import data
diff --git a/requirements.txt b/requirements.txt
index 4cc4255..fcc248a 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,13 +1,14 @@
-absl-py==0.8.0
+absl-py
 argh==0.26.2
 astor==0.8.0
 backports.tempfile==1.0
 backports.weakref==1.0.post1
-cffi==1.12.3
+cffi
 chardet==3.0.4
 Click==7.0
+cloudpickle==3.0.0
 cycler==0.10.0
-Cython==0.29.13
+Cython<3
 decorator==4.4.0
 docker-pycreds==0.4.0
 future==0.17.1
@@ -18,60 +19,60 @@ glfw==1.8.3
 google-pasta==0.1.7
 gql==0.1.0
 graphql-core==2.2.1
-grpcio==1.24.0
+grpcio==1.59.3
 gym==0.10.8
-h5py==2.10.0
+h5py
 idna==2.8
-imageio==2.4.1
-joblib==0.13.2
+imageio==2.9.0
+joblib==1.3.2
 Keras-Applications==1.0.8
 Keras-Preprocessing==1.1.0
 kiwisolver==1.1.0
 libtmux==0.8.1
 lockfile==0.12.2
 Markdown==3.1.1
-matplotlib==3.1.2
+matplotlib==3.4
 moviepy==1.0.1
-mujoco-py==2.0.2.5
-numpy==1.15.2
+free-mujoco-py
+numpy==1.24.4
 nvidia-ml-py3==7.352.0
-opencv-python==4.0.0.21
-pandas==0.24.2
+opencv-python==4.9.0.80
+pandas==1.3.5
 pathtools==0.1.2
-Pillow==6.1.0
+Pillow==6.2.0
 promise==2.2.1
-protobuf==3.9.2
+protobuf==3.20.3
 psutil==5.6.3
 pycparser==2.19
-pygame==1.9.6
+pygame
 pyglet==1.4.4
-pymunk==5.4.2
+pymunk==6.6.0
 pyparsing==2.4.2
-PyQt5==5.13.2
-PyQt5-sip==12.7.0
+PyQt5==5.15.10
+PyQt5-sip==12.13.0
 python-dateutil==2.8.0
 pytz==2019.2
-PyYAML==5.1.2
+PyYAML
 requests==2.22.0
 Rx==1.6.1
-scikit-learn==0.21.3
-scipy==1.3.1
-seaborn==0.10.0
+scikit-learn
+scipy
+seaborn==0.13.2
 sentry-sdk==0.12.2
 shortuuid==0.5.0
 six==1.12.0
 sklearn==0.0
 smmap2==2.0.5
 subprocess32==3.5.4
-tensorboard==1.14.0
+tensorboard==2.13.0
 tensorboardX==1.8
-tensorflow==1.14.0
-tensorflow-estimator==1.14.0
+tensorflow==2.13.0rc0
+tensorflow-estimator
 termcolor==1.1.0
-torch==1.2.0
+torch
 tqdm==4.36.1
 urllib3==1.25.6
 wandb==0.8.3
 watchdog==0.9.0
-Werkzeug==0.16.0
+Werkzeug==1.0.1
 wrapt==1.11.2
diff --git a/rlf/baselines/vec_env/dummy_vec_env.py b/rlf/baselines/vec_env/dummy_vec_env.py
index 818bd53..4367f39 100644
--- a/rlf/baselines/vec_env/dummy_vec_env.py
+++ b/rlf/baselines/vec_env/dummy_vec_env.py
@@ -22,7 +22,7 @@ class DummyVecEnv(VecEnv):
         self.keys, shapes, dtypes = obs_space_info(obs_space)
 
         self.buf_obs = { k: np.zeros((self.num_envs,) + tuple(shapes[k]), dtype=dtypes[k]) for k in self.keys }
-        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool)
+        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool_)
         self.buf_rews  = np.zeros((self.num_envs,), dtype=np.float32)
         self.buf_infos = [{} for _ in range(self.num_envs)]
         self.actions = None
diff --git a/rlf/baselines/vec_env/shmem_vec_env.py b/rlf/baselines/vec_env/shmem_vec_env.py
index 7a4d78d..4d9fa7c 100644
--- a/rlf/baselines/vec_env/shmem_vec_env.py
+++ b/rlf/baselines/vec_env/shmem_vec_env.py
@@ -14,7 +14,7 @@ _NP_TO_CT = {np.float32: ctypes.c_float,
              np.int32: ctypes.c_int32,
              np.int8: ctypes.c_int8,
              np.uint8: ctypes.c_char,
-             np.bool: ctypes.c_bool}
+             np.bool_: ctypes.c_bool}
 
 
 class ShmemVecEnv(VecEnv):
diff --git a/rlf/main.py b/rlf/main.py
index dd7cd4f..dc304ee 100644
--- a/rlf/main.py
+++ b/rlf/main.py
@@ -95,6 +95,7 @@ def run_policy(run_settings):
     args.trajectory_len = None
     test_args.trajectory_len = None
 
+    print(args.num_processes)
     envs = make_vec_envs(args.env_name, args.seed, args.num_processes,
                          args.gamma, args.log_dir, args.device,
                          False, args.env_trans_fn, args)
diff --git a/rlf/rl/envs.py b/rlf/rl/envs.py
index b41b6b9..e59734f 100755
--- a/rlf/rl/envs.py
+++ b/rlf/rl/envs.py
@@ -264,8 +264,8 @@ class VecPyTorchFrameStack(VecEnvWrapper):
     def step_wait(self):
         obs, rews, news, infos = self.venv.step_wait()
 
-        self.stacked_obs[:, :-self.shape_dim0] = \
-            self.stacked_obs[:, self.shape_dim0:]
+        a = self.stacked_obs.clone()
+        self.stacked_obs[:, :-self.shape_dim0] = a[:, self.shape_dim0:]
         for (i, new) in enumerate(news):
             if new:
                 self.stacked_obs[i] = 0
ed09906ce33a6af77bef2e641a45f81306d2f1d4
diff --git a/arguments.py b/arguments.py
index dfc38fb..ec94316 100644
--- a/arguments.py
+++ b/arguments.py
@@ -14,7 +14,8 @@ def grid_args(args):
     set_if_none(args, 'exp_type', 'rnd')
 
     set_if_none(args, 'onehot_state', True)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'sample_clusters', False)
     set_if_none(args, 'action_set_size', 50)
     set_if_none(args, 'test_action_set_size', 50)
@@ -49,7 +50,8 @@ def grid_play_args(args):
         args.n_trajectories = 672
 
     set_if_none(args, 'emb_epochs', 10000)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 16)
     set_if_none(args, 'z_dim', 16)
     set_if_none(args, 'onehot_state', True)
@@ -66,7 +68,8 @@ def grid_play_args(args):
 
 
 def create_args(args):
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
 
     set_if_none(args, 'exp_type', 'NewMain')
     set_if_none(args, 'sample_clusters', False)
@@ -124,15 +127,18 @@ def create_play_args(args):
         args.hidden_dim_option = 128
         args.prefix = 'VideoCreate'
 
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
     args.action_random_sample = False
 
 def stack_args(args):
     set_if_none(args, 'exp_type', 'rnd')
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'action_set_size', 20)
     set_if_none(args, 'test_action_set_size', 20)
     set_if_none(args, 'separate_skip', True)
@@ -172,7 +178,8 @@ def stack_play_args(args):
     set_if_none(args, 'exp_type', 'rnd')
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'emb_epochs', 5000)
 
     if args.train_embeddings and args.n_trajectories == 1024:
@@ -196,8 +203,10 @@ def reco_args(args):
         set_if_none(args, 'action_set_size', 25)
     else:
         set_if_none(args, 'action_set_size', 500)
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'num_eval', 20)
     set_if_none(args, 'entropy_coef', 1e-2)
     set_if_none(args, 'test_action_set_size', 50)
diff --git a/envs/create_game/base_env.py b/envs/create_game/base_env.py
index 35ae827..987066c 100644
--- a/envs/create_game/base_env.py
+++ b/envs/create_game/base_env.py
@@ -123,8 +123,9 @@ class BaseEnv(gym.Env):
         Reset the environment
         """
         self._check_setup()
-        self.space.remove([*self.space.bodies, *self.space.shapes,
-                           *self.space.constraints])
+        # self.space.remove([*self.space.bodies, *self.space.shapes,
+        #                   *self.space.constraints])
+        self.space.remove(*self.space.bodies, *self.space.shapes, *self.space.constraints)
 
         self.ball_traces = []
         self.line_traces = []
diff --git a/envs/create_game/create_game.py b/envs/create_game/create_game.py
index ee5f677..968b4cd 100644
--- a/envs/create_game/create_game.py
+++ b/envs/create_game/create_game.py
@@ -241,7 +241,7 @@ class CreateGame(BaseEnv):
 
     def motion_stopped(self):
         all_objs = self.get_all_objs()
-        vel = np.array([np.sqrt(sum(x.shape.body.velocity ** 2))
+        vel = np.array([np.sqrt((x.shape.body.velocity.x **2 + x.shape.body.velocity.y ** 2))
                         for x in all_objs])
         if (vel < self.settings.min_velocity).all():
             self.zero_vel_steps += 1
diff --git a/envs/create_game/tools/ball.py b/envs/create_game/tools/ball.py
index 052cb47..807ce36 100644
--- a/envs/create_game/tools/ball.py
+++ b/envs/create_game/tools/ball.py
@@ -52,9 +52,10 @@ class Ball(GravityObj):
         if self.color == 'basketball':
             self.img.render(screen, scale, self.flipy)
         else:
-            draw_pos = scale * self.flipy(self.body.position)
-            draw_pos[0] = int(draw_pos[0])
-            draw_pos[1] = int(draw_pos[1])
+            draw_pos1 = scale * self.flipy(self.body.position)
+            draw_pos = pymunk.Vec2d(int(draw_pos1[0]), int(draw_pos1[1]))
+            # draw_pos[0] = int(draw_pos1[0])
+            # draw_pos[1] = int(draw_pos1[1])
 
             if self.is_trace:
                 draw_radius = max(2, int(scale * self.radius) // self.scale_radius)
diff --git a/envs/create_game/tools/basic_obj.py b/envs/create_game/tools/basic_obj.py
index 86e48c4..863fe62 100644
--- a/envs/create_game/tools/basic_obj.py
+++ b/envs/create_game/tools/basic_obj.py
@@ -36,11 +36,12 @@ class BasicObj(object):
         self.attached_shapes.append(self.shape)
 
     def remove_from_space(self, space):
-        space.remove(
-            [*self.attached_bodies,
-            *self.attached_shapes,
-            *self.attached_constraints]
-            )
+        if len(self.attached_shapes) > 0:
+                space.remove(
+                    self.attached_bodies[0],
+                    self.attached_shapes[0],
+                    self.attached_constraints[0]
+                    )
 
     def render(self, screen, scale=None, anti_alias=False):
         raise NotImplemented('not implemented')
diff --git a/envs/create_game/tools/bucket.py b/envs/create_game/tools/bucket.py
index 494768f..580b615 100644
--- a/envs/create_game/tools/bucket.py
+++ b/envs/create_game/tools/bucket.py
@@ -59,7 +59,7 @@ class Bucket(FixedPoly):
         bucket.collision_type = self.collision_type
         bucket.locations = [self.center_position, self.v_1, self.v_2, self.v_3, self.v_4]
         self.shape = bucket
-        space.add(bucket)
+        space.add(self.get_body(), bucket)
         self.attached_shapes.append(bucket)
 
         # Called when 1 (movable objects) collides with 3 (bucket)
diff --git a/envs/create_game/tools/cannon.py b/envs/create_game/tools/cannon.py
index 62c8ba9..faf60ec 100644
--- a/envs/create_game/tools/cannon.py
+++ b/envs/create_game/tools/cannon.py
@@ -60,7 +60,7 @@ class Cannon(FixedRect):
         cannon.collision_type = self.collision_type
         cannon.properties = (self.new_pos, self.launch_dir)
         self.shape = cannon
-        space.add(cannon)
+        space.add(self.img.get_body(), cannon)
         self.attached_shapes.append(cannon)
 
         h = space.add_collision_handler(1, self.collision_type)
diff --git a/envs/create_game/tools/funnel.py b/envs/create_game/tools/funnel.py
index 4619843..526dced 100644
--- a/envs/create_game/tools/funnel.py
+++ b/envs/create_game/tools/funnel.py
@@ -59,7 +59,7 @@ class Funnel(FixedPoly):
         funnel.collision_type = self.collision_type
         funnel.locations = [self.nozzle_position, self.v_1, self.v_2, self.v_3]
         self.shape = funnel
-        space.add(funnel)
+        space.add(self.get_body(), funnel)
         self.attached_shapes.append(funnel)
 
         h = space.add_collision_handler(1, self.collision_type)
diff --git a/envs/create_game/tools/poly.py b/envs/create_game/tools/poly.py
index e875ef5..85adee4 100644
--- a/envs/create_game/tools/poly.py
+++ b/envs/create_game/tools/poly.py
@@ -14,7 +14,7 @@ class FixedPoly(FixedObj):
         self.body = self._create_body(mass, moment)
         self.body.position = pm.Vec2d(pos[0], pos[1])
 
-        self.vertices = self.get_vertices(pm.Vec2d([0., 0.]), n_sides, angle, size)
+        self.vertices = self.get_vertices(pm.Vec2d(0., 0.), n_sides, angle, size)
 
         self.shape = pm.Poly(self.body, self.vertices)
         self.shape.friction = friction
@@ -72,7 +72,7 @@ class Star(FixedPoly):
 
         pointlist = []
         for v in self.vertices:
-            x, y = pm.Vec2d(v).rotated(self.shape.body.angle) + self.shape.body.position
+            x, y = pm.Vec2d(v[0], v[1]).rotated(self.shape.body.angle) + self.shape.body.position
             point = scale * self.flipy([x, y])
             pointlist.append([int(point[0]), int(point[1])])
 
diff --git a/main.py b/main.py
index 2619157..d0be0ad 100644
--- a/main.py
+++ b/main.py
@@ -7,14 +7,14 @@ from method.embedder.embedder import extract_dists
 from method.models.main_method import MainMethod
 from method.models.distance_method import DistanceMethod
 
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 
 from arguments import get_args
 from rlf import get_env_interface, RunSettings, run_policy
 
 import envs.recogym
-import envs.block_stack
+# import envs.block_stack
 import envs.interfaces
 import envs.create_game
 
diff --git a/method/dist_mem.py b/method/dist_mem.py
index 7da3bf1..fbd625d 100644
--- a/method/dist_mem.py
+++ b/method/dist_mem.py
@@ -261,7 +261,8 @@ class DistributionMemory(object):
     def load_distributions(self, load_file):
         path = osp.join('method/embedder/saved_distributions', load_file + '.emb')
         print('loading dists from ' + path)
-        ckpt = torch.load(path)
+        # ckpt = torch.load(path)
+        ckpt = torch.load(path, map_location=torch.device('cpu'))
 
         self.mem = ckpt['mem']
         self.mem_keys = ckpt['mem_keys']
diff --git a/method/embedder/embedder.py b/method/embedder/embedder.py
index 4d2dc0e..08e3297 100644
--- a/method/embedder/embedder.py
+++ b/method/embedder/embedder.py
@@ -23,8 +23,8 @@ import sys
 import os
 import os.path as osp
 from tqdm import tqdm
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 from rlf.rl import utils
 
 from torch.utils import data
diff --git a/requirements.txt b/requirements.txt
index 4cc4255..fcc248a 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,13 +1,14 @@
-absl-py==0.8.0
+absl-py
 argh==0.26.2
 astor==0.8.0
 backports.tempfile==1.0
 backports.weakref==1.0.post1
-cffi==1.12.3
+cffi
 chardet==3.0.4
 Click==7.0
+cloudpickle==3.0.0
 cycler==0.10.0
-Cython==0.29.13
+Cython<3
 decorator==4.4.0
 docker-pycreds==0.4.0
 future==0.17.1
@@ -18,60 +19,60 @@ glfw==1.8.3
 google-pasta==0.1.7
 gql==0.1.0
 graphql-core==2.2.1
-grpcio==1.24.0
+grpcio==1.59.3
 gym==0.10.8
-h5py==2.10.0
+h5py
 idna==2.8
-imageio==2.4.1
-joblib==0.13.2
+imageio==2.9.0
+joblib==1.3.2
 Keras-Applications==1.0.8
 Keras-Preprocessing==1.1.0
 kiwisolver==1.1.0
 libtmux==0.8.1
 lockfile==0.12.2
 Markdown==3.1.1
-matplotlib==3.1.2
+matplotlib==3.4
 moviepy==1.0.1
-mujoco-py==2.0.2.5
-numpy==1.15.2
+free-mujoco-py
+numpy==1.24.4
 nvidia-ml-py3==7.352.0
-opencv-python==4.0.0.21
-pandas==0.24.2
+opencv-python==4.9.0.80
+pandas==1.3.5
 pathtools==0.1.2
-Pillow==6.1.0
+Pillow==6.2.0
 promise==2.2.1
-protobuf==3.9.2
+protobuf==3.20.3
 psutil==5.6.3
 pycparser==2.19
-pygame==1.9.6
+pygame
 pyglet==1.4.4
-pymunk==5.4.2
+pymunk==6.6.0
 pyparsing==2.4.2
-PyQt5==5.13.2
-PyQt5-sip==12.7.0
+PyQt5==5.15.10
+PyQt5-sip==12.13.0
 python-dateutil==2.8.0
 pytz==2019.2
-PyYAML==5.1.2
+PyYAML
 requests==2.22.0
 Rx==1.6.1
-scikit-learn==0.21.3
-scipy==1.3.1
-seaborn==0.10.0
+scikit-learn
+scipy
+seaborn==0.13.2
 sentry-sdk==0.12.2
 shortuuid==0.5.0
 six==1.12.0
 sklearn==0.0
 smmap2==2.0.5
 subprocess32==3.5.4
-tensorboard==1.14.0
+tensorboard==2.13.0
 tensorboardX==1.8
-tensorflow==1.14.0
-tensorflow-estimator==1.14.0
+tensorflow==2.13.0rc0
+tensorflow-estimator
 termcolor==1.1.0
-torch==1.2.0
+torch
 tqdm==4.36.1
 urllib3==1.25.6
 wandb==0.8.3
 watchdog==0.9.0
-Werkzeug==0.16.0
+Werkzeug==1.0.1
 wrapt==1.11.2
diff --git a/rlf/baselines/vec_env/dummy_vec_env.py b/rlf/baselines/vec_env/dummy_vec_env.py
index 818bd53..4367f39 100644
--- a/rlf/baselines/vec_env/dummy_vec_env.py
+++ b/rlf/baselines/vec_env/dummy_vec_env.py
@@ -22,7 +22,7 @@ class DummyVecEnv(VecEnv):
         self.keys, shapes, dtypes = obs_space_info(obs_space)
 
         self.buf_obs = { k: np.zeros((self.num_envs,) + tuple(shapes[k]), dtype=dtypes[k]) for k in self.keys }
-        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool)
+        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool_)
         self.buf_rews  = np.zeros((self.num_envs,), dtype=np.float32)
         self.buf_infos = [{} for _ in range(self.num_envs)]
         self.actions = None
diff --git a/rlf/baselines/vec_env/shmem_vec_env.py b/rlf/baselines/vec_env/shmem_vec_env.py
index 7a4d78d..4d9fa7c 100644
--- a/rlf/baselines/vec_env/shmem_vec_env.py
+++ b/rlf/baselines/vec_env/shmem_vec_env.py
@@ -14,7 +14,7 @@ _NP_TO_CT = {np.float32: ctypes.c_float,
              np.int32: ctypes.c_int32,
              np.int8: ctypes.c_int8,
              np.uint8: ctypes.c_char,
-             np.bool: ctypes.c_bool}
+             np.bool_: ctypes.c_bool}
 
 
 class ShmemVecEnv(VecEnv):
diff --git a/rlf/main.py b/rlf/main.py
index dd7cd4f..dc304ee 100644
--- a/rlf/main.py
+++ b/rlf/main.py
@@ -95,6 +95,7 @@ def run_policy(run_settings):
     args.trajectory_len = None
     test_args.trajectory_len = None
 
+    print(args.num_processes)
     envs = make_vec_envs(args.env_name, args.seed, args.num_processes,
                          args.gamma, args.log_dir, args.device,
                          False, args.env_trans_fn, args)
diff --git a/rlf/rl/envs.py b/rlf/rl/envs.py
index b41b6b9..e59734f 100755
--- a/rlf/rl/envs.py
+++ b/rlf/rl/envs.py
@@ -264,8 +264,8 @@ class VecPyTorchFrameStack(VecEnvWrapper):
     def step_wait(self):
         obs, rews, news, infos = self.venv.step_wait()
 
-        self.stacked_obs[:, :-self.shape_dim0] = \
-            self.stacked_obs[:, self.shape_dim0:]
+        a = self.stacked_obs.clone()
+        self.stacked_obs[:, :-self.shape_dim0] = a[:, self.shape_dim0:]
         for (i, new) in enumerate(news):
             if new:
                 self.stacked_obs[i] = 0
ed09906ce33a6af77bef2e641a45f81306d2f1d4
diff --git a/arguments.py b/arguments.py
index dfc38fb..ec94316 100644
--- a/arguments.py
+++ b/arguments.py
@@ -14,7 +14,8 @@ def grid_args(args):
     set_if_none(args, 'exp_type', 'rnd')
 
     set_if_none(args, 'onehot_state', True)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'sample_clusters', False)
     set_if_none(args, 'action_set_size', 50)
     set_if_none(args, 'test_action_set_size', 50)
@@ -49,7 +50,8 @@ def grid_play_args(args):
         args.n_trajectories = 672
 
     set_if_none(args, 'emb_epochs', 10000)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 16)
     set_if_none(args, 'z_dim', 16)
     set_if_none(args, 'onehot_state', True)
@@ -66,7 +68,8 @@ def grid_play_args(args):
 
 
 def create_args(args):
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
 
     set_if_none(args, 'exp_type', 'NewMain')
     set_if_none(args, 'sample_clusters', False)
@@ -124,15 +127,18 @@ def create_play_args(args):
         args.hidden_dim_option = 128
         args.prefix = 'VideoCreate'
 
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
     args.action_random_sample = False
 
 def stack_args(args):
     set_if_none(args, 'exp_type', 'rnd')
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'action_set_size', 20)
     set_if_none(args, 'test_action_set_size', 20)
     set_if_none(args, 'separate_skip', True)
@@ -172,7 +178,8 @@ def stack_play_args(args):
     set_if_none(args, 'exp_type', 'rnd')
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'emb_epochs', 5000)
 
     if args.train_embeddings and args.n_trajectories == 1024:
@@ -196,8 +203,10 @@ def reco_args(args):
         set_if_none(args, 'action_set_size', 25)
     else:
         set_if_none(args, 'action_set_size', 500)
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'num_eval', 20)
     set_if_none(args, 'entropy_coef', 1e-2)
     set_if_none(args, 'test_action_set_size', 50)
diff --git a/envs/create_game/base_env.py b/envs/create_game/base_env.py
index 35ae827..987066c 100644
--- a/envs/create_game/base_env.py
+++ b/envs/create_game/base_env.py
@@ -123,8 +123,9 @@ class BaseEnv(gym.Env):
         Reset the environment
         """
         self._check_setup()
-        self.space.remove([*self.space.bodies, *self.space.shapes,
-                           *self.space.constraints])
+        # self.space.remove([*self.space.bodies, *self.space.shapes,
+        #                   *self.space.constraints])
+        self.space.remove(*self.space.bodies, *self.space.shapes, *self.space.constraints)
 
         self.ball_traces = []
         self.line_traces = []
diff --git a/envs/create_game/create_game.py b/envs/create_game/create_game.py
index ee5f677..968b4cd 100644
--- a/envs/create_game/create_game.py
+++ b/envs/create_game/create_game.py
@@ -241,7 +241,7 @@ class CreateGame(BaseEnv):
 
     def motion_stopped(self):
         all_objs = self.get_all_objs()
-        vel = np.array([np.sqrt(sum(x.shape.body.velocity ** 2))
+        vel = np.array([np.sqrt((x.shape.body.velocity.x **2 + x.shape.body.velocity.y ** 2))
                         for x in all_objs])
         if (vel < self.settings.min_velocity).all():
             self.zero_vel_steps += 1
diff --git a/envs/create_game/tools/ball.py b/envs/create_game/tools/ball.py
index 052cb47..807ce36 100644
--- a/envs/create_game/tools/ball.py
+++ b/envs/create_game/tools/ball.py
@@ -52,9 +52,10 @@ class Ball(GravityObj):
         if self.color == 'basketball':
             self.img.render(screen, scale, self.flipy)
         else:
-            draw_pos = scale * self.flipy(self.body.position)
-            draw_pos[0] = int(draw_pos[0])
-            draw_pos[1] = int(draw_pos[1])
+            draw_pos1 = scale * self.flipy(self.body.position)
+            draw_pos = pymunk.Vec2d(int(draw_pos1[0]), int(draw_pos1[1]))
+            # draw_pos[0] = int(draw_pos1[0])
+            # draw_pos[1] = int(draw_pos1[1])
 
             if self.is_trace:
                 draw_radius = max(2, int(scale * self.radius) // self.scale_radius)
diff --git a/envs/create_game/tools/basic_obj.py b/envs/create_game/tools/basic_obj.py
index 86e48c4..863fe62 100644
--- a/envs/create_game/tools/basic_obj.py
+++ b/envs/create_game/tools/basic_obj.py
@@ -36,11 +36,12 @@ class BasicObj(object):
         self.attached_shapes.append(self.shape)
 
     def remove_from_space(self, space):
-        space.remove(
-            [*self.attached_bodies,
-            *self.attached_shapes,
-            *self.attached_constraints]
-            )
+        if len(self.attached_shapes) > 0:
+                space.remove(
+                    self.attached_bodies[0],
+                    self.attached_shapes[0],
+                    self.attached_constraints[0]
+                    )
 
     def render(self, screen, scale=None, anti_alias=False):
         raise NotImplemented('not implemented')
diff --git a/envs/create_game/tools/bucket.py b/envs/create_game/tools/bucket.py
index 494768f..580b615 100644
--- a/envs/create_game/tools/bucket.py
+++ b/envs/create_game/tools/bucket.py
@@ -59,7 +59,7 @@ class Bucket(FixedPoly):
         bucket.collision_type = self.collision_type
         bucket.locations = [self.center_position, self.v_1, self.v_2, self.v_3, self.v_4]
         self.shape = bucket
-        space.add(bucket)
+        space.add(self.get_body(), bucket)
         self.attached_shapes.append(bucket)
 
         # Called when 1 (movable objects) collides with 3 (bucket)
diff --git a/envs/create_game/tools/cannon.py b/envs/create_game/tools/cannon.py
index 62c8ba9..317d5c2 100644
--- a/envs/create_game/tools/cannon.py
+++ b/envs/create_game/tools/cannon.py
@@ -60,7 +60,7 @@ class Cannon(FixedRect):
         cannon.collision_type = self.collision_type
         cannon.properties = (self.new_pos, self.launch_dir)
         self.shape = cannon
-        space.add(cannon)
+        space.add([self.get_body(), cannon])
         self.attached_shapes.append(cannon)
 
         h = space.add_collision_handler(1, self.collision_type)
diff --git a/envs/create_game/tools/funnel.py b/envs/create_game/tools/funnel.py
index 4619843..526dced 100644
--- a/envs/create_game/tools/funnel.py
+++ b/envs/create_game/tools/funnel.py
@@ -59,7 +59,7 @@ class Funnel(FixedPoly):
         funnel.collision_type = self.collision_type
         funnel.locations = [self.nozzle_position, self.v_1, self.v_2, self.v_3]
         self.shape = funnel
-        space.add(funnel)
+        space.add(self.get_body(), funnel)
         self.attached_shapes.append(funnel)
 
         h = space.add_collision_handler(1, self.collision_type)
diff --git a/envs/create_game/tools/poly.py b/envs/create_game/tools/poly.py
index e875ef5..85adee4 100644
--- a/envs/create_game/tools/poly.py
+++ b/envs/create_game/tools/poly.py
@@ -14,7 +14,7 @@ class FixedPoly(FixedObj):
         self.body = self._create_body(mass, moment)
         self.body.position = pm.Vec2d(pos[0], pos[1])
 
-        self.vertices = self.get_vertices(pm.Vec2d([0., 0.]), n_sides, angle, size)
+        self.vertices = self.get_vertices(pm.Vec2d(0., 0.), n_sides, angle, size)
 
         self.shape = pm.Poly(self.body, self.vertices)
         self.shape.friction = friction
@@ -72,7 +72,7 @@ class Star(FixedPoly):
 
         pointlist = []
         for v in self.vertices:
-            x, y = pm.Vec2d(v).rotated(self.shape.body.angle) + self.shape.body.position
+            x, y = pm.Vec2d(v[0], v[1]).rotated(self.shape.body.angle) + self.shape.body.position
             point = scale * self.flipy([x, y])
             pointlist.append([int(point[0]), int(point[1])])
 
diff --git a/main.py b/main.py
index 2619157..d0be0ad 100644
--- a/main.py
+++ b/main.py
@@ -7,14 +7,14 @@ from method.embedder.embedder import extract_dists
 from method.models.main_method import MainMethod
 from method.models.distance_method import DistanceMethod
 
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 
 from arguments import get_args
 from rlf import get_env_interface, RunSettings, run_policy
 
 import envs.recogym
-import envs.block_stack
+# import envs.block_stack
 import envs.interfaces
 import envs.create_game
 
diff --git a/method/dist_mem.py b/method/dist_mem.py
index 7da3bf1..fbd625d 100644
--- a/method/dist_mem.py
+++ b/method/dist_mem.py
@@ -261,7 +261,8 @@ class DistributionMemory(object):
     def load_distributions(self, load_file):
         path = osp.join('method/embedder/saved_distributions', load_file + '.emb')
         print('loading dists from ' + path)
-        ckpt = torch.load(path)
+        # ckpt = torch.load(path)
+        ckpt = torch.load(path, map_location=torch.device('cpu'))
 
         self.mem = ckpt['mem']
         self.mem_keys = ckpt['mem_keys']
diff --git a/method/embedder/embedder.py b/method/embedder/embedder.py
index 4d2dc0e..08e3297 100644
--- a/method/embedder/embedder.py
+++ b/method/embedder/embedder.py
@@ -23,8 +23,8 @@ import sys
 import os
 import os.path as osp
 from tqdm import tqdm
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 from rlf.rl import utils
 
 from torch.utils import data
diff --git a/requirements.txt b/requirements.txt
index 4cc4255..fcc248a 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,13 +1,14 @@
-absl-py==0.8.0
+absl-py
 argh==0.26.2
 astor==0.8.0
 backports.tempfile==1.0
 backports.weakref==1.0.post1
-cffi==1.12.3
+cffi
 chardet==3.0.4
 Click==7.0
+cloudpickle==3.0.0
 cycler==0.10.0
-Cython==0.29.13
+Cython<3
 decorator==4.4.0
 docker-pycreds==0.4.0
 future==0.17.1
@@ -18,60 +19,60 @@ glfw==1.8.3
 google-pasta==0.1.7
 gql==0.1.0
 graphql-core==2.2.1
-grpcio==1.24.0
+grpcio==1.59.3
 gym==0.10.8
-h5py==2.10.0
+h5py
 idna==2.8
-imageio==2.4.1
-joblib==0.13.2
+imageio==2.9.0
+joblib==1.3.2
 Keras-Applications==1.0.8
 Keras-Preprocessing==1.1.0
 kiwisolver==1.1.0
 libtmux==0.8.1
 lockfile==0.12.2
 Markdown==3.1.1
-matplotlib==3.1.2
+matplotlib==3.4
 moviepy==1.0.1
-mujoco-py==2.0.2.5
-numpy==1.15.2
+free-mujoco-py
+numpy==1.24.4
 nvidia-ml-py3==7.352.0
-opencv-python==4.0.0.21
-pandas==0.24.2
+opencv-python==4.9.0.80
+pandas==1.3.5
 pathtools==0.1.2
-Pillow==6.1.0
+Pillow==6.2.0
 promise==2.2.1
-protobuf==3.9.2
+protobuf==3.20.3
 psutil==5.6.3
 pycparser==2.19
-pygame==1.9.6
+pygame
 pyglet==1.4.4
-pymunk==5.4.2
+pymunk==6.6.0
 pyparsing==2.4.2
-PyQt5==5.13.2
-PyQt5-sip==12.7.0
+PyQt5==5.15.10
+PyQt5-sip==12.13.0
 python-dateutil==2.8.0
 pytz==2019.2
-PyYAML==5.1.2
+PyYAML
 requests==2.22.0
 Rx==1.6.1
-scikit-learn==0.21.3
-scipy==1.3.1
-seaborn==0.10.0
+scikit-learn
+scipy
+seaborn==0.13.2
 sentry-sdk==0.12.2
 shortuuid==0.5.0
 six==1.12.0
 sklearn==0.0
 smmap2==2.0.5
 subprocess32==3.5.4
-tensorboard==1.14.0
+tensorboard==2.13.0
 tensorboardX==1.8
-tensorflow==1.14.0
-tensorflow-estimator==1.14.0
+tensorflow==2.13.0rc0
+tensorflow-estimator
 termcolor==1.1.0
-torch==1.2.0
+torch
 tqdm==4.36.1
 urllib3==1.25.6
 wandb==0.8.3
 watchdog==0.9.0
-Werkzeug==0.16.0
+Werkzeug==1.0.1
 wrapt==1.11.2
diff --git a/rlf/baselines/vec_env/dummy_vec_env.py b/rlf/baselines/vec_env/dummy_vec_env.py
index 818bd53..4367f39 100644
--- a/rlf/baselines/vec_env/dummy_vec_env.py
+++ b/rlf/baselines/vec_env/dummy_vec_env.py
@@ -22,7 +22,7 @@ class DummyVecEnv(VecEnv):
         self.keys, shapes, dtypes = obs_space_info(obs_space)
 
         self.buf_obs = { k: np.zeros((self.num_envs,) + tuple(shapes[k]), dtype=dtypes[k]) for k in self.keys }
-        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool)
+        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool_)
         self.buf_rews  = np.zeros((self.num_envs,), dtype=np.float32)
         self.buf_infos = [{} for _ in range(self.num_envs)]
         self.actions = None
diff --git a/rlf/baselines/vec_env/shmem_vec_env.py b/rlf/baselines/vec_env/shmem_vec_env.py
index 7a4d78d..4d9fa7c 100644
--- a/rlf/baselines/vec_env/shmem_vec_env.py
+++ b/rlf/baselines/vec_env/shmem_vec_env.py
@@ -14,7 +14,7 @@ _NP_TO_CT = {np.float32: ctypes.c_float,
              np.int32: ctypes.c_int32,
              np.int8: ctypes.c_int8,
              np.uint8: ctypes.c_char,
-             np.bool: ctypes.c_bool}
+             np.bool_: ctypes.c_bool}
 
 
 class ShmemVecEnv(VecEnv):
diff --git a/rlf/main.py b/rlf/main.py
index dd7cd4f..dc304ee 100644
--- a/rlf/main.py
+++ b/rlf/main.py
@@ -95,6 +95,7 @@ def run_policy(run_settings):
     args.trajectory_len = None
     test_args.trajectory_len = None
 
+    print(args.num_processes)
     envs = make_vec_envs(args.env_name, args.seed, args.num_processes,
                          args.gamma, args.log_dir, args.device,
                          False, args.env_trans_fn, args)
diff --git a/rlf/rl/envs.py b/rlf/rl/envs.py
index b41b6b9..e59734f 100755
--- a/rlf/rl/envs.py
+++ b/rlf/rl/envs.py
@@ -264,8 +264,8 @@ class VecPyTorchFrameStack(VecEnvWrapper):
     def step_wait(self):
         obs, rews, news, infos = self.venv.step_wait()
 
-        self.stacked_obs[:, :-self.shape_dim0] = \
-            self.stacked_obs[:, self.shape_dim0:]
+        a = self.stacked_obs.clone()
+        self.stacked_obs[:, :-self.shape_dim0] = a[:, self.shape_dim0:]
         for (i, new) in enumerate(news):
             if new:
                 self.stacked_obs[i] = 0
ed09906ce33a6af77bef2e641a45f81306d2f1d4
diff --git a/arguments.py b/arguments.py
index dfc38fb..ec94316 100644
--- a/arguments.py
+++ b/arguments.py
@@ -14,7 +14,8 @@ def grid_args(args):
     set_if_none(args, 'exp_type', 'rnd')
 
     set_if_none(args, 'onehot_state', True)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'sample_clusters', False)
     set_if_none(args, 'action_set_size', 50)
     set_if_none(args, 'test_action_set_size', 50)
@@ -49,7 +50,8 @@ def grid_play_args(args):
         args.n_trajectories = 672
 
     set_if_none(args, 'emb_epochs', 10000)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 16)
     set_if_none(args, 'z_dim', 16)
     set_if_none(args, 'onehot_state', True)
@@ -66,7 +68,8 @@ def grid_play_args(args):
 
 
 def create_args(args):
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
 
     set_if_none(args, 'exp_type', 'NewMain')
     set_if_none(args, 'sample_clusters', False)
@@ -124,15 +127,18 @@ def create_play_args(args):
         args.hidden_dim_option = 128
         args.prefix = 'VideoCreate'
 
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
     args.action_random_sample = False
 
 def stack_args(args):
     set_if_none(args, 'exp_type', 'rnd')
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'action_set_size', 20)
     set_if_none(args, 'test_action_set_size', 20)
     set_if_none(args, 'separate_skip', True)
@@ -172,7 +178,8 @@ def stack_play_args(args):
     set_if_none(args, 'exp_type', 'rnd')
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'emb_epochs', 5000)
 
     if args.train_embeddings and args.n_trajectories == 1024:
@@ -196,8 +203,10 @@ def reco_args(args):
         set_if_none(args, 'action_set_size', 25)
     else:
         set_if_none(args, 'action_set_size', 500)
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'num_eval', 20)
     set_if_none(args, 'entropy_coef', 1e-2)
     set_if_none(args, 'test_action_set_size', 50)
diff --git a/envs/create_game/base_env.py b/envs/create_game/base_env.py
index 35ae827..987066c 100644
--- a/envs/create_game/base_env.py
+++ b/envs/create_game/base_env.py
@@ -123,8 +123,9 @@ class BaseEnv(gym.Env):
         Reset the environment
         """
         self._check_setup()
-        self.space.remove([*self.space.bodies, *self.space.shapes,
-                           *self.space.constraints])
+        # self.space.remove([*self.space.bodies, *self.space.shapes,
+        #                   *self.space.constraints])
+        self.space.remove(*self.space.bodies, *self.space.shapes, *self.space.constraints)
 
         self.ball_traces = []
         self.line_traces = []
diff --git a/envs/create_game/create_game.py b/envs/create_game/create_game.py
index ee5f677..968b4cd 100644
--- a/envs/create_game/create_game.py
+++ b/envs/create_game/create_game.py
@@ -241,7 +241,7 @@ class CreateGame(BaseEnv):
 
     def motion_stopped(self):
         all_objs = self.get_all_objs()
-        vel = np.array([np.sqrt(sum(x.shape.body.velocity ** 2))
+        vel = np.array([np.sqrt((x.shape.body.velocity.x **2 + x.shape.body.velocity.y ** 2))
                         for x in all_objs])
         if (vel < self.settings.min_velocity).all():
             self.zero_vel_steps += 1
diff --git a/envs/create_game/tools/ball.py b/envs/create_game/tools/ball.py
index 052cb47..807ce36 100644
--- a/envs/create_game/tools/ball.py
+++ b/envs/create_game/tools/ball.py
@@ -52,9 +52,10 @@ class Ball(GravityObj):
         if self.color == 'basketball':
             self.img.render(screen, scale, self.flipy)
         else:
-            draw_pos = scale * self.flipy(self.body.position)
-            draw_pos[0] = int(draw_pos[0])
-            draw_pos[1] = int(draw_pos[1])
+            draw_pos1 = scale * self.flipy(self.body.position)
+            draw_pos = pymunk.Vec2d(int(draw_pos1[0]), int(draw_pos1[1]))
+            # draw_pos[0] = int(draw_pos1[0])
+            # draw_pos[1] = int(draw_pos1[1])
 
             if self.is_trace:
                 draw_radius = max(2, int(scale * self.radius) // self.scale_radius)
diff --git a/envs/create_game/tools/basic_obj.py b/envs/create_game/tools/basic_obj.py
index 86e48c4..863fe62 100644
--- a/envs/create_game/tools/basic_obj.py
+++ b/envs/create_game/tools/basic_obj.py
@@ -36,11 +36,12 @@ class BasicObj(object):
         self.attached_shapes.append(self.shape)
 
     def remove_from_space(self, space):
-        space.remove(
-            [*self.attached_bodies,
-            *self.attached_shapes,
-            *self.attached_constraints]
-            )
+        if len(self.attached_shapes) > 0:
+                space.remove(
+                    self.attached_bodies[0],
+                    self.attached_shapes[0],
+                    self.attached_constraints[0]
+                    )
 
     def render(self, screen, scale=None, anti_alias=False):
         raise NotImplemented('not implemented')
diff --git a/envs/create_game/tools/bucket.py b/envs/create_game/tools/bucket.py
index 494768f..580b615 100644
--- a/envs/create_game/tools/bucket.py
+++ b/envs/create_game/tools/bucket.py
@@ -59,7 +59,7 @@ class Bucket(FixedPoly):
         bucket.collision_type = self.collision_type
         bucket.locations = [self.center_position, self.v_1, self.v_2, self.v_3, self.v_4]
         self.shape = bucket
-        space.add(bucket)
+        space.add(self.get_body(), bucket)
         self.attached_shapes.append(bucket)
 
         # Called when 1 (movable objects) collides with 3 (bucket)
diff --git a/envs/create_game/tools/cannon.py b/envs/create_game/tools/cannon.py
index 62c8ba9..06bef91 100644
--- a/envs/create_game/tools/cannon.py
+++ b/envs/create_game/tools/cannon.py
@@ -60,6 +60,7 @@ class Cannon(FixedRect):
         cannon.collision_type = self.collision_type
         cannon.properties = (self.new_pos, self.launch_dir)
         self.shape = cannon
+        space.add(self.get_body())
         space.add(cannon)
         self.attached_shapes.append(cannon)
 
diff --git a/envs/create_game/tools/funnel.py b/envs/create_game/tools/funnel.py
index 4619843..526dced 100644
--- a/envs/create_game/tools/funnel.py
+++ b/envs/create_game/tools/funnel.py
@@ -59,7 +59,7 @@ class Funnel(FixedPoly):
         funnel.collision_type = self.collision_type
         funnel.locations = [self.nozzle_position, self.v_1, self.v_2, self.v_3]
         self.shape = funnel
-        space.add(funnel)
+        space.add(self.get_body(), funnel)
         self.attached_shapes.append(funnel)
 
         h = space.add_collision_handler(1, self.collision_type)
diff --git a/envs/create_game/tools/poly.py b/envs/create_game/tools/poly.py
index e875ef5..85adee4 100644
--- a/envs/create_game/tools/poly.py
+++ b/envs/create_game/tools/poly.py
@@ -14,7 +14,7 @@ class FixedPoly(FixedObj):
         self.body = self._create_body(mass, moment)
         self.body.position = pm.Vec2d(pos[0], pos[1])
 
-        self.vertices = self.get_vertices(pm.Vec2d([0., 0.]), n_sides, angle, size)
+        self.vertices = self.get_vertices(pm.Vec2d(0., 0.), n_sides, angle, size)
 
         self.shape = pm.Poly(self.body, self.vertices)
         self.shape.friction = friction
@@ -72,7 +72,7 @@ class Star(FixedPoly):
 
         pointlist = []
         for v in self.vertices:
-            x, y = pm.Vec2d(v).rotated(self.shape.body.angle) + self.shape.body.position
+            x, y = pm.Vec2d(v[0], v[1]).rotated(self.shape.body.angle) + self.shape.body.position
             point = scale * self.flipy([x, y])
             pointlist.append([int(point[0]), int(point[1])])
 
diff --git a/main.py b/main.py
index 2619157..d0be0ad 100644
--- a/main.py
+++ b/main.py
@@ -7,14 +7,14 @@ from method.embedder.embedder import extract_dists
 from method.models.main_method import MainMethod
 from method.models.distance_method import DistanceMethod
 
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 
 from arguments import get_args
 from rlf import get_env_interface, RunSettings, run_policy
 
 import envs.recogym
-import envs.block_stack
+# import envs.block_stack
 import envs.interfaces
 import envs.create_game
 
diff --git a/method/dist_mem.py b/method/dist_mem.py
index 7da3bf1..fbd625d 100644
--- a/method/dist_mem.py
+++ b/method/dist_mem.py
@@ -261,7 +261,8 @@ class DistributionMemory(object):
     def load_distributions(self, load_file):
         path = osp.join('method/embedder/saved_distributions', load_file + '.emb')
         print('loading dists from ' + path)
-        ckpt = torch.load(path)
+        # ckpt = torch.load(path)
+        ckpt = torch.load(path, map_location=torch.device('cpu'))
 
         self.mem = ckpt['mem']
         self.mem_keys = ckpt['mem_keys']
diff --git a/method/embedder/embedder.py b/method/embedder/embedder.py
index 4d2dc0e..08e3297 100644
--- a/method/embedder/embedder.py
+++ b/method/embedder/embedder.py
@@ -23,8 +23,8 @@ import sys
 import os
 import os.path as osp
 from tqdm import tqdm
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 from rlf.rl import utils
 
 from torch.utils import data
diff --git a/requirements.txt b/requirements.txt
index 4cc4255..fcc248a 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,13 +1,14 @@
-absl-py==0.8.0
+absl-py
 argh==0.26.2
 astor==0.8.0
 backports.tempfile==1.0
 backports.weakref==1.0.post1
-cffi==1.12.3
+cffi
 chardet==3.0.4
 Click==7.0
+cloudpickle==3.0.0
 cycler==0.10.0
-Cython==0.29.13
+Cython<3
 decorator==4.4.0
 docker-pycreds==0.4.0
 future==0.17.1
@@ -18,60 +19,60 @@ glfw==1.8.3
 google-pasta==0.1.7
 gql==0.1.0
 graphql-core==2.2.1
-grpcio==1.24.0
+grpcio==1.59.3
 gym==0.10.8
-h5py==2.10.0
+h5py
 idna==2.8
-imageio==2.4.1
-joblib==0.13.2
+imageio==2.9.0
+joblib==1.3.2
 Keras-Applications==1.0.8
 Keras-Preprocessing==1.1.0
 kiwisolver==1.1.0
 libtmux==0.8.1
 lockfile==0.12.2
 Markdown==3.1.1
-matplotlib==3.1.2
+matplotlib==3.4
 moviepy==1.0.1
-mujoco-py==2.0.2.5
-numpy==1.15.2
+free-mujoco-py
+numpy==1.24.4
 nvidia-ml-py3==7.352.0
-opencv-python==4.0.0.21
-pandas==0.24.2
+opencv-python==4.9.0.80
+pandas==1.3.5
 pathtools==0.1.2
-Pillow==6.1.0
+Pillow==6.2.0
 promise==2.2.1
-protobuf==3.9.2
+protobuf==3.20.3
 psutil==5.6.3
 pycparser==2.19
-pygame==1.9.6
+pygame
 pyglet==1.4.4
-pymunk==5.4.2
+pymunk==6.6.0
 pyparsing==2.4.2
-PyQt5==5.13.2
-PyQt5-sip==12.7.0
+PyQt5==5.15.10
+PyQt5-sip==12.13.0
 python-dateutil==2.8.0
 pytz==2019.2
-PyYAML==5.1.2
+PyYAML
 requests==2.22.0
 Rx==1.6.1
-scikit-learn==0.21.3
-scipy==1.3.1
-seaborn==0.10.0
+scikit-learn
+scipy
+seaborn==0.13.2
 sentry-sdk==0.12.2
 shortuuid==0.5.0
 six==1.12.0
 sklearn==0.0
 smmap2==2.0.5
 subprocess32==3.5.4
-tensorboard==1.14.0
+tensorboard==2.13.0
 tensorboardX==1.8
-tensorflow==1.14.0
-tensorflow-estimator==1.14.0
+tensorflow==2.13.0rc0
+tensorflow-estimator
 termcolor==1.1.0
-torch==1.2.0
+torch
 tqdm==4.36.1
 urllib3==1.25.6
 wandb==0.8.3
 watchdog==0.9.0
-Werkzeug==0.16.0
+Werkzeug==1.0.1
 wrapt==1.11.2
diff --git a/rlf/baselines/vec_env/dummy_vec_env.py b/rlf/baselines/vec_env/dummy_vec_env.py
index 818bd53..4367f39 100644
--- a/rlf/baselines/vec_env/dummy_vec_env.py
+++ b/rlf/baselines/vec_env/dummy_vec_env.py
@@ -22,7 +22,7 @@ class DummyVecEnv(VecEnv):
         self.keys, shapes, dtypes = obs_space_info(obs_space)
 
         self.buf_obs = { k: np.zeros((self.num_envs,) + tuple(shapes[k]), dtype=dtypes[k]) for k in self.keys }
-        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool)
+        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool_)
         self.buf_rews  = np.zeros((self.num_envs,), dtype=np.float32)
         self.buf_infos = [{} for _ in range(self.num_envs)]
         self.actions = None
diff --git a/rlf/baselines/vec_env/shmem_vec_env.py b/rlf/baselines/vec_env/shmem_vec_env.py
index 7a4d78d..4d9fa7c 100644
--- a/rlf/baselines/vec_env/shmem_vec_env.py
+++ b/rlf/baselines/vec_env/shmem_vec_env.py
@@ -14,7 +14,7 @@ _NP_TO_CT = {np.float32: ctypes.c_float,
              np.int32: ctypes.c_int32,
              np.int8: ctypes.c_int8,
              np.uint8: ctypes.c_char,
-             np.bool: ctypes.c_bool}
+             np.bool_: ctypes.c_bool}
 
 
 class ShmemVecEnv(VecEnv):
diff --git a/rlf/main.py b/rlf/main.py
index dd7cd4f..dc304ee 100644
--- a/rlf/main.py
+++ b/rlf/main.py
@@ -95,6 +95,7 @@ def run_policy(run_settings):
     args.trajectory_len = None
     test_args.trajectory_len = None
 
+    print(args.num_processes)
     envs = make_vec_envs(args.env_name, args.seed, args.num_processes,
                          args.gamma, args.log_dir, args.device,
                          False, args.env_trans_fn, args)
diff --git a/rlf/rl/envs.py b/rlf/rl/envs.py
index b41b6b9..e59734f 100755
--- a/rlf/rl/envs.py
+++ b/rlf/rl/envs.py
@@ -264,8 +264,8 @@ class VecPyTorchFrameStack(VecEnvWrapper):
     def step_wait(self):
         obs, rews, news, infos = self.venv.step_wait()
 
-        self.stacked_obs[:, :-self.shape_dim0] = \
-            self.stacked_obs[:, self.shape_dim0:]
+        a = self.stacked_obs.clone()
+        self.stacked_obs[:, :-self.shape_dim0] = a[:, self.shape_dim0:]
         for (i, new) in enumerate(news):
             if new:
                 self.stacked_obs[i] = 0
ed09906ce33a6af77bef2e641a45f81306d2f1d4
diff --git a/arguments.py b/arguments.py
index dfc38fb..ec94316 100644
--- a/arguments.py
+++ b/arguments.py
@@ -14,7 +14,8 @@ def grid_args(args):
     set_if_none(args, 'exp_type', 'rnd')
 
     set_if_none(args, 'onehot_state', True)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'sample_clusters', False)
     set_if_none(args, 'action_set_size', 50)
     set_if_none(args, 'test_action_set_size', 50)
@@ -49,7 +50,8 @@ def grid_play_args(args):
         args.n_trajectories = 672
 
     set_if_none(args, 'emb_epochs', 10000)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 16)
     set_if_none(args, 'z_dim', 16)
     set_if_none(args, 'onehot_state', True)
@@ -66,7 +68,8 @@ def grid_play_args(args):
 
 
 def create_args(args):
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
 
     set_if_none(args, 'exp_type', 'NewMain')
     set_if_none(args, 'sample_clusters', False)
@@ -124,15 +127,18 @@ def create_play_args(args):
         args.hidden_dim_option = 128
         args.prefix = 'VideoCreate'
 
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
     args.action_random_sample = False
 
 def stack_args(args):
     set_if_none(args, 'exp_type', 'rnd')
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'action_set_size', 20)
     set_if_none(args, 'test_action_set_size', 20)
     set_if_none(args, 'separate_skip', True)
@@ -172,7 +178,8 @@ def stack_play_args(args):
     set_if_none(args, 'exp_type', 'rnd')
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'emb_epochs', 5000)
 
     if args.train_embeddings and args.n_trajectories == 1024:
@@ -196,8 +203,10 @@ def reco_args(args):
         set_if_none(args, 'action_set_size', 25)
     else:
         set_if_none(args, 'action_set_size', 500)
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'num_eval', 20)
     set_if_none(args, 'entropy_coef', 1e-2)
     set_if_none(args, 'test_action_set_size', 50)
diff --git a/envs/create_game/base_env.py b/envs/create_game/base_env.py
index 35ae827..987066c 100644
--- a/envs/create_game/base_env.py
+++ b/envs/create_game/base_env.py
@@ -123,8 +123,9 @@ class BaseEnv(gym.Env):
         Reset the environment
         """
         self._check_setup()
-        self.space.remove([*self.space.bodies, *self.space.shapes,
-                           *self.space.constraints])
+        # self.space.remove([*self.space.bodies, *self.space.shapes,
+        #                   *self.space.constraints])
+        self.space.remove(*self.space.bodies, *self.space.shapes, *self.space.constraints)
 
         self.ball_traces = []
         self.line_traces = []
diff --git a/envs/create_game/create_game.py b/envs/create_game/create_game.py
index ee5f677..968b4cd 100644
--- a/envs/create_game/create_game.py
+++ b/envs/create_game/create_game.py
@@ -241,7 +241,7 @@ class CreateGame(BaseEnv):
 
     def motion_stopped(self):
         all_objs = self.get_all_objs()
-        vel = np.array([np.sqrt(sum(x.shape.body.velocity ** 2))
+        vel = np.array([np.sqrt((x.shape.body.velocity.x **2 + x.shape.body.velocity.y ** 2))
                         for x in all_objs])
         if (vel < self.settings.min_velocity).all():
             self.zero_vel_steps += 1
diff --git a/envs/create_game/tools/ball.py b/envs/create_game/tools/ball.py
index 052cb47..807ce36 100644
--- a/envs/create_game/tools/ball.py
+++ b/envs/create_game/tools/ball.py
@@ -52,9 +52,10 @@ class Ball(GravityObj):
         if self.color == 'basketball':
             self.img.render(screen, scale, self.flipy)
         else:
-            draw_pos = scale * self.flipy(self.body.position)
-            draw_pos[0] = int(draw_pos[0])
-            draw_pos[1] = int(draw_pos[1])
+            draw_pos1 = scale * self.flipy(self.body.position)
+            draw_pos = pymunk.Vec2d(int(draw_pos1[0]), int(draw_pos1[1]))
+            # draw_pos[0] = int(draw_pos1[0])
+            # draw_pos[1] = int(draw_pos1[1])
 
             if self.is_trace:
                 draw_radius = max(2, int(scale * self.radius) // self.scale_radius)
diff --git a/envs/create_game/tools/basic_obj.py b/envs/create_game/tools/basic_obj.py
index 86e48c4..863fe62 100644
--- a/envs/create_game/tools/basic_obj.py
+++ b/envs/create_game/tools/basic_obj.py
@@ -36,11 +36,12 @@ class BasicObj(object):
         self.attached_shapes.append(self.shape)
 
     def remove_from_space(self, space):
-        space.remove(
-            [*self.attached_bodies,
-            *self.attached_shapes,
-            *self.attached_constraints]
-            )
+        if len(self.attached_shapes) > 0:
+                space.remove(
+                    self.attached_bodies[0],
+                    self.attached_shapes[0],
+                    self.attached_constraints[0]
+                    )
 
     def render(self, screen, scale=None, anti_alias=False):
         raise NotImplemented('not implemented')
diff --git a/envs/create_game/tools/bucket.py b/envs/create_game/tools/bucket.py
index 494768f..580b615 100644
--- a/envs/create_game/tools/bucket.py
+++ b/envs/create_game/tools/bucket.py
@@ -59,7 +59,7 @@ class Bucket(FixedPoly):
         bucket.collision_type = self.collision_type
         bucket.locations = [self.center_position, self.v_1, self.v_2, self.v_3, self.v_4]
         self.shape = bucket
-        space.add(bucket)
+        space.add(self.get_body(), bucket)
         self.attached_shapes.append(bucket)
 
         # Called when 1 (movable objects) collides with 3 (bucket)
diff --git a/envs/create_game/tools/cannon.py b/envs/create_game/tools/cannon.py
index 62c8ba9..cd68bc8 100644
--- a/envs/create_game/tools/cannon.py
+++ b/envs/create_game/tools/cannon.py
@@ -60,6 +60,7 @@ class Cannon(FixedRect):
         cannon.collision_type = self.collision_type
         cannon.properties = (self.new_pos, self.launch_dir)
         self.shape = cannon
+        space.add(self.get_body())
         space.add(cannon)
         self.attached_shapes.append(cannon)
 
@@ -93,6 +94,7 @@ class Fan(FixedRect):
         fan.collision_type = self.collision_type
         fan.properties = self.launch_dir
         self.shape = fan
+        space.add(self.get_body())
         space.add(fan)
         self.attached_shapes.append(fan)
 
diff --git a/envs/create_game/tools/funnel.py b/envs/create_game/tools/funnel.py
index 4619843..526dced 100644
--- a/envs/create_game/tools/funnel.py
+++ b/envs/create_game/tools/funnel.py
@@ -59,7 +59,7 @@ class Funnel(FixedPoly):
         funnel.collision_type = self.collision_type
         funnel.locations = [self.nozzle_position, self.v_1, self.v_2, self.v_3]
         self.shape = funnel
-        space.add(funnel)
+        space.add(self.get_body(), funnel)
         self.attached_shapes.append(funnel)
 
         h = space.add_collision_handler(1, self.collision_type)
diff --git a/envs/create_game/tools/poly.py b/envs/create_game/tools/poly.py
index e875ef5..85adee4 100644
--- a/envs/create_game/tools/poly.py
+++ b/envs/create_game/tools/poly.py
@@ -14,7 +14,7 @@ class FixedPoly(FixedObj):
         self.body = self._create_body(mass, moment)
         self.body.position = pm.Vec2d(pos[0], pos[1])
 
-        self.vertices = self.get_vertices(pm.Vec2d([0., 0.]), n_sides, angle, size)
+        self.vertices = self.get_vertices(pm.Vec2d(0., 0.), n_sides, angle, size)
 
         self.shape = pm.Poly(self.body, self.vertices)
         self.shape.friction = friction
@@ -72,7 +72,7 @@ class Star(FixedPoly):
 
         pointlist = []
         for v in self.vertices:
-            x, y = pm.Vec2d(v).rotated(self.shape.body.angle) + self.shape.body.position
+            x, y = pm.Vec2d(v[0], v[1]).rotated(self.shape.body.angle) + self.shape.body.position
             point = scale * self.flipy([x, y])
             pointlist.append([int(point[0]), int(point[1])])
 
diff --git a/main.py b/main.py
index 2619157..d0be0ad 100644
--- a/main.py
+++ b/main.py
@@ -7,14 +7,14 @@ from method.embedder.embedder import extract_dists
 from method.models.main_method import MainMethod
 from method.models.distance_method import DistanceMethod
 
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 
 from arguments import get_args
 from rlf import get_env_interface, RunSettings, run_policy
 
 import envs.recogym
-import envs.block_stack
+# import envs.block_stack
 import envs.interfaces
 import envs.create_game
 
diff --git a/method/dist_mem.py b/method/dist_mem.py
index 7da3bf1..fbd625d 100644
--- a/method/dist_mem.py
+++ b/method/dist_mem.py
@@ -261,7 +261,8 @@ class DistributionMemory(object):
     def load_distributions(self, load_file):
         path = osp.join('method/embedder/saved_distributions', load_file + '.emb')
         print('loading dists from ' + path)
-        ckpt = torch.load(path)
+        # ckpt = torch.load(path)
+        ckpt = torch.load(path, map_location=torch.device('cpu'))
 
         self.mem = ckpt['mem']
         self.mem_keys = ckpt['mem_keys']
diff --git a/method/embedder/embedder.py b/method/embedder/embedder.py
index 4d2dc0e..08e3297 100644
--- a/method/embedder/embedder.py
+++ b/method/embedder/embedder.py
@@ -23,8 +23,8 @@ import sys
 import os
 import os.path as osp
 from tqdm import tqdm
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 from rlf.rl import utils
 
 from torch.utils import data
diff --git a/requirements.txt b/requirements.txt
index 4cc4255..fcc248a 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,13 +1,14 @@
-absl-py==0.8.0
+absl-py
 argh==0.26.2
 astor==0.8.0
 backports.tempfile==1.0
 backports.weakref==1.0.post1
-cffi==1.12.3
+cffi
 chardet==3.0.4
 Click==7.0
+cloudpickle==3.0.0
 cycler==0.10.0
-Cython==0.29.13
+Cython<3
 decorator==4.4.0
 docker-pycreds==0.4.0
 future==0.17.1
@@ -18,60 +19,60 @@ glfw==1.8.3
 google-pasta==0.1.7
 gql==0.1.0
 graphql-core==2.2.1
-grpcio==1.24.0
+grpcio==1.59.3
 gym==0.10.8
-h5py==2.10.0
+h5py
 idna==2.8
-imageio==2.4.1
-joblib==0.13.2
+imageio==2.9.0
+joblib==1.3.2
 Keras-Applications==1.0.8
 Keras-Preprocessing==1.1.0
 kiwisolver==1.1.0
 libtmux==0.8.1
 lockfile==0.12.2
 Markdown==3.1.1
-matplotlib==3.1.2
+matplotlib==3.4
 moviepy==1.0.1
-mujoco-py==2.0.2.5
-numpy==1.15.2
+free-mujoco-py
+numpy==1.24.4
 nvidia-ml-py3==7.352.0
-opencv-python==4.0.0.21
-pandas==0.24.2
+opencv-python==4.9.0.80
+pandas==1.3.5
 pathtools==0.1.2
-Pillow==6.1.0
+Pillow==6.2.0
 promise==2.2.1
-protobuf==3.9.2
+protobuf==3.20.3
 psutil==5.6.3
 pycparser==2.19
-pygame==1.9.6
+pygame
 pyglet==1.4.4
-pymunk==5.4.2
+pymunk==6.6.0
 pyparsing==2.4.2
-PyQt5==5.13.2
-PyQt5-sip==12.7.0
+PyQt5==5.15.10
+PyQt5-sip==12.13.0
 python-dateutil==2.8.0
 pytz==2019.2
-PyYAML==5.1.2
+PyYAML
 requests==2.22.0
 Rx==1.6.1
-scikit-learn==0.21.3
-scipy==1.3.1
-seaborn==0.10.0
+scikit-learn
+scipy
+seaborn==0.13.2
 sentry-sdk==0.12.2
 shortuuid==0.5.0
 six==1.12.0
 sklearn==0.0
 smmap2==2.0.5
 subprocess32==3.5.4
-tensorboard==1.14.0
+tensorboard==2.13.0
 tensorboardX==1.8
-tensorflow==1.14.0
-tensorflow-estimator==1.14.0
+tensorflow==2.13.0rc0
+tensorflow-estimator
 termcolor==1.1.0
-torch==1.2.0
+torch
 tqdm==4.36.1
 urllib3==1.25.6
 wandb==0.8.3
 watchdog==0.9.0
-Werkzeug==0.16.0
+Werkzeug==1.0.1
 wrapt==1.11.2
diff --git a/rlf/baselines/vec_env/dummy_vec_env.py b/rlf/baselines/vec_env/dummy_vec_env.py
index 818bd53..4367f39 100644
--- a/rlf/baselines/vec_env/dummy_vec_env.py
+++ b/rlf/baselines/vec_env/dummy_vec_env.py
@@ -22,7 +22,7 @@ class DummyVecEnv(VecEnv):
         self.keys, shapes, dtypes = obs_space_info(obs_space)
 
         self.buf_obs = { k: np.zeros((self.num_envs,) + tuple(shapes[k]), dtype=dtypes[k]) for k in self.keys }
-        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool)
+        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool_)
         self.buf_rews  = np.zeros((self.num_envs,), dtype=np.float32)
         self.buf_infos = [{} for _ in range(self.num_envs)]
         self.actions = None
diff --git a/rlf/baselines/vec_env/shmem_vec_env.py b/rlf/baselines/vec_env/shmem_vec_env.py
index 7a4d78d..4d9fa7c 100644
--- a/rlf/baselines/vec_env/shmem_vec_env.py
+++ b/rlf/baselines/vec_env/shmem_vec_env.py
@@ -14,7 +14,7 @@ _NP_TO_CT = {np.float32: ctypes.c_float,
              np.int32: ctypes.c_int32,
              np.int8: ctypes.c_int8,
              np.uint8: ctypes.c_char,
-             np.bool: ctypes.c_bool}
+             np.bool_: ctypes.c_bool}
 
 
 class ShmemVecEnv(VecEnv):
diff --git a/rlf/main.py b/rlf/main.py
index dd7cd4f..dc304ee 100644
--- a/rlf/main.py
+++ b/rlf/main.py
@@ -95,6 +95,7 @@ def run_policy(run_settings):
     args.trajectory_len = None
     test_args.trajectory_len = None
 
+    print(args.num_processes)
     envs = make_vec_envs(args.env_name, args.seed, args.num_processes,
                          args.gamma, args.log_dir, args.device,
                          False, args.env_trans_fn, args)
diff --git a/rlf/rl/envs.py b/rlf/rl/envs.py
index b41b6b9..e59734f 100755
--- a/rlf/rl/envs.py
+++ b/rlf/rl/envs.py
@@ -264,8 +264,8 @@ class VecPyTorchFrameStack(VecEnvWrapper):
     def step_wait(self):
         obs, rews, news, infos = self.venv.step_wait()
 
-        self.stacked_obs[:, :-self.shape_dim0] = \
-            self.stacked_obs[:, self.shape_dim0:]
+        a = self.stacked_obs.clone()
+        self.stacked_obs[:, :-self.shape_dim0] = a[:, self.shape_dim0:]
         for (i, new) in enumerate(news):
             if new:
                 self.stacked_obs[i] = 0
ed09906ce33a6af77bef2e641a45f81306d2f1d4
diff --git a/arguments.py b/arguments.py
index dfc38fb..ec94316 100644
--- a/arguments.py
+++ b/arguments.py
@@ -14,7 +14,8 @@ def grid_args(args):
     set_if_none(args, 'exp_type', 'rnd')
 
     set_if_none(args, 'onehot_state', True)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'sample_clusters', False)
     set_if_none(args, 'action_set_size', 50)
     set_if_none(args, 'test_action_set_size', 50)
@@ -49,7 +50,8 @@ def grid_play_args(args):
         args.n_trajectories = 672
 
     set_if_none(args, 'emb_epochs', 10000)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 16)
     set_if_none(args, 'z_dim', 16)
     set_if_none(args, 'onehot_state', True)
@@ -66,7 +68,8 @@ def grid_play_args(args):
 
 
 def create_args(args):
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
 
     set_if_none(args, 'exp_type', 'NewMain')
     set_if_none(args, 'sample_clusters', False)
@@ -124,15 +127,18 @@ def create_play_args(args):
         args.hidden_dim_option = 128
         args.prefix = 'VideoCreate'
 
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
     args.action_random_sample = False
 
 def stack_args(args):
     set_if_none(args, 'exp_type', 'rnd')
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'action_set_size', 20)
     set_if_none(args, 'test_action_set_size', 20)
     set_if_none(args, 'separate_skip', True)
@@ -172,7 +178,8 @@ def stack_play_args(args):
     set_if_none(args, 'exp_type', 'rnd')
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'emb_epochs', 5000)
 
     if args.train_embeddings and args.n_trajectories == 1024:
@@ -196,8 +203,10 @@ def reco_args(args):
         set_if_none(args, 'action_set_size', 25)
     else:
         set_if_none(args, 'action_set_size', 500)
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'num_eval', 20)
     set_if_none(args, 'entropy_coef', 1e-2)
     set_if_none(args, 'test_action_set_size', 50)
diff --git a/envs/create_game/base_env.py b/envs/create_game/base_env.py
index 35ae827..987066c 100644
--- a/envs/create_game/base_env.py
+++ b/envs/create_game/base_env.py
@@ -123,8 +123,9 @@ class BaseEnv(gym.Env):
         Reset the environment
         """
         self._check_setup()
-        self.space.remove([*self.space.bodies, *self.space.shapes,
-                           *self.space.constraints])
+        # self.space.remove([*self.space.bodies, *self.space.shapes,
+        #                   *self.space.constraints])
+        self.space.remove(*self.space.bodies, *self.space.shapes, *self.space.constraints)
 
         self.ball_traces = []
         self.line_traces = []
diff --git a/envs/create_game/create_game.py b/envs/create_game/create_game.py
index ee5f677..968b4cd 100644
--- a/envs/create_game/create_game.py
+++ b/envs/create_game/create_game.py
@@ -241,7 +241,7 @@ class CreateGame(BaseEnv):
 
     def motion_stopped(self):
         all_objs = self.get_all_objs()
-        vel = np.array([np.sqrt(sum(x.shape.body.velocity ** 2))
+        vel = np.array([np.sqrt((x.shape.body.velocity.x **2 + x.shape.body.velocity.y ** 2))
                         for x in all_objs])
         if (vel < self.settings.min_velocity).all():
             self.zero_vel_steps += 1
diff --git a/envs/create_game/tools/ball.py b/envs/create_game/tools/ball.py
index 052cb47..807ce36 100644
--- a/envs/create_game/tools/ball.py
+++ b/envs/create_game/tools/ball.py
@@ -52,9 +52,10 @@ class Ball(GravityObj):
         if self.color == 'basketball':
             self.img.render(screen, scale, self.flipy)
         else:
-            draw_pos = scale * self.flipy(self.body.position)
-            draw_pos[0] = int(draw_pos[0])
-            draw_pos[1] = int(draw_pos[1])
+            draw_pos1 = scale * self.flipy(self.body.position)
+            draw_pos = pymunk.Vec2d(int(draw_pos1[0]), int(draw_pos1[1]))
+            # draw_pos[0] = int(draw_pos1[0])
+            # draw_pos[1] = int(draw_pos1[1])
 
             if self.is_trace:
                 draw_radius = max(2, int(scale * self.radius) // self.scale_radius)
diff --git a/envs/create_game/tools/basic_obj.py b/envs/create_game/tools/basic_obj.py
index 86e48c4..863fe62 100644
--- a/envs/create_game/tools/basic_obj.py
+++ b/envs/create_game/tools/basic_obj.py
@@ -36,11 +36,12 @@ class BasicObj(object):
         self.attached_shapes.append(self.shape)
 
     def remove_from_space(self, space):
-        space.remove(
-            [*self.attached_bodies,
-            *self.attached_shapes,
-            *self.attached_constraints]
-            )
+        if len(self.attached_shapes) > 0:
+                space.remove(
+                    self.attached_bodies[0],
+                    self.attached_shapes[0],
+                    self.attached_constraints[0]
+                    )
 
     def render(self, screen, scale=None, anti_alias=False):
         raise NotImplemented('not implemented')
diff --git a/envs/create_game/tools/bucket.py b/envs/create_game/tools/bucket.py
index 494768f..580b615 100644
--- a/envs/create_game/tools/bucket.py
+++ b/envs/create_game/tools/bucket.py
@@ -59,7 +59,7 @@ class Bucket(FixedPoly):
         bucket.collision_type = self.collision_type
         bucket.locations = [self.center_position, self.v_1, self.v_2, self.v_3, self.v_4]
         self.shape = bucket
-        space.add(bucket)
+        space.add(self.get_body(), bucket)
         self.attached_shapes.append(bucket)
 
         # Called when 1 (movable objects) collides with 3 (bucket)
diff --git a/envs/create_game/tools/cannon.py b/envs/create_game/tools/cannon.py
index 62c8ba9..cd68bc8 100644
--- a/envs/create_game/tools/cannon.py
+++ b/envs/create_game/tools/cannon.py
@@ -60,6 +60,7 @@ class Cannon(FixedRect):
         cannon.collision_type = self.collision_type
         cannon.properties = (self.new_pos, self.launch_dir)
         self.shape = cannon
+        space.add(self.get_body())
         space.add(cannon)
         self.attached_shapes.append(cannon)
 
@@ -93,6 +94,7 @@ class Fan(FixedRect):
         fan.collision_type = self.collision_type
         fan.properties = self.launch_dir
         self.shape = fan
+        space.add(self.get_body())
         space.add(fan)
         self.attached_shapes.append(fan)
 
diff --git a/envs/create_game/tools/funnel.py b/envs/create_game/tools/funnel.py
index 4619843..526dced 100644
--- a/envs/create_game/tools/funnel.py
+++ b/envs/create_game/tools/funnel.py
@@ -59,7 +59,7 @@ class Funnel(FixedPoly):
         funnel.collision_type = self.collision_type
         funnel.locations = [self.nozzle_position, self.v_1, self.v_2, self.v_3]
         self.shape = funnel
-        space.add(funnel)
+        space.add(self.get_body(), funnel)
         self.attached_shapes.append(funnel)
 
         h = space.add_collision_handler(1, self.collision_type)
diff --git a/envs/create_game/tools/poly.py b/envs/create_game/tools/poly.py
index e875ef5..85adee4 100644
--- a/envs/create_game/tools/poly.py
+++ b/envs/create_game/tools/poly.py
@@ -14,7 +14,7 @@ class FixedPoly(FixedObj):
         self.body = self._create_body(mass, moment)
         self.body.position = pm.Vec2d(pos[0], pos[1])
 
-        self.vertices = self.get_vertices(pm.Vec2d([0., 0.]), n_sides, angle, size)
+        self.vertices = self.get_vertices(pm.Vec2d(0., 0.), n_sides, angle, size)
 
         self.shape = pm.Poly(self.body, self.vertices)
         self.shape.friction = friction
@@ -72,7 +72,7 @@ class Star(FixedPoly):
 
         pointlist = []
         for v in self.vertices:
-            x, y = pm.Vec2d(v).rotated(self.shape.body.angle) + self.shape.body.position
+            x, y = pm.Vec2d(v[0], v[1]).rotated(self.shape.body.angle) + self.shape.body.position
             point = scale * self.flipy([x, y])
             pointlist.append([int(point[0]), int(point[1])])
 
diff --git a/main.py b/main.py
index 2619157..d0be0ad 100644
--- a/main.py
+++ b/main.py
@@ -7,14 +7,14 @@ from method.embedder.embedder import extract_dists
 from method.models.main_method import MainMethod
 from method.models.distance_method import DistanceMethod
 
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 
 from arguments import get_args
 from rlf import get_env_interface, RunSettings, run_policy
 
 import envs.recogym
-import envs.block_stack
+# import envs.block_stack
 import envs.interfaces
 import envs.create_game
 
diff --git a/method/dist_mem.py b/method/dist_mem.py
index 7da3bf1..fbd625d 100644
--- a/method/dist_mem.py
+++ b/method/dist_mem.py
@@ -261,7 +261,8 @@ class DistributionMemory(object):
     def load_distributions(self, load_file):
         path = osp.join('method/embedder/saved_distributions', load_file + '.emb')
         print('loading dists from ' + path)
-        ckpt = torch.load(path)
+        # ckpt = torch.load(path)
+        ckpt = torch.load(path, map_location=torch.device('cpu'))
 
         self.mem = ckpt['mem']
         self.mem_keys = ckpt['mem_keys']
diff --git a/method/embedder/embedder.py b/method/embedder/embedder.py
index 4d2dc0e..08e3297 100644
--- a/method/embedder/embedder.py
+++ b/method/embedder/embedder.py
@@ -23,8 +23,8 @@ import sys
 import os
 import os.path as osp
 from tqdm import tqdm
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 from rlf.rl import utils
 
 from torch.utils import data
diff --git a/requirements.txt b/requirements.txt
index 4cc4255..fcc248a 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,13 +1,14 @@
-absl-py==0.8.0
+absl-py
 argh==0.26.2
 astor==0.8.0
 backports.tempfile==1.0
 backports.weakref==1.0.post1
-cffi==1.12.3
+cffi
 chardet==3.0.4
 Click==7.0
+cloudpickle==3.0.0
 cycler==0.10.0
-Cython==0.29.13
+Cython<3
 decorator==4.4.0
 docker-pycreds==0.4.0
 future==0.17.1
@@ -18,60 +19,60 @@ glfw==1.8.3
 google-pasta==0.1.7
 gql==0.1.0
 graphql-core==2.2.1
-grpcio==1.24.0
+grpcio==1.59.3
 gym==0.10.8
-h5py==2.10.0
+h5py
 idna==2.8
-imageio==2.4.1
-joblib==0.13.2
+imageio==2.9.0
+joblib==1.3.2
 Keras-Applications==1.0.8
 Keras-Preprocessing==1.1.0
 kiwisolver==1.1.0
 libtmux==0.8.1
 lockfile==0.12.2
 Markdown==3.1.1
-matplotlib==3.1.2
+matplotlib==3.4
 moviepy==1.0.1
-mujoco-py==2.0.2.5
-numpy==1.15.2
+free-mujoco-py
+numpy==1.24.4
 nvidia-ml-py3==7.352.0
-opencv-python==4.0.0.21
-pandas==0.24.2
+opencv-python==4.9.0.80
+pandas==1.3.5
 pathtools==0.1.2
-Pillow==6.1.0
+Pillow==6.2.0
 promise==2.2.1
-protobuf==3.9.2
+protobuf==3.20.3
 psutil==5.6.3
 pycparser==2.19
-pygame==1.9.6
+pygame
 pyglet==1.4.4
-pymunk==5.4.2
+pymunk==6.6.0
 pyparsing==2.4.2
-PyQt5==5.13.2
-PyQt5-sip==12.7.0
+PyQt5==5.15.10
+PyQt5-sip==12.13.0
 python-dateutil==2.8.0
 pytz==2019.2
-PyYAML==5.1.2
+PyYAML
 requests==2.22.0
 Rx==1.6.1
-scikit-learn==0.21.3
-scipy==1.3.1
-seaborn==0.10.0
+scikit-learn
+scipy
+seaborn==0.13.2
 sentry-sdk==0.12.2
 shortuuid==0.5.0
 six==1.12.0
 sklearn==0.0
 smmap2==2.0.5
 subprocess32==3.5.4
-tensorboard==1.14.0
+tensorboard==2.13.0
 tensorboardX==1.8
-tensorflow==1.14.0
-tensorflow-estimator==1.14.0
+tensorflow==2.13.0rc0
+tensorflow-estimator
 termcolor==1.1.0
-torch==1.2.0
+torch
 tqdm==4.36.1
 urllib3==1.25.6
 wandb==0.8.3
 watchdog==0.9.0
-Werkzeug==0.16.0
+Werkzeug==1.0.1
 wrapt==1.11.2
diff --git a/rlf/baselines/vec_env/dummy_vec_env.py b/rlf/baselines/vec_env/dummy_vec_env.py
index 818bd53..4367f39 100644
--- a/rlf/baselines/vec_env/dummy_vec_env.py
+++ b/rlf/baselines/vec_env/dummy_vec_env.py
@@ -22,7 +22,7 @@ class DummyVecEnv(VecEnv):
         self.keys, shapes, dtypes = obs_space_info(obs_space)
 
         self.buf_obs = { k: np.zeros((self.num_envs,) + tuple(shapes[k]), dtype=dtypes[k]) for k in self.keys }
-        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool)
+        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool_)
         self.buf_rews  = np.zeros((self.num_envs,), dtype=np.float32)
         self.buf_infos = [{} for _ in range(self.num_envs)]
         self.actions = None
diff --git a/rlf/baselines/vec_env/shmem_vec_env.py b/rlf/baselines/vec_env/shmem_vec_env.py
index 7a4d78d..4d9fa7c 100644
--- a/rlf/baselines/vec_env/shmem_vec_env.py
+++ b/rlf/baselines/vec_env/shmem_vec_env.py
@@ -14,7 +14,7 @@ _NP_TO_CT = {np.float32: ctypes.c_float,
              np.int32: ctypes.c_int32,
              np.int8: ctypes.c_int8,
              np.uint8: ctypes.c_char,
-             np.bool: ctypes.c_bool}
+             np.bool_: ctypes.c_bool}
 
 
 class ShmemVecEnv(VecEnv):
diff --git a/rlf/main.py b/rlf/main.py
index dd7cd4f..dc304ee 100644
--- a/rlf/main.py
+++ b/rlf/main.py
@@ -95,6 +95,7 @@ def run_policy(run_settings):
     args.trajectory_len = None
     test_args.trajectory_len = None
 
+    print(args.num_processes)
     envs = make_vec_envs(args.env_name, args.seed, args.num_processes,
                          args.gamma, args.log_dir, args.device,
                          False, args.env_trans_fn, args)
diff --git a/rlf/rl/envs.py b/rlf/rl/envs.py
index b41b6b9..e59734f 100755
--- a/rlf/rl/envs.py
+++ b/rlf/rl/envs.py
@@ -264,8 +264,8 @@ class VecPyTorchFrameStack(VecEnvWrapper):
     def step_wait(self):
         obs, rews, news, infos = self.venv.step_wait()
 
-        self.stacked_obs[:, :-self.shape_dim0] = \
-            self.stacked_obs[:, self.shape_dim0:]
+        a = self.stacked_obs.clone()
+        self.stacked_obs[:, :-self.shape_dim0] = a[:, self.shape_dim0:]
         for (i, new) in enumerate(news):
             if new:
                 self.stacked_obs[i] = 0
ed09906ce33a6af77bef2e641a45f81306d2f1d4
diff --git a/arguments.py b/arguments.py
index dfc38fb..ec94316 100644
--- a/arguments.py
+++ b/arguments.py
@@ -14,7 +14,8 @@ def grid_args(args):
     set_if_none(args, 'exp_type', 'rnd')
 
     set_if_none(args, 'onehot_state', True)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'sample_clusters', False)
     set_if_none(args, 'action_set_size', 50)
     set_if_none(args, 'test_action_set_size', 50)
@@ -49,7 +50,8 @@ def grid_play_args(args):
         args.n_trajectories = 672
 
     set_if_none(args, 'emb_epochs', 10000)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 16)
     set_if_none(args, 'z_dim', 16)
     set_if_none(args, 'onehot_state', True)
@@ -66,7 +68,8 @@ def grid_play_args(args):
 
 
 def create_args(args):
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
 
     set_if_none(args, 'exp_type', 'NewMain')
     set_if_none(args, 'sample_clusters', False)
@@ -124,15 +127,18 @@ def create_play_args(args):
         args.hidden_dim_option = 128
         args.prefix = 'VideoCreate'
 
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
     args.action_random_sample = False
 
 def stack_args(args):
     set_if_none(args, 'exp_type', 'rnd')
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'action_set_size', 20)
     set_if_none(args, 'test_action_set_size', 20)
     set_if_none(args, 'separate_skip', True)
@@ -172,7 +178,8 @@ def stack_play_args(args):
     set_if_none(args, 'exp_type', 'rnd')
     set_if_none(args, 'o_dim', 128)
     set_if_none(args, 'z_dim', 128)
-    set_if_none(args, 'num_processes', 32)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
     set_if_none(args, 'emb_epochs', 5000)
 
     if args.train_embeddings and args.n_trajectories == 1024:
@@ -196,8 +203,10 @@ def reco_args(args):
         set_if_none(args, 'action_set_size', 25)
     else:
         set_if_none(args, 'action_set_size', 500)
-    set_if_none(args, 'num_processes', 32)
-    set_if_none(args, 'eval_num_processes', 8)
+    # set_if_none(args, 'num_processes', 32)
+    set_if_none(args, 'num_processes', 1)
+    # set_if_none(args, 'eval_num_processes', 8)
+    set_if_none(args, 'eval_num_processes', 1)
     set_if_none(args, 'num_eval', 20)
     set_if_none(args, 'entropy_coef', 1e-2)
     set_if_none(args, 'test_action_set_size', 50)
diff --git a/envs/create_game/base_env.py b/envs/create_game/base_env.py
index 35ae827..987066c 100644
--- a/envs/create_game/base_env.py
+++ b/envs/create_game/base_env.py
@@ -123,8 +123,9 @@ class BaseEnv(gym.Env):
         Reset the environment
         """
         self._check_setup()
-        self.space.remove([*self.space.bodies, *self.space.shapes,
-                           *self.space.constraints])
+        # self.space.remove([*self.space.bodies, *self.space.shapes,
+        #                   *self.space.constraints])
+        self.space.remove(*self.space.bodies, *self.space.shapes, *self.space.constraints)
 
         self.ball_traces = []
         self.line_traces = []
diff --git a/envs/create_game/create_game.py b/envs/create_game/create_game.py
index ee5f677..968b4cd 100644
--- a/envs/create_game/create_game.py
+++ b/envs/create_game/create_game.py
@@ -241,7 +241,7 @@ class CreateGame(BaseEnv):
 
     def motion_stopped(self):
         all_objs = self.get_all_objs()
-        vel = np.array([np.sqrt(sum(x.shape.body.velocity ** 2))
+        vel = np.array([np.sqrt((x.shape.body.velocity.x **2 + x.shape.body.velocity.y ** 2))
                         for x in all_objs])
         if (vel < self.settings.min_velocity).all():
             self.zero_vel_steps += 1
diff --git a/envs/create_game/tools/ball.py b/envs/create_game/tools/ball.py
index 052cb47..807ce36 100644
--- a/envs/create_game/tools/ball.py
+++ b/envs/create_game/tools/ball.py
@@ -52,9 +52,10 @@ class Ball(GravityObj):
         if self.color == 'basketball':
             self.img.render(screen, scale, self.flipy)
         else:
-            draw_pos = scale * self.flipy(self.body.position)
-            draw_pos[0] = int(draw_pos[0])
-            draw_pos[1] = int(draw_pos[1])
+            draw_pos1 = scale * self.flipy(self.body.position)
+            draw_pos = pymunk.Vec2d(int(draw_pos1[0]), int(draw_pos1[1]))
+            # draw_pos[0] = int(draw_pos1[0])
+            # draw_pos[1] = int(draw_pos1[1])
 
             if self.is_trace:
                 draw_radius = max(2, int(scale * self.radius) // self.scale_radius)
diff --git a/envs/create_game/tools/basic_obj.py b/envs/create_game/tools/basic_obj.py
index 86e48c4..c1b293f 100644
--- a/envs/create_game/tools/basic_obj.py
+++ b/envs/create_game/tools/basic_obj.py
@@ -36,11 +36,12 @@ class BasicObj(object):
         self.attached_shapes.append(self.shape)
 
     def remove_from_space(self, space):
-        space.remove(
-            [*self.attached_bodies,
-            *self.attached_shapes,
-            *self.attached_constraints]
-            )
+        if len(self.attached_shapes) > 0:
+                space.remove(
+                    *self.attached_bodies,
+                    *self.attached_shapes,
+                    *self.attached_constraints
+                    )
 
     def render(self, screen, scale=None, anti_alias=False):
         raise NotImplemented('not implemented')
diff --git a/envs/create_game/tools/bucket.py b/envs/create_game/tools/bucket.py
index 494768f..580b615 100644
--- a/envs/create_game/tools/bucket.py
+++ b/envs/create_game/tools/bucket.py
@@ -59,7 +59,7 @@ class Bucket(FixedPoly):
         bucket.collision_type = self.collision_type
         bucket.locations = [self.center_position, self.v_1, self.v_2, self.v_3, self.v_4]
         self.shape = bucket
-        space.add(bucket)
+        space.add(self.get_body(), bucket)
         self.attached_shapes.append(bucket)
 
         # Called when 1 (movable objects) collides with 3 (bucket)
diff --git a/envs/create_game/tools/cannon.py b/envs/create_game/tools/cannon.py
index 62c8ba9..cd68bc8 100644
--- a/envs/create_game/tools/cannon.py
+++ b/envs/create_game/tools/cannon.py
@@ -60,6 +60,7 @@ class Cannon(FixedRect):
         cannon.collision_type = self.collision_type
         cannon.properties = (self.new_pos, self.launch_dir)
         self.shape = cannon
+        space.add(self.get_body())
         space.add(cannon)
         self.attached_shapes.append(cannon)
 
@@ -93,6 +94,7 @@ class Fan(FixedRect):
         fan.collision_type = self.collision_type
         fan.properties = self.launch_dir
         self.shape = fan
+        space.add(self.get_body())
         space.add(fan)
         self.attached_shapes.append(fan)
 
diff --git a/envs/create_game/tools/funnel.py b/envs/create_game/tools/funnel.py
index 4619843..526dced 100644
--- a/envs/create_game/tools/funnel.py
+++ b/envs/create_game/tools/funnel.py
@@ -59,7 +59,7 @@ class Funnel(FixedPoly):
         funnel.collision_type = self.collision_type
         funnel.locations = [self.nozzle_position, self.v_1, self.v_2, self.v_3]
         self.shape = funnel
-        space.add(funnel)
+        space.add(self.get_body(), funnel)
         self.attached_shapes.append(funnel)
 
         h = space.add_collision_handler(1, self.collision_type)
diff --git a/envs/create_game/tools/poly.py b/envs/create_game/tools/poly.py
index e875ef5..85adee4 100644
--- a/envs/create_game/tools/poly.py
+++ b/envs/create_game/tools/poly.py
@@ -14,7 +14,7 @@ class FixedPoly(FixedObj):
         self.body = self._create_body(mass, moment)
         self.body.position = pm.Vec2d(pos[0], pos[1])
 
-        self.vertices = self.get_vertices(pm.Vec2d([0., 0.]), n_sides, angle, size)
+        self.vertices = self.get_vertices(pm.Vec2d(0., 0.), n_sides, angle, size)
 
         self.shape = pm.Poly(self.body, self.vertices)
         self.shape.friction = friction
@@ -72,7 +72,7 @@ class Star(FixedPoly):
 
         pointlist = []
         for v in self.vertices:
-            x, y = pm.Vec2d(v).rotated(self.shape.body.angle) + self.shape.body.position
+            x, y = pm.Vec2d(v[0], v[1]).rotated(self.shape.body.angle) + self.shape.body.position
             point = scale * self.flipy([x, y])
             pointlist.append([int(point[0]), int(point[1])])
 
diff --git a/main.py b/main.py
index 2619157..d0be0ad 100644
--- a/main.py
+++ b/main.py
@@ -7,14 +7,14 @@ from method.embedder.embedder import extract_dists
 from method.models.main_method import MainMethod
 from method.models.distance_method import DistanceMethod
 
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 
 from arguments import get_args
 from rlf import get_env_interface, RunSettings, run_policy
 
 import envs.recogym
-import envs.block_stack
+# import envs.block_stack
 import envs.interfaces
 import envs.create_game
 
diff --git a/method/dist_mem.py b/method/dist_mem.py
index 7da3bf1..fbd625d 100644
--- a/method/dist_mem.py
+++ b/method/dist_mem.py
@@ -261,7 +261,8 @@ class DistributionMemory(object):
     def load_distributions(self, load_file):
         path = osp.join('method/embedder/saved_distributions', load_file + '.emb')
         print('loading dists from ' + path)
-        ckpt = torch.load(path)
+        # ckpt = torch.load(path)
+        ckpt = torch.load(path, map_location=torch.device('cpu'))
 
         self.mem = ckpt['mem']
         self.mem_keys = ckpt['mem_keys']
diff --git a/method/embedder/embedder.py b/method/embedder/embedder.py
index 4d2dc0e..08e3297 100644
--- a/method/embedder/embedder.py
+++ b/method/embedder/embedder.py
@@ -23,8 +23,8 @@ import sys
 import os
 import os.path as osp
 from tqdm import tqdm
-import pymunkoptions
-pymunkoptions.options["debug"] = False
+# import pymunkoptions
+# pymunkoptions.options["debug"] = False
 from rlf.rl import utils
 
 from torch.utils import data
diff --git a/requirements.txt b/requirements.txt
index 4cc4255..fcc248a 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,13 +1,14 @@
-absl-py==0.8.0
+absl-py
 argh==0.26.2
 astor==0.8.0
 backports.tempfile==1.0
 backports.weakref==1.0.post1
-cffi==1.12.3
+cffi
 chardet==3.0.4
 Click==7.0
+cloudpickle==3.0.0
 cycler==0.10.0
-Cython==0.29.13
+Cython<3
 decorator==4.4.0
 docker-pycreds==0.4.0
 future==0.17.1
@@ -18,60 +19,60 @@ glfw==1.8.3
 google-pasta==0.1.7
 gql==0.1.0
 graphql-core==2.2.1
-grpcio==1.24.0
+grpcio==1.59.3
 gym==0.10.8
-h5py==2.10.0
+h5py
 idna==2.8
-imageio==2.4.1
-joblib==0.13.2
+imageio==2.9.0
+joblib==1.3.2
 Keras-Applications==1.0.8
 Keras-Preprocessing==1.1.0
 kiwisolver==1.1.0
 libtmux==0.8.1
 lockfile==0.12.2
 Markdown==3.1.1
-matplotlib==3.1.2
+matplotlib==3.4
 moviepy==1.0.1
-mujoco-py==2.0.2.5
-numpy==1.15.2
+free-mujoco-py
+numpy==1.24.4
 nvidia-ml-py3==7.352.0
-opencv-python==4.0.0.21
-pandas==0.24.2
+opencv-python==4.9.0.80
+pandas==1.3.5
 pathtools==0.1.2
-Pillow==6.1.0
+Pillow==6.2.0
 promise==2.2.1
-protobuf==3.9.2
+protobuf==3.20.3
 psutil==5.6.3
 pycparser==2.19
-pygame==1.9.6
+pygame
 pyglet==1.4.4
-pymunk==5.4.2
+pymunk==6.6.0
 pyparsing==2.4.2
-PyQt5==5.13.2
-PyQt5-sip==12.7.0
+PyQt5==5.15.10
+PyQt5-sip==12.13.0
 python-dateutil==2.8.0
 pytz==2019.2
-PyYAML==5.1.2
+PyYAML
 requests==2.22.0
 Rx==1.6.1
-scikit-learn==0.21.3
-scipy==1.3.1
-seaborn==0.10.0
+scikit-learn
+scipy
+seaborn==0.13.2
 sentry-sdk==0.12.2
 shortuuid==0.5.0
 six==1.12.0
 sklearn==0.0
 smmap2==2.0.5
 subprocess32==3.5.4
-tensorboard==1.14.0
+tensorboard==2.13.0
 tensorboardX==1.8
-tensorflow==1.14.0
-tensorflow-estimator==1.14.0
+tensorflow==2.13.0rc0
+tensorflow-estimator
 termcolor==1.1.0
-torch==1.2.0
+torch
 tqdm==4.36.1
 urllib3==1.25.6
 wandb==0.8.3
 watchdog==0.9.0
-Werkzeug==0.16.0
+Werkzeug==1.0.1
 wrapt==1.11.2
diff --git a/rlf/baselines/vec_env/dummy_vec_env.py b/rlf/baselines/vec_env/dummy_vec_env.py
index 818bd53..4367f39 100644
--- a/rlf/baselines/vec_env/dummy_vec_env.py
+++ b/rlf/baselines/vec_env/dummy_vec_env.py
@@ -22,7 +22,7 @@ class DummyVecEnv(VecEnv):
         self.keys, shapes, dtypes = obs_space_info(obs_space)
 
         self.buf_obs = { k: np.zeros((self.num_envs,) + tuple(shapes[k]), dtype=dtypes[k]) for k in self.keys }
-        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool)
+        self.buf_dones = np.zeros((self.num_envs,), dtype=np.bool_)
         self.buf_rews  = np.zeros((self.num_envs,), dtype=np.float32)
         self.buf_infos = [{} for _ in range(self.num_envs)]
         self.actions = None
diff --git a/rlf/baselines/vec_env/shmem_vec_env.py b/rlf/baselines/vec_env/shmem_vec_env.py
index 7a4d78d..4d9fa7c 100644
--- a/rlf/baselines/vec_env/shmem_vec_env.py
+++ b/rlf/baselines/vec_env/shmem_vec_env.py
@@ -14,7 +14,7 @@ _NP_TO_CT = {np.float32: ctypes.c_float,
              np.int32: ctypes.c_int32,
              np.int8: ctypes.c_int8,
              np.uint8: ctypes.c_char,
-             np.bool: ctypes.c_bool}
+             np.bool_: ctypes.c_bool}
 
 
 class ShmemVecEnv(VecEnv):
diff --git a/rlf/main.py b/rlf/main.py
index dd7cd4f..dc304ee 100644
--- a/rlf/main.py
+++ b/rlf/main.py
@@ -95,6 +95,7 @@ def run_policy(run_settings):
     args.trajectory_len = None
     test_args.trajectory_len = None
 
+    print(args.num_processes)
     envs = make_vec_envs(args.env_name, args.seed, args.num_processes,
                          args.gamma, args.log_dir, args.device,
                          False, args.env_trans_fn, args)
diff --git a/rlf/rl/envs.py b/rlf/rl/envs.py
index b41b6b9..e59734f 100755
--- a/rlf/rl/envs.py
+++ b/rlf/rl/envs.py
@@ -264,8 +264,8 @@ class VecPyTorchFrameStack(VecEnvWrapper):
     def step_wait(self):
         obs, rews, news, infos = self.venv.step_wait()
 
-        self.stacked_obs[:, :-self.shape_dim0] = \
-            self.stacked_obs[:, self.shape_dim0:]
+        a = self.stacked_obs.clone()
+        self.stacked_obs[:, :-self.shape_dim0] = a[:, self.shape_dim0:]
         for (i, new) in enumerate(news):
             if new:
                 self.stacked_obs[i] = 0
347a0e6efbab5459e5d4db3b55c040154efa2886
diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
index 93c497a..479a608 100644
--- a/new-actions-rl/arguments.py
+++ b/new-actions-rl/arguments.py
@@ -616,6 +616,7 @@ def get_args(arg_str=None):
 
     #### Multitask specific
     parser.add_argument('--multitask', action='store_true', default=False)
+    parser.add_argument('--env-names', nargs='+', default=[])
 
     #### Resume specific
     parser.add_argument('--best-run', type=int, default=None)
diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
index 00a83d9..37f6dc9 100644
--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
@@ -1 +1 @@
-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
\ No newline at end of file
+python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
\ No newline at end of file
diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
index b531690..c4ff3d3 100644
--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
          for (i, new) in enumerate(news):
              if new:
                  self.stacked_obs[i] = 0
+347a0e6efbab5459e5d4db3b55c040154efa2886
diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
index d008c38..9b566fb 100755
--- a/new-actions-rl/rlf/rl/envs.py
+++ b/new-actions-rl/rlf/rl/envs.py
@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
 
     return _thunk
 
-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
 
 def make_vec_envs(env_name,
                   seed,
@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
                   trans_fn,
                   args,
                   num_frame_stack=None,
-                  set_eval=False,
-                  env_names_input=None):
+                  set_eval=False):
 
     if args.multitask and not set_eval:
         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
                   set_eval=False,
                   env_names_input=None):
 
+    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
     envs = [
         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
-        for env_name in env_names
+        for env_name in candidate_env_names
     ]
 
     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
index 0d25c28..e45648c 100755
--- a/new-actions-rl/rlf/rl/rl.py
+++ b/new-actions-rl/rlf/rl/rl.py
@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
 def train(envs_bulk, rollouts, policy, updater, log, start_update,
           end_update, lr_updates, args, test_args, checkpointer):
 
+    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
     if args.resume and start_update > 0:
         start_update += 1
 
@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
         log.start_interval_log()
 
         if args.multitask:
-            idx = np.random.randint(10000) % len(env_names)
+            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
             envs = envs_bulk[idx]
-            args.env_name = env_names[idx]
-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+            args.env_name = actual_env_names[idx]
+            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
         else:
             envs = envs_bulk
 
@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
                 train_eval_envs = []
                 for i in range(len(envs_bulk)):
                     eval_envs = envs_bulk[i]
-                    args.env_name = env_names[i]
-                    print(f"evaluating for env {env_names[i]}")
+                    args.env_name = actual_env_names[i]
+                    print(f"evaluating for env {actual_env_names[i]}")
                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
                                test_args, log, j, total_num_steps, test_eval_envs = None,
                                train_eval_envs = None)
@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
             else:
                 for i in range(len(envs_bulk)):
                     eval_envs = envs_bulk[i]
-                    args.env_name = env_names[i]
-                    print(f"evaluating for env {env_names[i]}")
+                    args.env_name = actual_env_names[i]
+                    print(f"evaluating for env {actual_env_names[i]}")
                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
                                test_args, log, j, total_num_steps, test_eval_envs[i],
                                train_eval_envs[i])
347a0e6efbab5459e5d4db3b55c040154efa2886
diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
index 93c497a..479a608 100644
--- a/new-actions-rl/arguments.py
+++ b/new-actions-rl/arguments.py
@@ -616,6 +616,7 @@ def get_args(arg_str=None):
 
     #### Multitask specific
     parser.add_argument('--multitask', action='store_true', default=False)
+    parser.add_argument('--env-names', nargs='+', default=[])
 
     #### Resume specific
     parser.add_argument('--best-run', type=int, default=None)
diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
index a55af28..9e018c4 100644
--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
@@ -1,11 +1,11 @@
 Date and Time:
-10/03/2024
-16:36:27
+15/04/2024
+22:26:28
 
 action_base_hidden_size: 128
 action_base_output_size: 64
 action_proj_dim: 1
-action_random_sample: True
+action_random_sample: False
 action_seg_loc: ./data/action_segs
 action_set_size: 50
 algo: ppo
@@ -14,6 +14,7 @@ analysis_angle: None
 analysis_emb: None
 anti_alias_blur: 0.0
 backup: None
+best_run: None
 both_train_test: False
 bound_effect: False
 cat_kl_loss: None
@@ -38,7 +39,7 @@ create_play_len: 7
 create_play_run_steps: 3
 create_sec_goal_reward: 2.0
 create_target_reward: 1.0
-cuda: False
+cuda: True
 cuda_deterministic: False
 debug_render: False
 decay_clipping: False
@@ -73,9 +74,10 @@ emb_viz_interval: 5
 encoder_dim: 64
 entropy_coef: 0.005
 env_name: CreateLevelPush-v0
+env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
 eps: 1e-05
 eval_interval: 50
-eval_num_processes: None
+eval_num_processes: 1
 eval_only: False
 eval_split: False
 eval_split_ratio: 0.5
@@ -126,6 +128,7 @@ max_grad_norm: 0.5
 max_grid_steps: 50
 max_std_width: 3.0
 mega_res_interval: 4
+multitask: True
 n_clusters: 10
 n_distributions: 1
 n_hidden_option: 3
@@ -138,7 +141,7 @@ no_diag: True
 no_frame_stack: False
 no_initial_state: False
 no_overlap_env: False
-no_test_eval: False
+no_test_eval: True
 no_var: False
 normalize_embs: False
 not_upto: True
@@ -146,7 +149,7 @@ num_distributions: 400
 num_env_steps: 60000000
 num_eval: 20
 num_mini_batch: 4
-num_processes: 1
+num_processes: 4
 num_render: None
 num_steps: 384
 num_z: 1
diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
index 00a83d9..cda9700 100644
--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
@@ -1 +1 @@
-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
\ No newline at end of file
+python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
\ No newline at end of file
diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
index b531690..ebf34e4 100644
--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
          for (i, new) in enumerate(news):
              if new:
                  self.stacked_obs[i] = 0
+347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+index 93c497a..479a608 100644
+--- a/new-actions-rl/arguments.py
++++ b/new-actions-rl/arguments.py
+@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+ 
+     #### Multitask specific
+     parser.add_argument('--multitask', action='store_true', default=False)
++    parser.add_argument('--env-names', nargs='+', default=[])
+ 
+     #### Resume specific
+     parser.add_argument('--best-run', type=int, default=None)
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+index 00a83d9..37f6dc9 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+@@ -1 +1 @@
+-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+\ No newline at end of file
++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+\ No newline at end of file
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+index b531690..c4ff3d3 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+          for (i, new) in enumerate(news):
+              if new:
+                  self.stacked_obs[i] = 0
++347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+index d008c38..9b566fb 100755
+--- a/new-actions-rl/rlf/rl/envs.py
++++ b/new-actions-rl/rlf/rl/envs.py
+@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+ 
+     return _thunk
+ 
+-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+ 
+ def make_vec_envs(env_name,
+                   seed,
+@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+                   trans_fn,
+                   args,
+                   num_frame_stack=None,
+-                  set_eval=False,
+-                  env_names_input=None):
++                  set_eval=False):
+ 
+     if args.multitask and not set_eval:
+         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+                   set_eval=False,
+                   env_names_input=None):
+ 
++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     envs = [
+         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+-        for env_name in env_names
++        for env_name in candidate_env_names
+     ]
+ 
+     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+index 0d25c28..e45648c 100755
+--- a/new-actions-rl/rlf/rl/rl.py
++++ b/new-actions-rl/rlf/rl/rl.py
+@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+           end_update, lr_updates, args, test_args, checkpointer):
+ 
++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     if args.resume and start_update > 0:
+         start_update += 1
+ 
+@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+         log.start_interval_log()
+ 
+         if args.multitask:
+-            idx = np.random.randint(10000) % len(env_names)
++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+             envs = envs_bulk[idx]
+-            args.env_name = env_names[idx]
+-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++            args.env_name = actual_env_names[idx]
++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+         else:
+             envs = envs_bulk
+ 
+@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+                 train_eval_envs = []
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs = None,
+                                train_eval_envs = None)
+@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+             else:
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs[i],
+                                train_eval_envs[i])
+347a0e6efbab5459e5d4db3b55c040154efa2886
diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
index 953d419..edec780 100644
--- a/new-actions-rl/rlf/main.py
+++ b/new-actions-rl/rlf/main.py
@@ -39,7 +39,7 @@ def get_num_updates(args):
     return num_updates, lr_updates
 
 
-def get_fine_tune_run(load_name, env_name):
+def get_fine_tune_run(load_name, env_name, args):
     from rlf.exp_mgr.eval import get_max_run
     import wandb
     import subprocess
diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
index d008c38..9b566fb 100755
--- a/new-actions-rl/rlf/rl/envs.py
+++ b/new-actions-rl/rlf/rl/envs.py
@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
 
     return _thunk
 
-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
 
 def make_vec_envs(env_name,
                   seed,
@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
                   trans_fn,
                   args,
                   num_frame_stack=None,
-                  set_eval=False,
-                  env_names_input=None):
+                  set_eval=False):
 
     if args.multitask and not set_eval:
         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
                   set_eval=False,
                   env_names_input=None):
 
+    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
     envs = [
         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
-        for env_name in env_names
+        for env_name in candidate_env_names
     ]
 
     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
index 0d25c28..e45648c 100755
--- a/new-actions-rl/rlf/rl/rl.py
+++ b/new-actions-rl/rlf/rl/rl.py
@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
 def train(envs_bulk, rollouts, policy, updater, log, start_update,
           end_update, lr_updates, args, test_args, checkpointer):
 
+    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
     if args.resume and start_update > 0:
         start_update += 1
 
@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
         log.start_interval_log()
 
         if args.multitask:
-            idx = np.random.randint(10000) % len(env_names)
+            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
             envs = envs_bulk[idx]
-            args.env_name = env_names[idx]
-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+            args.env_name = actual_env_names[idx]
+            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
         else:
             envs = envs_bulk
 
@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
                 train_eval_envs = []
                 for i in range(len(envs_bulk)):
                     eval_envs = envs_bulk[i]
-                    args.env_name = env_names[i]
-                    print(f"evaluating for env {env_names[i]}")
+                    args.env_name = actual_env_names[i]
+                    print(f"evaluating for env {actual_env_names[i]}")
                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
                                test_args, log, j, total_num_steps, test_eval_envs = None,
                                train_eval_envs = None)
@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
             else:
                 for i in range(len(envs_bulk)):
                     eval_envs = envs_bulk[i]
-                    args.env_name = env_names[i]
-                    print(f"evaluating for env {env_names[i]}")
+                    args.env_name = actual_env_names[i]
+                    print(f"evaluating for env {actual_env_names[i]}")
                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
                                test_args, log, j, total_num_steps, test_eval_envs[i],
                                train_eval_envs[i])
347a0e6efbab5459e5d4db3b55c040154efa2886
diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
index 93c497a..479a608 100644
--- a/new-actions-rl/arguments.py
+++ b/new-actions-rl/arguments.py
@@ -616,6 +616,7 @@ def get_args(arg_str=None):
 
     #### Multitask specific
     parser.add_argument('--multitask', action='store_true', default=False)
+    parser.add_argument('--env-names', nargs='+', default=[])
 
     #### Resume specific
     parser.add_argument('--best-run', type=int, default=None)
diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
index a55af28..5c86c73 100644
--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
@@ -1,11 +1,11 @@
 Date and Time:
-10/03/2024
-16:36:27
+16/04/2024
+11:03:41
 
 action_base_hidden_size: 128
 action_base_output_size: 64
 action_proj_dim: 1
-action_random_sample: True
+action_random_sample: False
 action_seg_loc: ./data/action_segs
 action_set_size: 50
 algo: ppo
@@ -14,6 +14,7 @@ analysis_angle: None
 analysis_emb: None
 anti_alias_blur: 0.0
 backup: None
+best_run: 5799
 both_train_test: False
 bound_effect: False
 cat_kl_loss: None
@@ -38,7 +39,7 @@ create_play_len: 7
 create_play_run_steps: 3
 create_sec_goal_reward: 2.0
 create_target_reward: 1.0
-cuda: False
+cuda: True
 cuda_deterministic: False
 debug_render: False
 decay_clipping: False
@@ -73,9 +74,10 @@ emb_viz_interval: 5
 encoder_dim: 64
 entropy_coef: 0.005
 env_name: CreateLevelPush-v0
+env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
 eps: 1e-05
 eval_interval: 50
-eval_num_processes: None
+eval_num_processes: 1
 eval_only: False
 eval_split: False
 eval_split_ratio: 0.5
@@ -109,7 +111,7 @@ kl_pen: None
 large_steps: 40
 latent_dim: 1
 load_all_data: False
-load_best_name: None
+load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
 load_dataset: True
 load_emb_logvar: True
 load_emb_model_file: None
@@ -126,6 +128,7 @@ max_grad_norm: 0.5
 max_grid_steps: 50
 max_std_width: 3.0
 mega_res_interval: 4
+multitask: True
 n_clusters: 10
 n_distributions: 1
 n_hidden_option: 3
@@ -138,7 +141,7 @@ no_diag: True
 no_frame_stack: False
 no_initial_state: False
 no_overlap_env: False
-no_test_eval: False
+no_test_eval: True
 no_var: False
 normalize_embs: False
 not_upto: True
@@ -146,7 +149,7 @@ num_distributions: 400
 num_env_steps: 60000000
 num_eval: 20
 num_mini_batch: 4
-num_processes: 1
+num_processes: 4
 num_render: None
 num_steps: 384
 num_z: 1
@@ -193,7 +196,7 @@ render_result_figures: False
 render_text: False
 reparam: True
 result_dir: ./data/results
-resume: False
+resume: True
 resume_emb_training: False
 reward_entropy_coef: 0.0
 rl_use_radam: False
diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
index 00a83d9..e3712f3 100644
--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
@@ -1 +1 @@
-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
\ No newline at end of file
+python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
\ No newline at end of file
diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
index b531690..fde463e 100644
--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
@@ -10764,3 +10764,433 @@ index b41b6b9..e59734f 100755
          for (i, new) in enumerate(news):
              if new:
                  self.stacked_obs[i] = 0
+347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+index 93c497a..479a608 100644
+--- a/new-actions-rl/arguments.py
++++ b/new-actions-rl/arguments.py
+@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+ 
+     #### Multitask specific
+     parser.add_argument('--multitask', action='store_true', default=False)
++    parser.add_argument('--env-names', nargs='+', default=[])
+ 
+     #### Resume specific
+     parser.add_argument('--best-run', type=int, default=None)
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+index 00a83d9..37f6dc9 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+@@ -1 +1 @@
+-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+\ No newline at end of file
++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+\ No newline at end of file
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+index b531690..c4ff3d3 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+          for (i, new) in enumerate(news):
+              if new:
+                  self.stacked_obs[i] = 0
++347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+index d008c38..9b566fb 100755
+--- a/new-actions-rl/rlf/rl/envs.py
++++ b/new-actions-rl/rlf/rl/envs.py
+@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+ 
+     return _thunk
+ 
+-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+ 
+ def make_vec_envs(env_name,
+                   seed,
+@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+                   trans_fn,
+                   args,
+                   num_frame_stack=None,
+-                  set_eval=False,
+-                  env_names_input=None):
++                  set_eval=False):
+ 
+     if args.multitask and not set_eval:
+         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+                   set_eval=False,
+                   env_names_input=None):
+ 
++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     envs = [
+         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+-        for env_name in env_names
++        for env_name in candidate_env_names
+     ]
+ 
+     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+index 0d25c28..e45648c 100755
+--- a/new-actions-rl/rlf/rl/rl.py
++++ b/new-actions-rl/rlf/rl/rl.py
+@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+           end_update, lr_updates, args, test_args, checkpointer):
+ 
++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     if args.resume and start_update > 0:
+         start_update += 1
+ 
+@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+         log.start_interval_log()
+ 
+         if args.multitask:
+-            idx = np.random.randint(10000) % len(env_names)
++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+             envs = envs_bulk[idx]
+-            args.env_name = env_names[idx]
+-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++            args.env_name = actual_env_names[idx]
++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+         else:
+             envs = envs_bulk
+ 
+@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+                 train_eval_envs = []
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs = None,
+                                train_eval_envs = None)
+@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+             else:
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs[i],
+                                train_eval_envs[i])
+347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+index 93c497a..479a608 100644
+--- a/new-actions-rl/arguments.py
++++ b/new-actions-rl/arguments.py
+@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+ 
+     #### Multitask specific
+     parser.add_argument('--multitask', action='store_true', default=False)
++    parser.add_argument('--env-names', nargs='+', default=[])
+ 
+     #### Resume specific
+     parser.add_argument('--best-run', type=int, default=None)
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+index a55af28..9e018c4 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+@@ -1,11 +1,11 @@
+ Date and Time:
+-10/03/2024
+-16:36:27
++15/04/2024
++22:26:28
+ 
+ action_base_hidden_size: 128
+ action_base_output_size: 64
+ action_proj_dim: 1
+-action_random_sample: True
++action_random_sample: False
+ action_seg_loc: ./data/action_segs
+ action_set_size: 50
+ algo: ppo
+@@ -14,6 +14,7 @@ analysis_angle: None
+ analysis_emb: None
+ anti_alias_blur: 0.0
+ backup: None
++best_run: None
+ both_train_test: False
+ bound_effect: False
+ cat_kl_loss: None
+@@ -38,7 +39,7 @@ create_play_len: 7
+ create_play_run_steps: 3
+ create_sec_goal_reward: 2.0
+ create_target_reward: 1.0
+-cuda: False
++cuda: True
+ cuda_deterministic: False
+ debug_render: False
+ decay_clipping: False
+@@ -73,9 +74,10 @@ emb_viz_interval: 5
+ encoder_dim: 64
+ entropy_coef: 0.005
+ env_name: CreateLevelPush-v0
++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+ eps: 1e-05
+ eval_interval: 50
+-eval_num_processes: None
++eval_num_processes: 1
+ eval_only: False
+ eval_split: False
+ eval_split_ratio: 0.5
+@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+ max_grid_steps: 50
+ max_std_width: 3.0
+ mega_res_interval: 4
++multitask: True
+ n_clusters: 10
+ n_distributions: 1
+ n_hidden_option: 3
+@@ -138,7 +141,7 @@ no_diag: True
+ no_frame_stack: False
+ no_initial_state: False
+ no_overlap_env: False
+-no_test_eval: False
++no_test_eval: True
+ no_var: False
+ normalize_embs: False
+ not_upto: True
+@@ -146,7 +149,7 @@ num_distributions: 400
+ num_env_steps: 60000000
+ num_eval: 20
+ num_mini_batch: 4
+-num_processes: 1
++num_processes: 4
+ num_render: None
+ num_steps: 384
+ num_z: 1
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+index 00a83d9..cda9700 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+@@ -1 +1 @@
+-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+\ No newline at end of file
++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+\ No newline at end of file
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+index b531690..ebf34e4 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
+          for (i, new) in enumerate(news):
+              if new:
+                  self.stacked_obs[i] = 0
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..37f6dc9 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..c4ff3d3 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+index 953d419..edec780 100644
+--- a/new-actions-rl/rlf/main.py
++++ b/new-actions-rl/rlf/main.py
+@@ -39,7 +39,7 @@ def get_num_updates(args):
+     return num_updates, lr_updates
+ 
+ 
+-def get_fine_tune_run(load_name, env_name):
++def get_fine_tune_run(load_name, env_name, args):
+     from rlf.exp_mgr.eval import get_max_run
+     import wandb
+     import subprocess
+diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+index d008c38..9b566fb 100755
+--- a/new-actions-rl/rlf/rl/envs.py
++++ b/new-actions-rl/rlf/rl/envs.py
+@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+ 
+     return _thunk
+ 
+-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+ 
+ def make_vec_envs(env_name,
+                   seed,
+@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+                   trans_fn,
+                   args,
+                   num_frame_stack=None,
+-                  set_eval=False,
+-                  env_names_input=None):
++                  set_eval=False):
+ 
+     if args.multitask and not set_eval:
+         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+                   set_eval=False,
+                   env_names_input=None):
+ 
++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     envs = [
+         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+-        for env_name in env_names
++        for env_name in candidate_env_names
+     ]
+ 
+     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+index 0d25c28..e45648c 100755
+--- a/new-actions-rl/rlf/rl/rl.py
++++ b/new-actions-rl/rlf/rl/rl.py
+@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+           end_update, lr_updates, args, test_args, checkpointer):
+ 
++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     if args.resume and start_update > 0:
+         start_update += 1
+ 
+@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+         log.start_interval_log()
+ 
+         if args.multitask:
+-            idx = np.random.randint(10000) % len(env_names)
++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+             envs = envs_bulk[idx]
+-            args.env_name = env_names[idx]
+-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++            args.env_name = actual_env_names[idx]
++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+         else:
+             envs = envs_bulk
+ 
+@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+                 train_eval_envs = []
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs = None,
+                                train_eval_envs = None)
+@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+             else:
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs[i],
+                                train_eval_envs[i])
+347a0e6efbab5459e5d4db3b55c040154efa2886
diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
index 953d419..edec780 100644
--- a/new-actions-rl/rlf/main.py
+++ b/new-actions-rl/rlf/main.py
@@ -39,7 +39,7 @@ def get_num_updates(args):
     return num_updates, lr_updates
 
 
-def get_fine_tune_run(load_name, env_name):
+def get_fine_tune_run(load_name, env_name, args):
     from rlf.exp_mgr.eval import get_max_run
     import wandb
     import subprocess
diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
index d008c38..9b566fb 100755
--- a/new-actions-rl/rlf/rl/envs.py
+++ b/new-actions-rl/rlf/rl/envs.py
@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
 
     return _thunk
 
-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
 
 def make_vec_envs(env_name,
                   seed,
@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
                   trans_fn,
                   args,
                   num_frame_stack=None,
-                  set_eval=False,
-                  env_names_input=None):
+                  set_eval=False):
 
     if args.multitask and not set_eval:
         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
                   set_eval=False,
                   env_names_input=None):
 
+    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
     envs = [
         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
-        for env_name in env_names
+        for env_name in candidate_env_names
     ]
 
     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
index 0d25c28..e45648c 100755
--- a/new-actions-rl/rlf/rl/rl.py
+++ b/new-actions-rl/rlf/rl/rl.py
@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
 def train(envs_bulk, rollouts, policy, updater, log, start_update,
           end_update, lr_updates, args, test_args, checkpointer):
 
+    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
     if args.resume and start_update > 0:
         start_update += 1
 
@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
         log.start_interval_log()
 
         if args.multitask:
-            idx = np.random.randint(10000) % len(env_names)
+            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
             envs = envs_bulk[idx]
-            args.env_name = env_names[idx]
-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+            args.env_name = actual_env_names[idx]
+            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
         else:
             envs = envs_bulk
 
@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
                 train_eval_envs = []
                 for i in range(len(envs_bulk)):
                     eval_envs = envs_bulk[i]
-                    args.env_name = env_names[i]
-                    print(f"evaluating for env {env_names[i]}")
+                    args.env_name = actual_env_names[i]
+                    print(f"evaluating for env {actual_env_names[i]}")
                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
                                test_args, log, j, total_num_steps, test_eval_envs = None,
                                train_eval_envs = None)
@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
             else:
                 for i in range(len(envs_bulk)):
                     eval_envs = envs_bulk[i]
-                    args.env_name = env_names[i]
-                    print(f"evaluating for env {env_names[i]}")
+                    args.env_name = actual_env_names[i]
+                    print(f"evaluating for env {actual_env_names[i]}")
                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
                                test_args, log, j, total_num_steps, test_eval_envs[i],
                                train_eval_envs[i])
347a0e6efbab5459e5d4db3b55c040154efa2886
diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
index 93c497a..479a608 100644
--- a/new-actions-rl/arguments.py
+++ b/new-actions-rl/arguments.py
@@ -616,6 +616,7 @@ def get_args(arg_str=None):
 
     #### Multitask specific
     parser.add_argument('--multitask', action='store_true', default=False)
+    parser.add_argument('--env-names', nargs='+', default=[])
 
     #### Resume specific
     parser.add_argument('--best-run', type=int, default=None)
diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
index a55af28..c06c75e 100644
--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
@@ -1,11 +1,11 @@
 Date and Time:
-10/03/2024
-16:36:27
+16/04/2024
+14:42:37
 
 action_base_hidden_size: 128
 action_base_output_size: 64
 action_proj_dim: 1
-action_random_sample: True
+action_random_sample: False
 action_seg_loc: ./data/action_segs
 action_set_size: 50
 algo: ppo
@@ -14,6 +14,7 @@ analysis_angle: None
 analysis_emb: None
 anti_alias_blur: 0.0
 backup: None
+best_run: 9349
 both_train_test: False
 bound_effect: False
 cat_kl_loss: None
@@ -38,7 +39,7 @@ create_play_len: 7
 create_play_run_steps: 3
 create_sec_goal_reward: 2.0
 create_target_reward: 1.0
-cuda: False
+cuda: True
 cuda_deterministic: False
 debug_render: False
 decay_clipping: False
@@ -73,9 +74,10 @@ emb_viz_interval: 5
 encoder_dim: 64
 entropy_coef: 0.005
 env_name: CreateLevelPush-v0
+env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
 eps: 1e-05
 eval_interval: 50
-eval_num_processes: None
+eval_num_processes: 1
 eval_only: False
 eval_split: False
 eval_split_ratio: 0.5
@@ -109,7 +111,7 @@ kl_pen: None
 large_steps: 40
 latent_dim: 1
 load_all_data: False
-load_best_name: None
+load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
 load_dataset: True
 load_emb_logvar: True
 load_emb_model_file: None
@@ -126,6 +128,7 @@ max_grad_norm: 0.5
 max_grid_steps: 50
 max_std_width: 3.0
 mega_res_interval: 4
+multitask: True
 n_clusters: 10
 n_distributions: 1
 n_hidden_option: 3
@@ -138,7 +141,7 @@ no_diag: True
 no_frame_stack: False
 no_initial_state: False
 no_overlap_env: False
-no_test_eval: False
+no_test_eval: True
 no_var: False
 normalize_embs: False
 not_upto: True
@@ -146,7 +149,7 @@ num_distributions: 400
 num_env_steps: 60000000
 num_eval: 20
 num_mini_batch: 4
-num_processes: 1
+num_processes: 4
 num_render: None
 num_steps: 384
 num_z: 1
@@ -193,7 +196,7 @@ render_result_figures: False
 render_text: False
 reparam: True
 result_dir: ./data/results
-resume: False
+resume: True
 resume_emb_training: False
 reward_entropy_coef: 0.0
 rl_use_radam: False
diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
index 00a83d9..ec24bd5 100644
--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
@@ -1 +1 @@
-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
\ No newline at end of file
+python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
\ No newline at end of file
diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
index b531690..6d6f339 100644
--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
@@ -10764,3 +10764,1081 @@ index b41b6b9..e59734f 100755
          for (i, new) in enumerate(news):
              if new:
                  self.stacked_obs[i] = 0
+347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+index 93c497a..479a608 100644
+--- a/new-actions-rl/arguments.py
++++ b/new-actions-rl/arguments.py
+@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+ 
+     #### Multitask specific
+     parser.add_argument('--multitask', action='store_true', default=False)
++    parser.add_argument('--env-names', nargs='+', default=[])
+ 
+     #### Resume specific
+     parser.add_argument('--best-run', type=int, default=None)
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+index 00a83d9..37f6dc9 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+@@ -1 +1 @@
+-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+\ No newline at end of file
++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+\ No newline at end of file
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+index b531690..c4ff3d3 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+          for (i, new) in enumerate(news):
+              if new:
+                  self.stacked_obs[i] = 0
++347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+index d008c38..9b566fb 100755
+--- a/new-actions-rl/rlf/rl/envs.py
++++ b/new-actions-rl/rlf/rl/envs.py
+@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+ 
+     return _thunk
+ 
+-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+ 
+ def make_vec_envs(env_name,
+                   seed,
+@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+                   trans_fn,
+                   args,
+                   num_frame_stack=None,
+-                  set_eval=False,
+-                  env_names_input=None):
++                  set_eval=False):
+ 
+     if args.multitask and not set_eval:
+         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+                   set_eval=False,
+                   env_names_input=None):
+ 
++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     envs = [
+         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+-        for env_name in env_names
++        for env_name in candidate_env_names
+     ]
+ 
+     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+index 0d25c28..e45648c 100755
+--- a/new-actions-rl/rlf/rl/rl.py
++++ b/new-actions-rl/rlf/rl/rl.py
+@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+           end_update, lr_updates, args, test_args, checkpointer):
+ 
++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     if args.resume and start_update > 0:
+         start_update += 1
+ 
+@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+         log.start_interval_log()
+ 
+         if args.multitask:
+-            idx = np.random.randint(10000) % len(env_names)
++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+             envs = envs_bulk[idx]
+-            args.env_name = env_names[idx]
+-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++            args.env_name = actual_env_names[idx]
++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+         else:
+             envs = envs_bulk
+ 
+@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+                 train_eval_envs = []
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs = None,
+                                train_eval_envs = None)
+@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+             else:
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs[i],
+                                train_eval_envs[i])
+347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+index 93c497a..479a608 100644
+--- a/new-actions-rl/arguments.py
++++ b/new-actions-rl/arguments.py
+@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+ 
+     #### Multitask specific
+     parser.add_argument('--multitask', action='store_true', default=False)
++    parser.add_argument('--env-names', nargs='+', default=[])
+ 
+     #### Resume specific
+     parser.add_argument('--best-run', type=int, default=None)
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+index a55af28..9e018c4 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+@@ -1,11 +1,11 @@
+ Date and Time:
+-10/03/2024
+-16:36:27
++15/04/2024
++22:26:28
+ 
+ action_base_hidden_size: 128
+ action_base_output_size: 64
+ action_proj_dim: 1
+-action_random_sample: True
++action_random_sample: False
+ action_seg_loc: ./data/action_segs
+ action_set_size: 50
+ algo: ppo
+@@ -14,6 +14,7 @@ analysis_angle: None
+ analysis_emb: None
+ anti_alias_blur: 0.0
+ backup: None
++best_run: None
+ both_train_test: False
+ bound_effect: False
+ cat_kl_loss: None
+@@ -38,7 +39,7 @@ create_play_len: 7
+ create_play_run_steps: 3
+ create_sec_goal_reward: 2.0
+ create_target_reward: 1.0
+-cuda: False
++cuda: True
+ cuda_deterministic: False
+ debug_render: False
+ decay_clipping: False
+@@ -73,9 +74,10 @@ emb_viz_interval: 5
+ encoder_dim: 64
+ entropy_coef: 0.005
+ env_name: CreateLevelPush-v0
++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+ eps: 1e-05
+ eval_interval: 50
+-eval_num_processes: None
++eval_num_processes: 1
+ eval_only: False
+ eval_split: False
+ eval_split_ratio: 0.5
+@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+ max_grid_steps: 50
+ max_std_width: 3.0
+ mega_res_interval: 4
++multitask: True
+ n_clusters: 10
+ n_distributions: 1
+ n_hidden_option: 3
+@@ -138,7 +141,7 @@ no_diag: True
+ no_frame_stack: False
+ no_initial_state: False
+ no_overlap_env: False
+-no_test_eval: False
++no_test_eval: True
+ no_var: False
+ normalize_embs: False
+ not_upto: True
+@@ -146,7 +149,7 @@ num_distributions: 400
+ num_env_steps: 60000000
+ num_eval: 20
+ num_mini_batch: 4
+-num_processes: 1
++num_processes: 4
+ num_render: None
+ num_steps: 384
+ num_z: 1
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+index 00a83d9..cda9700 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+@@ -1 +1 @@
+-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+\ No newline at end of file
++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+\ No newline at end of file
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+index b531690..ebf34e4 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
+          for (i, new) in enumerate(news):
+              if new:
+                  self.stacked_obs[i] = 0
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..37f6dc9 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..c4ff3d3 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+index 953d419..edec780 100644
+--- a/new-actions-rl/rlf/main.py
++++ b/new-actions-rl/rlf/main.py
+@@ -39,7 +39,7 @@ def get_num_updates(args):
+     return num_updates, lr_updates
+ 
+ 
+-def get_fine_tune_run(load_name, env_name):
++def get_fine_tune_run(load_name, env_name, args):
+     from rlf.exp_mgr.eval import get_max_run
+     import wandb
+     import subprocess
+diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+index d008c38..9b566fb 100755
+--- a/new-actions-rl/rlf/rl/envs.py
++++ b/new-actions-rl/rlf/rl/envs.py
+@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+ 
+     return _thunk
+ 
+-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+ 
+ def make_vec_envs(env_name,
+                   seed,
+@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+                   trans_fn,
+                   args,
+                   num_frame_stack=None,
+-                  set_eval=False,
+-                  env_names_input=None):
++                  set_eval=False):
+ 
+     if args.multitask and not set_eval:
+         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+                   set_eval=False,
+                   env_names_input=None):
+ 
++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     envs = [
+         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+-        for env_name in env_names
++        for env_name in candidate_env_names
+     ]
+ 
+     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+index 0d25c28..e45648c 100755
+--- a/new-actions-rl/rlf/rl/rl.py
++++ b/new-actions-rl/rlf/rl/rl.py
+@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+           end_update, lr_updates, args, test_args, checkpointer):
+ 
++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     if args.resume and start_update > 0:
+         start_update += 1
+ 
+@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+         log.start_interval_log()
+ 
+         if args.multitask:
+-            idx = np.random.randint(10000) % len(env_names)
++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+             envs = envs_bulk[idx]
+-            args.env_name = env_names[idx]
+-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++            args.env_name = actual_env_names[idx]
++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+         else:
+             envs = envs_bulk
+ 
+@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+                 train_eval_envs = []
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs = None,
+                                train_eval_envs = None)
+@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+             else:
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs[i],
+                                train_eval_envs[i])
+347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+index 93c497a..479a608 100644
+--- a/new-actions-rl/arguments.py
++++ b/new-actions-rl/arguments.py
+@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+ 
+     #### Multitask specific
+     parser.add_argument('--multitask', action='store_true', default=False)
++    parser.add_argument('--env-names', nargs='+', default=[])
+ 
+     #### Resume specific
+     parser.add_argument('--best-run', type=int, default=None)
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+index a55af28..5c86c73 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+@@ -1,11 +1,11 @@
+ Date and Time:
+-10/03/2024
+-16:36:27
++16/04/2024
++11:03:41
+ 
+ action_base_hidden_size: 128
+ action_base_output_size: 64
+ action_proj_dim: 1
+-action_random_sample: True
++action_random_sample: False
+ action_seg_loc: ./data/action_segs
+ action_set_size: 50
+ algo: ppo
+@@ -14,6 +14,7 @@ analysis_angle: None
+ analysis_emb: None
+ anti_alias_blur: 0.0
+ backup: None
++best_run: 5799
+ both_train_test: False
+ bound_effect: False
+ cat_kl_loss: None
+@@ -38,7 +39,7 @@ create_play_len: 7
+ create_play_run_steps: 3
+ create_sec_goal_reward: 2.0
+ create_target_reward: 1.0
+-cuda: False
++cuda: True
+ cuda_deterministic: False
+ debug_render: False
+ decay_clipping: False
+@@ -73,9 +74,10 @@ emb_viz_interval: 5
+ encoder_dim: 64
+ entropy_coef: 0.005
+ env_name: CreateLevelPush-v0
++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+ eps: 1e-05
+ eval_interval: 50
+-eval_num_processes: None
++eval_num_processes: 1
+ eval_only: False
+ eval_split: False
+ eval_split_ratio: 0.5
+@@ -109,7 +111,7 @@ kl_pen: None
+ large_steps: 40
+ latent_dim: 1
+ load_all_data: False
+-load_best_name: None
++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
+ load_dataset: True
+ load_emb_logvar: True
+ load_emb_model_file: None
+@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+ max_grid_steps: 50
+ max_std_width: 3.0
+ mega_res_interval: 4
++multitask: True
+ n_clusters: 10
+ n_distributions: 1
+ n_hidden_option: 3
+@@ -138,7 +141,7 @@ no_diag: True
+ no_frame_stack: False
+ no_initial_state: False
+ no_overlap_env: False
+-no_test_eval: False
++no_test_eval: True
+ no_var: False
+ normalize_embs: False
+ not_upto: True
+@@ -146,7 +149,7 @@ num_distributions: 400
+ num_env_steps: 60000000
+ num_eval: 20
+ num_mini_batch: 4
+-num_processes: 1
++num_processes: 4
+ num_render: None
+ num_steps: 384
+ num_z: 1
+@@ -193,7 +196,7 @@ render_result_figures: False
+ render_text: False
+ reparam: True
+ result_dir: ./data/results
+-resume: False
++resume: True
+ resume_emb_training: False
+ reward_entropy_coef: 0.0
+ rl_use_radam: False
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+index 00a83d9..e3712f3 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+@@ -1 +1 @@
+-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+\ No newline at end of file
++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+\ No newline at end of file
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+index b531690..fde463e 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+@@ -10764,3 +10764,433 @@ index b41b6b9..e59734f 100755
+          for (i, new) in enumerate(news):
+              if new:
+                  self.stacked_obs[i] = 0
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..37f6dc9 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..c4ff3d3 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..9e018c4 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++15/04/2024
+++22:26:28
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: None
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..cda9700 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..ebf34e4 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..37f6dc9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..c4ff3d3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++index 953d419..edec780 100644
++--- a/new-actions-rl/rlf/main.py
+++++ b/new-actions-rl/rlf/main.py
++@@ -39,7 +39,7 @@ def get_num_updates(args):
++     return num_updates, lr_updates
++ 
++ 
++-def get_fine_tune_run(load_name, env_name):
+++def get_fine_tune_run(load_name, env_name, args):
++     from rlf.exp_mgr.eval import get_max_run
++     import wandb
++     import subprocess
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+index 953d419..edec780 100644
+--- a/new-actions-rl/rlf/main.py
++++ b/new-actions-rl/rlf/main.py
+@@ -39,7 +39,7 @@ def get_num_updates(args):
+     return num_updates, lr_updates
+ 
+ 
+-def get_fine_tune_run(load_name, env_name):
++def get_fine_tune_run(load_name, env_name, args):
+     from rlf.exp_mgr.eval import get_max_run
+     import wandb
+     import subprocess
+diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+index d008c38..9b566fb 100755
+--- a/new-actions-rl/rlf/rl/envs.py
++++ b/new-actions-rl/rlf/rl/envs.py
+@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+ 
+     return _thunk
+ 
+-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+ 
+ def make_vec_envs(env_name,
+                   seed,
+@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+                   trans_fn,
+                   args,
+                   num_frame_stack=None,
+-                  set_eval=False,
+-                  env_names_input=None):
++                  set_eval=False):
+ 
+     if args.multitask and not set_eval:
+         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+                   set_eval=False,
+                   env_names_input=None):
+ 
++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     envs = [
+         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+-        for env_name in env_names
++        for env_name in candidate_env_names
+     ]
+ 
+     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+index 0d25c28..e45648c 100755
+--- a/new-actions-rl/rlf/rl/rl.py
++++ b/new-actions-rl/rlf/rl/rl.py
+@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+           end_update, lr_updates, args, test_args, checkpointer):
+ 
++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     if args.resume and start_update > 0:
+         start_update += 1
+ 
+@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+         log.start_interval_log()
+ 
+         if args.multitask:
+-            idx = np.random.randint(10000) % len(env_names)
++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+             envs = envs_bulk[idx]
+-            args.env_name = env_names[idx]
+-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++            args.env_name = actual_env_names[idx]
++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+         else:
+             envs = envs_bulk
+ 
+@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+                 train_eval_envs = []
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs = None,
+                                train_eval_envs = None)
+@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+             else:
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs[i],
+                                train_eval_envs[i])
+347a0e6efbab5459e5d4db3b55c040154efa2886
diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
index 953d419..edec780 100644
--- a/new-actions-rl/rlf/main.py
+++ b/new-actions-rl/rlf/main.py
@@ -39,7 +39,7 @@ def get_num_updates(args):
     return num_updates, lr_updates
 
 
-def get_fine_tune_run(load_name, env_name):
+def get_fine_tune_run(load_name, env_name, args):
     from rlf.exp_mgr.eval import get_max_run
     import wandb
     import subprocess
diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
index d008c38..9b566fb 100755
--- a/new-actions-rl/rlf/rl/envs.py
+++ b/new-actions-rl/rlf/rl/envs.py
@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
 
     return _thunk
 
-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
 
 def make_vec_envs(env_name,
                   seed,
@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
                   trans_fn,
                   args,
                   num_frame_stack=None,
-                  set_eval=False,
-                  env_names_input=None):
+                  set_eval=False):
 
     if args.multitask and not set_eval:
         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
                   set_eval=False,
                   env_names_input=None):
 
+    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
     envs = [
         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
-        for env_name in env_names
+        for env_name in candidate_env_names
     ]
 
     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
index 0d25c28..e45648c 100755
--- a/new-actions-rl/rlf/rl/rl.py
+++ b/new-actions-rl/rlf/rl/rl.py
@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
 def train(envs_bulk, rollouts, policy, updater, log, start_update,
           end_update, lr_updates, args, test_args, checkpointer):
 
+    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
     if args.resume and start_update > 0:
         start_update += 1
 
@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
         log.start_interval_log()
 
         if args.multitask:
-            idx = np.random.randint(10000) % len(env_names)
+            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
             envs = envs_bulk[idx]
-            args.env_name = env_names[idx]
-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+            args.env_name = actual_env_names[idx]
+            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
         else:
             envs = envs_bulk
 
@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
                 train_eval_envs = []
                 for i in range(len(envs_bulk)):
                     eval_envs = envs_bulk[i]
-                    args.env_name = env_names[i]
-                    print(f"evaluating for env {env_names[i]}")
+                    args.env_name = actual_env_names[i]
+                    print(f"evaluating for env {actual_env_names[i]}")
                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
                                test_args, log, j, total_num_steps, test_eval_envs = None,
                                train_eval_envs = None)
@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
             else:
                 for i in range(len(envs_bulk)):
                     eval_envs = envs_bulk[i]
-                    args.env_name = env_names[i]
-                    print(f"evaluating for env {env_names[i]}")
+                    args.env_name = actual_env_names[i]
+                    print(f"evaluating for env {actual_env_names[i]}")
                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
                                test_args, log, j, total_num_steps, test_eval_envs[i],
                                train_eval_envs[i])
347a0e6efbab5459e5d4db3b55c040154efa2886
diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
index 93c497a..479a608 100644
--- a/new-actions-rl/arguments.py
+++ b/new-actions-rl/arguments.py
@@ -616,6 +616,7 @@ def get_args(arg_str=None):
 
     #### Multitask specific
     parser.add_argument('--multitask', action='store_true', default=False)
+    parser.add_argument('--env-names', nargs='+', default=[])
 
     #### Resume specific
     parser.add_argument('--best-run', type=int, default=None)
diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
index a55af28..85c20f2 100644
--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
@@ -1,11 +1,11 @@
 Date and Time:
-10/03/2024
-16:36:27
+16/04/2024
+18:38:56
 
 action_base_hidden_size: 128
 action_base_output_size: 64
 action_proj_dim: 1
-action_random_sample: True
+action_random_sample: False
 action_seg_loc: ./data/action_segs
 action_set_size: 50
 algo: ppo
@@ -14,6 +14,7 @@ analysis_angle: None
 analysis_emb: None
 anti_alias_blur: 0.0
 backup: None
+best_run: 12899
 both_train_test: False
 bound_effect: False
 cat_kl_loss: None
@@ -38,7 +39,7 @@ create_play_len: 7
 create_play_run_steps: 3
 create_sec_goal_reward: 2.0
 create_target_reward: 1.0
-cuda: False
+cuda: True
 cuda_deterministic: False
 debug_render: False
 decay_clipping: False
@@ -73,9 +74,10 @@ emb_viz_interval: 5
 encoder_dim: 64
 entropy_coef: 0.005
 env_name: CreateLevelPush-v0
+env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
 eps: 1e-05
 eval_interval: 50
-eval_num_processes: None
+eval_num_processes: 1
 eval_only: False
 eval_split: False
 eval_split_ratio: 0.5
@@ -109,7 +111,7 @@ kl_pen: None
 large_steps: 40
 latent_dim: 1
 load_all_data: False
-load_best_name: None
+load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
 load_dataset: True
 load_emb_logvar: True
 load_emb_model_file: None
@@ -126,6 +128,7 @@ max_grad_norm: 0.5
 max_grid_steps: 50
 max_std_width: 3.0
 mega_res_interval: 4
+multitask: True
 n_clusters: 10
 n_distributions: 1
 n_hidden_option: 3
@@ -138,7 +141,7 @@ no_diag: True
 no_frame_stack: False
 no_initial_state: False
 no_overlap_env: False
-no_test_eval: False
+no_test_eval: True
 no_var: False
 normalize_embs: False
 not_upto: True
@@ -146,7 +149,7 @@ num_distributions: 400
 num_env_steps: 60000000
 num_eval: 20
 num_mini_batch: 4
-num_processes: 1
+num_processes: 4
 num_render: None
 num_steps: 384
 num_z: 1
@@ -193,7 +196,7 @@ render_result_figures: False
 render_text: False
 reparam: True
 result_dir: ./data/results
-resume: False
+resume: True
 resume_emb_training: False
 reward_entropy_coef: 0.0
 rl_use_radam: False
diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
index 00a83d9..63b1f15 100644
--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
@@ -1 +1 @@
-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
\ No newline at end of file
+python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 16449 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
\ No newline at end of file
diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
index b531690..815f948 100644
--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
@@ -10764,3 +10764,2377 @@ index b41b6b9..e59734f 100755
          for (i, new) in enumerate(news):
              if new:
                  self.stacked_obs[i] = 0
+347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+index 93c497a..479a608 100644
+--- a/new-actions-rl/arguments.py
++++ b/new-actions-rl/arguments.py
+@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+ 
+     #### Multitask specific
+     parser.add_argument('--multitask', action='store_true', default=False)
++    parser.add_argument('--env-names', nargs='+', default=[])
+ 
+     #### Resume specific
+     parser.add_argument('--best-run', type=int, default=None)
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+index 00a83d9..37f6dc9 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+@@ -1 +1 @@
+-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+\ No newline at end of file
++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+\ No newline at end of file
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+index b531690..c4ff3d3 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+          for (i, new) in enumerate(news):
+              if new:
+                  self.stacked_obs[i] = 0
++347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+index d008c38..9b566fb 100755
+--- a/new-actions-rl/rlf/rl/envs.py
++++ b/new-actions-rl/rlf/rl/envs.py
+@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+ 
+     return _thunk
+ 
+-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+ 
+ def make_vec_envs(env_name,
+                   seed,
+@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+                   trans_fn,
+                   args,
+                   num_frame_stack=None,
+-                  set_eval=False,
+-                  env_names_input=None):
++                  set_eval=False):
+ 
+     if args.multitask and not set_eval:
+         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+                   set_eval=False,
+                   env_names_input=None):
+ 
++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     envs = [
+         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+-        for env_name in env_names
++        for env_name in candidate_env_names
+     ]
+ 
+     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+index 0d25c28..e45648c 100755
+--- a/new-actions-rl/rlf/rl/rl.py
++++ b/new-actions-rl/rlf/rl/rl.py
+@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+           end_update, lr_updates, args, test_args, checkpointer):
+ 
++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     if args.resume and start_update > 0:
+         start_update += 1
+ 
+@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+         log.start_interval_log()
+ 
+         if args.multitask:
+-            idx = np.random.randint(10000) % len(env_names)
++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+             envs = envs_bulk[idx]
+-            args.env_name = env_names[idx]
+-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++            args.env_name = actual_env_names[idx]
++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+         else:
+             envs = envs_bulk
+ 
+@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+                 train_eval_envs = []
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs = None,
+                                train_eval_envs = None)
+@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+             else:
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs[i],
+                                train_eval_envs[i])
+347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+index 93c497a..479a608 100644
+--- a/new-actions-rl/arguments.py
++++ b/new-actions-rl/arguments.py
+@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+ 
+     #### Multitask specific
+     parser.add_argument('--multitask', action='store_true', default=False)
++    parser.add_argument('--env-names', nargs='+', default=[])
+ 
+     #### Resume specific
+     parser.add_argument('--best-run', type=int, default=None)
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+index a55af28..9e018c4 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+@@ -1,11 +1,11 @@
+ Date and Time:
+-10/03/2024
+-16:36:27
++15/04/2024
++22:26:28
+ 
+ action_base_hidden_size: 128
+ action_base_output_size: 64
+ action_proj_dim: 1
+-action_random_sample: True
++action_random_sample: False
+ action_seg_loc: ./data/action_segs
+ action_set_size: 50
+ algo: ppo
+@@ -14,6 +14,7 @@ analysis_angle: None
+ analysis_emb: None
+ anti_alias_blur: 0.0
+ backup: None
++best_run: None
+ both_train_test: False
+ bound_effect: False
+ cat_kl_loss: None
+@@ -38,7 +39,7 @@ create_play_len: 7
+ create_play_run_steps: 3
+ create_sec_goal_reward: 2.0
+ create_target_reward: 1.0
+-cuda: False
++cuda: True
+ cuda_deterministic: False
+ debug_render: False
+ decay_clipping: False
+@@ -73,9 +74,10 @@ emb_viz_interval: 5
+ encoder_dim: 64
+ entropy_coef: 0.005
+ env_name: CreateLevelPush-v0
++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+ eps: 1e-05
+ eval_interval: 50
+-eval_num_processes: None
++eval_num_processes: 1
+ eval_only: False
+ eval_split: False
+ eval_split_ratio: 0.5
+@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+ max_grid_steps: 50
+ max_std_width: 3.0
+ mega_res_interval: 4
++multitask: True
+ n_clusters: 10
+ n_distributions: 1
+ n_hidden_option: 3
+@@ -138,7 +141,7 @@ no_diag: True
+ no_frame_stack: False
+ no_initial_state: False
+ no_overlap_env: False
+-no_test_eval: False
++no_test_eval: True
+ no_var: False
+ normalize_embs: False
+ not_upto: True
+@@ -146,7 +149,7 @@ num_distributions: 400
+ num_env_steps: 60000000
+ num_eval: 20
+ num_mini_batch: 4
+-num_processes: 1
++num_processes: 4
+ num_render: None
+ num_steps: 384
+ num_z: 1
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+index 00a83d9..cda9700 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+@@ -1 +1 @@
+-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+\ No newline at end of file
++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+\ No newline at end of file
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+index b531690..ebf34e4 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
+          for (i, new) in enumerate(news):
+              if new:
+                  self.stacked_obs[i] = 0
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..37f6dc9 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..c4ff3d3 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+index 953d419..edec780 100644
+--- a/new-actions-rl/rlf/main.py
++++ b/new-actions-rl/rlf/main.py
+@@ -39,7 +39,7 @@ def get_num_updates(args):
+     return num_updates, lr_updates
+ 
+ 
+-def get_fine_tune_run(load_name, env_name):
++def get_fine_tune_run(load_name, env_name, args):
+     from rlf.exp_mgr.eval import get_max_run
+     import wandb
+     import subprocess
+diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+index d008c38..9b566fb 100755
+--- a/new-actions-rl/rlf/rl/envs.py
++++ b/new-actions-rl/rlf/rl/envs.py
+@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+ 
+     return _thunk
+ 
+-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+ 
+ def make_vec_envs(env_name,
+                   seed,
+@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+                   trans_fn,
+                   args,
+                   num_frame_stack=None,
+-                  set_eval=False,
+-                  env_names_input=None):
++                  set_eval=False):
+ 
+     if args.multitask and not set_eval:
+         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+                   set_eval=False,
+                   env_names_input=None):
+ 
++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     envs = [
+         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+-        for env_name in env_names
++        for env_name in candidate_env_names
+     ]
+ 
+     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+index 0d25c28..e45648c 100755
+--- a/new-actions-rl/rlf/rl/rl.py
++++ b/new-actions-rl/rlf/rl/rl.py
+@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+           end_update, lr_updates, args, test_args, checkpointer):
+ 
++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     if args.resume and start_update > 0:
+         start_update += 1
+ 
+@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+         log.start_interval_log()
+ 
+         if args.multitask:
+-            idx = np.random.randint(10000) % len(env_names)
++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+             envs = envs_bulk[idx]
+-            args.env_name = env_names[idx]
+-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++            args.env_name = actual_env_names[idx]
++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+         else:
+             envs = envs_bulk
+ 
+@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+                 train_eval_envs = []
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs = None,
+                                train_eval_envs = None)
+@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+             else:
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs[i],
+                                train_eval_envs[i])
+347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+index 93c497a..479a608 100644
+--- a/new-actions-rl/arguments.py
++++ b/new-actions-rl/arguments.py
+@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+ 
+     #### Multitask specific
+     parser.add_argument('--multitask', action='store_true', default=False)
++    parser.add_argument('--env-names', nargs='+', default=[])
+ 
+     #### Resume specific
+     parser.add_argument('--best-run', type=int, default=None)
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+index a55af28..5c86c73 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+@@ -1,11 +1,11 @@
+ Date and Time:
+-10/03/2024
+-16:36:27
++16/04/2024
++11:03:41
+ 
+ action_base_hidden_size: 128
+ action_base_output_size: 64
+ action_proj_dim: 1
+-action_random_sample: True
++action_random_sample: False
+ action_seg_loc: ./data/action_segs
+ action_set_size: 50
+ algo: ppo
+@@ -14,6 +14,7 @@ analysis_angle: None
+ analysis_emb: None
+ anti_alias_blur: 0.0
+ backup: None
++best_run: 5799
+ both_train_test: False
+ bound_effect: False
+ cat_kl_loss: None
+@@ -38,7 +39,7 @@ create_play_len: 7
+ create_play_run_steps: 3
+ create_sec_goal_reward: 2.0
+ create_target_reward: 1.0
+-cuda: False
++cuda: True
+ cuda_deterministic: False
+ debug_render: False
+ decay_clipping: False
+@@ -73,9 +74,10 @@ emb_viz_interval: 5
+ encoder_dim: 64
+ entropy_coef: 0.005
+ env_name: CreateLevelPush-v0
++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+ eps: 1e-05
+ eval_interval: 50
+-eval_num_processes: None
++eval_num_processes: 1
+ eval_only: False
+ eval_split: False
+ eval_split_ratio: 0.5
+@@ -109,7 +111,7 @@ kl_pen: None
+ large_steps: 40
+ latent_dim: 1
+ load_all_data: False
+-load_best_name: None
++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
+ load_dataset: True
+ load_emb_logvar: True
+ load_emb_model_file: None
+@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+ max_grid_steps: 50
+ max_std_width: 3.0
+ mega_res_interval: 4
++multitask: True
+ n_clusters: 10
+ n_distributions: 1
+ n_hidden_option: 3
+@@ -138,7 +141,7 @@ no_diag: True
+ no_frame_stack: False
+ no_initial_state: False
+ no_overlap_env: False
+-no_test_eval: False
++no_test_eval: True
+ no_var: False
+ normalize_embs: False
+ not_upto: True
+@@ -146,7 +149,7 @@ num_distributions: 400
+ num_env_steps: 60000000
+ num_eval: 20
+ num_mini_batch: 4
+-num_processes: 1
++num_processes: 4
+ num_render: None
+ num_steps: 384
+ num_z: 1
+@@ -193,7 +196,7 @@ render_result_figures: False
+ render_text: False
+ reparam: True
+ result_dir: ./data/results
+-resume: False
++resume: True
+ resume_emb_training: False
+ reward_entropy_coef: 0.0
+ rl_use_radam: False
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+index 00a83d9..e3712f3 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+@@ -1 +1 @@
+-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+\ No newline at end of file
++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+\ No newline at end of file
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+index b531690..fde463e 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+@@ -10764,3 +10764,433 @@ index b41b6b9..e59734f 100755
+          for (i, new) in enumerate(news):
+              if new:
+                  self.stacked_obs[i] = 0
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..37f6dc9 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..c4ff3d3 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..9e018c4 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++15/04/2024
+++22:26:28
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: None
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..cda9700 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..ebf34e4 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..37f6dc9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..c4ff3d3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++index 953d419..edec780 100644
++--- a/new-actions-rl/rlf/main.py
+++++ b/new-actions-rl/rlf/main.py
++@@ -39,7 +39,7 @@ def get_num_updates(args):
++     return num_updates, lr_updates
++ 
++ 
++-def get_fine_tune_run(load_name, env_name):
+++def get_fine_tune_run(load_name, env_name, args):
++     from rlf.exp_mgr.eval import get_max_run
++     import wandb
++     import subprocess
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+index 953d419..edec780 100644
+--- a/new-actions-rl/rlf/main.py
++++ b/new-actions-rl/rlf/main.py
+@@ -39,7 +39,7 @@ def get_num_updates(args):
+     return num_updates, lr_updates
+ 
+ 
+-def get_fine_tune_run(load_name, env_name):
++def get_fine_tune_run(load_name, env_name, args):
+     from rlf.exp_mgr.eval import get_max_run
+     import wandb
+     import subprocess
+diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+index d008c38..9b566fb 100755
+--- a/new-actions-rl/rlf/rl/envs.py
++++ b/new-actions-rl/rlf/rl/envs.py
+@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+ 
+     return _thunk
+ 
+-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+ 
+ def make_vec_envs(env_name,
+                   seed,
+@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+                   trans_fn,
+                   args,
+                   num_frame_stack=None,
+-                  set_eval=False,
+-                  env_names_input=None):
++                  set_eval=False):
+ 
+     if args.multitask and not set_eval:
+         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+                   set_eval=False,
+                   env_names_input=None):
+ 
++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     envs = [
+         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+-        for env_name in env_names
++        for env_name in candidate_env_names
+     ]
+ 
+     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+index 0d25c28..e45648c 100755
+--- a/new-actions-rl/rlf/rl/rl.py
++++ b/new-actions-rl/rlf/rl/rl.py
+@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+           end_update, lr_updates, args, test_args, checkpointer):
+ 
++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     if args.resume and start_update > 0:
+         start_update += 1
+ 
+@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+         log.start_interval_log()
+ 
+         if args.multitask:
+-            idx = np.random.randint(10000) % len(env_names)
++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+             envs = envs_bulk[idx]
+-            args.env_name = env_names[idx]
+-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++            args.env_name = actual_env_names[idx]
++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+         else:
+             envs = envs_bulk
+ 
+@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+                 train_eval_envs = []
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs = None,
+                                train_eval_envs = None)
+@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+             else:
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs[i],
+                                train_eval_envs[i])
+347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+index 93c497a..479a608 100644
+--- a/new-actions-rl/arguments.py
++++ b/new-actions-rl/arguments.py
+@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+ 
+     #### Multitask specific
+     parser.add_argument('--multitask', action='store_true', default=False)
++    parser.add_argument('--env-names', nargs='+', default=[])
+ 
+     #### Resume specific
+     parser.add_argument('--best-run', type=int, default=None)
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+index a55af28..c06c75e 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+@@ -1,11 +1,11 @@
+ Date and Time:
+-10/03/2024
+-16:36:27
++16/04/2024
++14:42:37
+ 
+ action_base_hidden_size: 128
+ action_base_output_size: 64
+ action_proj_dim: 1
+-action_random_sample: True
++action_random_sample: False
+ action_seg_loc: ./data/action_segs
+ action_set_size: 50
+ algo: ppo
+@@ -14,6 +14,7 @@ analysis_angle: None
+ analysis_emb: None
+ anti_alias_blur: 0.0
+ backup: None
++best_run: 9349
+ both_train_test: False
+ bound_effect: False
+ cat_kl_loss: None
+@@ -38,7 +39,7 @@ create_play_len: 7
+ create_play_run_steps: 3
+ create_sec_goal_reward: 2.0
+ create_target_reward: 1.0
+-cuda: False
++cuda: True
+ cuda_deterministic: False
+ debug_render: False
+ decay_clipping: False
+@@ -73,9 +74,10 @@ emb_viz_interval: 5
+ encoder_dim: 64
+ entropy_coef: 0.005
+ env_name: CreateLevelPush-v0
++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+ eps: 1e-05
+ eval_interval: 50
+-eval_num_processes: None
++eval_num_processes: 1
+ eval_only: False
+ eval_split: False
+ eval_split_ratio: 0.5
+@@ -109,7 +111,7 @@ kl_pen: None
+ large_steps: 40
+ latent_dim: 1
+ load_all_data: False
+-load_best_name: None
++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
+ load_dataset: True
+ load_emb_logvar: True
+ load_emb_model_file: None
+@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+ max_grid_steps: 50
+ max_std_width: 3.0
+ mega_res_interval: 4
++multitask: True
+ n_clusters: 10
+ n_distributions: 1
+ n_hidden_option: 3
+@@ -138,7 +141,7 @@ no_diag: True
+ no_frame_stack: False
+ no_initial_state: False
+ no_overlap_env: False
+-no_test_eval: False
++no_test_eval: True
+ no_var: False
+ normalize_embs: False
+ not_upto: True
+@@ -146,7 +149,7 @@ num_distributions: 400
+ num_env_steps: 60000000
+ num_eval: 20
+ num_mini_batch: 4
+-num_processes: 1
++num_processes: 4
+ num_render: None
+ num_steps: 384
+ num_z: 1
+@@ -193,7 +196,7 @@ render_result_figures: False
+ render_text: False
+ reparam: True
+ result_dir: ./data/results
+-resume: False
++resume: True
+ resume_emb_training: False
+ reward_entropy_coef: 0.0
+ rl_use_radam: False
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+index 00a83d9..ec24bd5 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+@@ -1 +1 @@
+-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+\ No newline at end of file
++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+\ No newline at end of file
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+index b531690..6d6f339 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+@@ -10764,3 +10764,1081 @@ index b41b6b9..e59734f 100755
+          for (i, new) in enumerate(news):
+              if new:
+                  self.stacked_obs[i] = 0
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..37f6dc9 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..c4ff3d3 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..9e018c4 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++15/04/2024
+++22:26:28
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: None
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..cda9700 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..ebf34e4 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..37f6dc9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..c4ff3d3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++index 953d419..edec780 100644
++--- a/new-actions-rl/rlf/main.py
+++++ b/new-actions-rl/rlf/main.py
++@@ -39,7 +39,7 @@ def get_num_updates(args):
++     return num_updates, lr_updates
++ 
++ 
++-def get_fine_tune_run(load_name, env_name):
+++def get_fine_tune_run(load_name, env_name, args):
++     from rlf.exp_mgr.eval import get_max_run
++     import wandb
++     import subprocess
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..5c86c73 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++16/04/2024
+++11:03:41
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: 5799
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -109,7 +111,7 @@ kl_pen: None
++ large_steps: 40
++ latent_dim: 1
++ load_all_data: False
++-load_best_name: None
+++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
++ load_dataset: True
++ load_emb_logvar: True
++ load_emb_model_file: None
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++@@ -193,7 +196,7 @@ render_result_figures: False
++ render_text: False
++ reparam: True
++ result_dir: ./data/results
++-resume: False
+++resume: True
++ resume_emb_training: False
++ reward_entropy_coef: 0.0
++ rl_use_radam: False
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..e3712f3 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..fde463e 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,433 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..37f6dc9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..c4ff3d3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..9e018c4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++15/04/2024
++++22:26:28
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: None
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..cda9700 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..ebf34e4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..37f6dc9 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..c4ff3d3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++index 953d419..edec780 100644
+++--- a/new-actions-rl/rlf/main.py
++++++ b/new-actions-rl/rlf/main.py
+++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++     return num_updates, lr_updates
+++ 
+++ 
+++-def get_fine_tune_run(load_name, env_name):
++++def get_fine_tune_run(load_name, env_name, args):
+++     from rlf.exp_mgr.eval import get_max_run
+++     import wandb
+++     import subprocess
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++index 953d419..edec780 100644
++--- a/new-actions-rl/rlf/main.py
+++++ b/new-actions-rl/rlf/main.py
++@@ -39,7 +39,7 @@ def get_num_updates(args):
++     return num_updates, lr_updates
++ 
++ 
++-def get_fine_tune_run(load_name, env_name):
+++def get_fine_tune_run(load_name, env_name, args):
++     from rlf.exp_mgr.eval import get_max_run
++     import wandb
++     import subprocess
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+index 953d419..edec780 100644
+--- a/new-actions-rl/rlf/main.py
++++ b/new-actions-rl/rlf/main.py
+@@ -39,7 +39,7 @@ def get_num_updates(args):
+     return num_updates, lr_updates
+ 
+ 
+-def get_fine_tune_run(load_name, env_name):
++def get_fine_tune_run(load_name, env_name, args):
+     from rlf.exp_mgr.eval import get_max_run
+     import wandb
+     import subprocess
+diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+index d008c38..9b566fb 100755
+--- a/new-actions-rl/rlf/rl/envs.py
++++ b/new-actions-rl/rlf/rl/envs.py
+@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+ 
+     return _thunk
+ 
+-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+ 
+ def make_vec_envs(env_name,
+                   seed,
+@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+                   trans_fn,
+                   args,
+                   num_frame_stack=None,
+-                  set_eval=False,
+-                  env_names_input=None):
++                  set_eval=False):
+ 
+     if args.multitask and not set_eval:
+         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+                   set_eval=False,
+                   env_names_input=None):
+ 
++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     envs = [
+         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+-        for env_name in env_names
++        for env_name in candidate_env_names
+     ]
+ 
+     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+index 0d25c28..e45648c 100755
+--- a/new-actions-rl/rlf/rl/rl.py
++++ b/new-actions-rl/rlf/rl/rl.py
+@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+           end_update, lr_updates, args, test_args, checkpointer):
+ 
++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     if args.resume and start_update > 0:
+         start_update += 1
+ 
+@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+         log.start_interval_log()
+ 
+         if args.multitask:
+-            idx = np.random.randint(10000) % len(env_names)
++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+             envs = envs_bulk[idx]
+-            args.env_name = env_names[idx]
+-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++            args.env_name = actual_env_names[idx]
++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+         else:
+             envs = envs_bulk
+ 
+@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+                 train_eval_envs = []
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs = None,
+                                train_eval_envs = None)
+@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+             else:
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs[i],
+                                train_eval_envs[i])
+347a0e6efbab5459e5d4db3b55c040154efa2886
diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
index 953d419..edec780 100644
--- a/new-actions-rl/rlf/main.py
+++ b/new-actions-rl/rlf/main.py
@@ -39,7 +39,7 @@ def get_num_updates(args):
     return num_updates, lr_updates
 
 
-def get_fine_tune_run(load_name, env_name):
+def get_fine_tune_run(load_name, env_name, args):
     from rlf.exp_mgr.eval import get_max_run
     import wandb
     import subprocess
diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
index d008c38..9b566fb 100755
--- a/new-actions-rl/rlf/rl/envs.py
+++ b/new-actions-rl/rlf/rl/envs.py
@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
 
     return _thunk
 
-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
 
 def make_vec_envs(env_name,
                   seed,
@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
                   trans_fn,
                   args,
                   num_frame_stack=None,
-                  set_eval=False,
-                  env_names_input=None):
+                  set_eval=False):
 
     if args.multitask and not set_eval:
         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
                   set_eval=False,
                   env_names_input=None):
 
+    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
     envs = [
         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
-        for env_name in env_names
+        for env_name in candidate_env_names
     ]
 
     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
index 0d25c28..e45648c 100755
--- a/new-actions-rl/rlf/rl/rl.py
+++ b/new-actions-rl/rlf/rl/rl.py
@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
 def train(envs_bulk, rollouts, policy, updater, log, start_update,
           end_update, lr_updates, args, test_args, checkpointer):
 
+    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
     if args.resume and start_update > 0:
         start_update += 1
 
@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
         log.start_interval_log()
 
         if args.multitask:
-            idx = np.random.randint(10000) % len(env_names)
+            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
             envs = envs_bulk[idx]
-            args.env_name = env_names[idx]
-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+            args.env_name = actual_env_names[idx]
+            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
         else:
             envs = envs_bulk
 
@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
                 train_eval_envs = []
                 for i in range(len(envs_bulk)):
                     eval_envs = envs_bulk[i]
-                    args.env_name = env_names[i]
-                    print(f"evaluating for env {env_names[i]}")
+                    args.env_name = actual_env_names[i]
+                    print(f"evaluating for env {actual_env_names[i]}")
                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
                                test_args, log, j, total_num_steps, test_eval_envs = None,
                                train_eval_envs = None)
@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
             else:
                 for i in range(len(envs_bulk)):
                     eval_envs = envs_bulk[i]
-                    args.env_name = env_names[i]
-                    print(f"evaluating for env {env_names[i]}")
+                    args.env_name = actual_env_names[i]
+                    print(f"evaluating for env {actual_env_names[i]}")
                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
                                test_args, log, j, total_num_steps, test_eval_envs[i],
                                train_eval_envs[i])
347a0e6efbab5459e5d4db3b55c040154efa2886
diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
index 93c497a..479a608 100644
--- a/new-actions-rl/arguments.py
+++ b/new-actions-rl/arguments.py
@@ -616,6 +616,7 @@ def get_args(arg_str=None):
 
     #### Multitask specific
     parser.add_argument('--multitask', action='store_true', default=False)
+    parser.add_argument('--env-names', nargs='+', default=[])
 
     #### Resume specific
     parser.add_argument('--best-run', type=int, default=None)
diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
index a55af28..471a8c9 100644
--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
@@ -1,11 +1,11 @@
 Date and Time:
-10/03/2024
-16:36:27
+17/04/2024
+01:03:09
 
 action_base_hidden_size: 128
 action_base_output_size: 64
 action_proj_dim: 1
-action_random_sample: True
+action_random_sample: False
 action_seg_loc: ./data/action_segs
 action_set_size: 50
 algo: ppo
@@ -14,6 +14,7 @@ analysis_angle: None
 analysis_emb: None
 anti_alias_blur: 0.0
 backup: None
+best_run: 16449
 both_train_test: False
 bound_effect: False
 cat_kl_loss: None
@@ -38,7 +39,7 @@ create_play_len: 7
 create_play_run_steps: 3
 create_sec_goal_reward: 2.0
 create_target_reward: 1.0
-cuda: False
+cuda: True
 cuda_deterministic: False
 debug_render: False
 decay_clipping: False
@@ -73,9 +74,10 @@ emb_viz_interval: 5
 encoder_dim: 64
 entropy_coef: 0.005
 env_name: CreateLevelPush-v0
+env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
 eps: 1e-05
 eval_interval: 50
-eval_num_processes: None
+eval_num_processes: 1
 eval_only: False
 eval_split: False
 eval_split_ratio: 0.5
@@ -109,7 +111,7 @@ kl_pen: None
 large_steps: 40
 latent_dim: 1
 load_all_data: False
-load_best_name: None
+load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
 load_dataset: True
 load_emb_logvar: True
 load_emb_model_file: None
@@ -126,6 +128,7 @@ max_grad_norm: 0.5
 max_grid_steps: 50
 max_std_width: 3.0
 mega_res_interval: 4
+multitask: True
 n_clusters: 10
 n_distributions: 1
 n_hidden_option: 3
@@ -138,7 +141,7 @@ no_diag: True
 no_frame_stack: False
 no_initial_state: False
 no_overlap_env: False
-no_test_eval: False
+no_test_eval: True
 no_var: False
 normalize_embs: False
 not_upto: True
@@ -146,7 +149,7 @@ num_distributions: 400
 num_env_steps: 60000000
 num_eval: 20
 num_mini_batch: 4
-num_processes: 1
+num_processes: 4
 num_render: None
 num_steps: 384
 num_z: 1
@@ -193,7 +196,7 @@ render_result_figures: False
 render_text: False
 reparam: True
 result_dir: ./data/results
-resume: False
+resume: True
 resume_emb_training: False
 reward_entropy_coef: 0.0
 rl_use_radam: False
diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
index 00a83d9..5cdd351 100644
--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
@@ -1 +1 @@
-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
\ No newline at end of file
+python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 16449 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 22299 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
\ No newline at end of file
diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
index b531690..13b575f 100644
--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
@@ -10764,3 +10764,5081 @@ index b41b6b9..e59734f 100755
          for (i, new) in enumerate(news):
              if new:
                  self.stacked_obs[i] = 0
+347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+index 93c497a..479a608 100644
+--- a/new-actions-rl/arguments.py
++++ b/new-actions-rl/arguments.py
+@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+ 
+     #### Multitask specific
+     parser.add_argument('--multitask', action='store_true', default=False)
++    parser.add_argument('--env-names', nargs='+', default=[])
+ 
+     #### Resume specific
+     parser.add_argument('--best-run', type=int, default=None)
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+index 00a83d9..37f6dc9 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+@@ -1 +1 @@
+-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+\ No newline at end of file
++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+\ No newline at end of file
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+index b531690..c4ff3d3 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+          for (i, new) in enumerate(news):
+              if new:
+                  self.stacked_obs[i] = 0
++347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+index d008c38..9b566fb 100755
+--- a/new-actions-rl/rlf/rl/envs.py
++++ b/new-actions-rl/rlf/rl/envs.py
+@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+ 
+     return _thunk
+ 
+-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+ 
+ def make_vec_envs(env_name,
+                   seed,
+@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+                   trans_fn,
+                   args,
+                   num_frame_stack=None,
+-                  set_eval=False,
+-                  env_names_input=None):
++                  set_eval=False):
+ 
+     if args.multitask and not set_eval:
+         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+                   set_eval=False,
+                   env_names_input=None):
+ 
++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     envs = [
+         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+-        for env_name in env_names
++        for env_name in candidate_env_names
+     ]
+ 
+     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+index 0d25c28..e45648c 100755
+--- a/new-actions-rl/rlf/rl/rl.py
++++ b/new-actions-rl/rlf/rl/rl.py
+@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+           end_update, lr_updates, args, test_args, checkpointer):
+ 
++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     if args.resume and start_update > 0:
+         start_update += 1
+ 
+@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+         log.start_interval_log()
+ 
+         if args.multitask:
+-            idx = np.random.randint(10000) % len(env_names)
++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+             envs = envs_bulk[idx]
+-            args.env_name = env_names[idx]
+-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++            args.env_name = actual_env_names[idx]
++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+         else:
+             envs = envs_bulk
+ 
+@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+                 train_eval_envs = []
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs = None,
+                                train_eval_envs = None)
+@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+             else:
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs[i],
+                                train_eval_envs[i])
+347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+index 93c497a..479a608 100644
+--- a/new-actions-rl/arguments.py
++++ b/new-actions-rl/arguments.py
+@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+ 
+     #### Multitask specific
+     parser.add_argument('--multitask', action='store_true', default=False)
++    parser.add_argument('--env-names', nargs='+', default=[])
+ 
+     #### Resume specific
+     parser.add_argument('--best-run', type=int, default=None)
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+index a55af28..9e018c4 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+@@ -1,11 +1,11 @@
+ Date and Time:
+-10/03/2024
+-16:36:27
++15/04/2024
++22:26:28
+ 
+ action_base_hidden_size: 128
+ action_base_output_size: 64
+ action_proj_dim: 1
+-action_random_sample: True
++action_random_sample: False
+ action_seg_loc: ./data/action_segs
+ action_set_size: 50
+ algo: ppo
+@@ -14,6 +14,7 @@ analysis_angle: None
+ analysis_emb: None
+ anti_alias_blur: 0.0
+ backup: None
++best_run: None
+ both_train_test: False
+ bound_effect: False
+ cat_kl_loss: None
+@@ -38,7 +39,7 @@ create_play_len: 7
+ create_play_run_steps: 3
+ create_sec_goal_reward: 2.0
+ create_target_reward: 1.0
+-cuda: False
++cuda: True
+ cuda_deterministic: False
+ debug_render: False
+ decay_clipping: False
+@@ -73,9 +74,10 @@ emb_viz_interval: 5
+ encoder_dim: 64
+ entropy_coef: 0.005
+ env_name: CreateLevelPush-v0
++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+ eps: 1e-05
+ eval_interval: 50
+-eval_num_processes: None
++eval_num_processes: 1
+ eval_only: False
+ eval_split: False
+ eval_split_ratio: 0.5
+@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+ max_grid_steps: 50
+ max_std_width: 3.0
+ mega_res_interval: 4
++multitask: True
+ n_clusters: 10
+ n_distributions: 1
+ n_hidden_option: 3
+@@ -138,7 +141,7 @@ no_diag: True
+ no_frame_stack: False
+ no_initial_state: False
+ no_overlap_env: False
+-no_test_eval: False
++no_test_eval: True
+ no_var: False
+ normalize_embs: False
+ not_upto: True
+@@ -146,7 +149,7 @@ num_distributions: 400
+ num_env_steps: 60000000
+ num_eval: 20
+ num_mini_batch: 4
+-num_processes: 1
++num_processes: 4
+ num_render: None
+ num_steps: 384
+ num_z: 1
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+index 00a83d9..cda9700 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+@@ -1 +1 @@
+-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+\ No newline at end of file
++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+\ No newline at end of file
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+index b531690..ebf34e4 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
+          for (i, new) in enumerate(news):
+              if new:
+                  self.stacked_obs[i] = 0
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..37f6dc9 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..c4ff3d3 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+index 953d419..edec780 100644
+--- a/new-actions-rl/rlf/main.py
++++ b/new-actions-rl/rlf/main.py
+@@ -39,7 +39,7 @@ def get_num_updates(args):
+     return num_updates, lr_updates
+ 
+ 
+-def get_fine_tune_run(load_name, env_name):
++def get_fine_tune_run(load_name, env_name, args):
+     from rlf.exp_mgr.eval import get_max_run
+     import wandb
+     import subprocess
+diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+index d008c38..9b566fb 100755
+--- a/new-actions-rl/rlf/rl/envs.py
++++ b/new-actions-rl/rlf/rl/envs.py
+@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+ 
+     return _thunk
+ 
+-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+ 
+ def make_vec_envs(env_name,
+                   seed,
+@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+                   trans_fn,
+                   args,
+                   num_frame_stack=None,
+-                  set_eval=False,
+-                  env_names_input=None):
++                  set_eval=False):
+ 
+     if args.multitask and not set_eval:
+         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+                   set_eval=False,
+                   env_names_input=None):
+ 
++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     envs = [
+         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+-        for env_name in env_names
++        for env_name in candidate_env_names
+     ]
+ 
+     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+index 0d25c28..e45648c 100755
+--- a/new-actions-rl/rlf/rl/rl.py
++++ b/new-actions-rl/rlf/rl/rl.py
+@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+           end_update, lr_updates, args, test_args, checkpointer):
+ 
++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     if args.resume and start_update > 0:
+         start_update += 1
+ 
+@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+         log.start_interval_log()
+ 
+         if args.multitask:
+-            idx = np.random.randint(10000) % len(env_names)
++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+             envs = envs_bulk[idx]
+-            args.env_name = env_names[idx]
+-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++            args.env_name = actual_env_names[idx]
++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+         else:
+             envs = envs_bulk
+ 
+@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+                 train_eval_envs = []
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs = None,
+                                train_eval_envs = None)
+@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+             else:
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs[i],
+                                train_eval_envs[i])
+347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+index 93c497a..479a608 100644
+--- a/new-actions-rl/arguments.py
++++ b/new-actions-rl/arguments.py
+@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+ 
+     #### Multitask specific
+     parser.add_argument('--multitask', action='store_true', default=False)
++    parser.add_argument('--env-names', nargs='+', default=[])
+ 
+     #### Resume specific
+     parser.add_argument('--best-run', type=int, default=None)
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+index a55af28..5c86c73 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+@@ -1,11 +1,11 @@
+ Date and Time:
+-10/03/2024
+-16:36:27
++16/04/2024
++11:03:41
+ 
+ action_base_hidden_size: 128
+ action_base_output_size: 64
+ action_proj_dim: 1
+-action_random_sample: True
++action_random_sample: False
+ action_seg_loc: ./data/action_segs
+ action_set_size: 50
+ algo: ppo
+@@ -14,6 +14,7 @@ analysis_angle: None
+ analysis_emb: None
+ anti_alias_blur: 0.0
+ backup: None
++best_run: 5799
+ both_train_test: False
+ bound_effect: False
+ cat_kl_loss: None
+@@ -38,7 +39,7 @@ create_play_len: 7
+ create_play_run_steps: 3
+ create_sec_goal_reward: 2.0
+ create_target_reward: 1.0
+-cuda: False
++cuda: True
+ cuda_deterministic: False
+ debug_render: False
+ decay_clipping: False
+@@ -73,9 +74,10 @@ emb_viz_interval: 5
+ encoder_dim: 64
+ entropy_coef: 0.005
+ env_name: CreateLevelPush-v0
++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+ eps: 1e-05
+ eval_interval: 50
+-eval_num_processes: None
++eval_num_processes: 1
+ eval_only: False
+ eval_split: False
+ eval_split_ratio: 0.5
+@@ -109,7 +111,7 @@ kl_pen: None
+ large_steps: 40
+ latent_dim: 1
+ load_all_data: False
+-load_best_name: None
++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
+ load_dataset: True
+ load_emb_logvar: True
+ load_emb_model_file: None
+@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+ max_grid_steps: 50
+ max_std_width: 3.0
+ mega_res_interval: 4
++multitask: True
+ n_clusters: 10
+ n_distributions: 1
+ n_hidden_option: 3
+@@ -138,7 +141,7 @@ no_diag: True
+ no_frame_stack: False
+ no_initial_state: False
+ no_overlap_env: False
+-no_test_eval: False
++no_test_eval: True
+ no_var: False
+ normalize_embs: False
+ not_upto: True
+@@ -146,7 +149,7 @@ num_distributions: 400
+ num_env_steps: 60000000
+ num_eval: 20
+ num_mini_batch: 4
+-num_processes: 1
++num_processes: 4
+ num_render: None
+ num_steps: 384
+ num_z: 1
+@@ -193,7 +196,7 @@ render_result_figures: False
+ render_text: False
+ reparam: True
+ result_dir: ./data/results
+-resume: False
++resume: True
+ resume_emb_training: False
+ reward_entropy_coef: 0.0
+ rl_use_radam: False
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+index 00a83d9..e3712f3 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+@@ -1 +1 @@
+-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+\ No newline at end of file
++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+\ No newline at end of file
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+index b531690..fde463e 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+@@ -10764,3 +10764,433 @@ index b41b6b9..e59734f 100755
+          for (i, new) in enumerate(news):
+              if new:
+                  self.stacked_obs[i] = 0
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..37f6dc9 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..c4ff3d3 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..9e018c4 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++15/04/2024
+++22:26:28
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: None
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..cda9700 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..ebf34e4 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..37f6dc9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..c4ff3d3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++index 953d419..edec780 100644
++--- a/new-actions-rl/rlf/main.py
+++++ b/new-actions-rl/rlf/main.py
++@@ -39,7 +39,7 @@ def get_num_updates(args):
++     return num_updates, lr_updates
++ 
++ 
++-def get_fine_tune_run(load_name, env_name):
+++def get_fine_tune_run(load_name, env_name, args):
++     from rlf.exp_mgr.eval import get_max_run
++     import wandb
++     import subprocess
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+index 953d419..edec780 100644
+--- a/new-actions-rl/rlf/main.py
++++ b/new-actions-rl/rlf/main.py
+@@ -39,7 +39,7 @@ def get_num_updates(args):
+     return num_updates, lr_updates
+ 
+ 
+-def get_fine_tune_run(load_name, env_name):
++def get_fine_tune_run(load_name, env_name, args):
+     from rlf.exp_mgr.eval import get_max_run
+     import wandb
+     import subprocess
+diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+index d008c38..9b566fb 100755
+--- a/new-actions-rl/rlf/rl/envs.py
++++ b/new-actions-rl/rlf/rl/envs.py
+@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+ 
+     return _thunk
+ 
+-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+ 
+ def make_vec_envs(env_name,
+                   seed,
+@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+                   trans_fn,
+                   args,
+                   num_frame_stack=None,
+-                  set_eval=False,
+-                  env_names_input=None):
++                  set_eval=False):
+ 
+     if args.multitask and not set_eval:
+         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+                   set_eval=False,
+                   env_names_input=None):
+ 
++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     envs = [
+         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+-        for env_name in env_names
++        for env_name in candidate_env_names
+     ]
+ 
+     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+index 0d25c28..e45648c 100755
+--- a/new-actions-rl/rlf/rl/rl.py
++++ b/new-actions-rl/rlf/rl/rl.py
+@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+           end_update, lr_updates, args, test_args, checkpointer):
+ 
++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     if args.resume and start_update > 0:
+         start_update += 1
+ 
+@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+         log.start_interval_log()
+ 
+         if args.multitask:
+-            idx = np.random.randint(10000) % len(env_names)
++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+             envs = envs_bulk[idx]
+-            args.env_name = env_names[idx]
+-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++            args.env_name = actual_env_names[idx]
++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+         else:
+             envs = envs_bulk
+ 
+@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+                 train_eval_envs = []
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs = None,
+                                train_eval_envs = None)
+@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+             else:
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs[i],
+                                train_eval_envs[i])
+347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+index 93c497a..479a608 100644
+--- a/new-actions-rl/arguments.py
++++ b/new-actions-rl/arguments.py
+@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+ 
+     #### Multitask specific
+     parser.add_argument('--multitask', action='store_true', default=False)
++    parser.add_argument('--env-names', nargs='+', default=[])
+ 
+     #### Resume specific
+     parser.add_argument('--best-run', type=int, default=None)
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+index a55af28..c06c75e 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+@@ -1,11 +1,11 @@
+ Date and Time:
+-10/03/2024
+-16:36:27
++16/04/2024
++14:42:37
+ 
+ action_base_hidden_size: 128
+ action_base_output_size: 64
+ action_proj_dim: 1
+-action_random_sample: True
++action_random_sample: False
+ action_seg_loc: ./data/action_segs
+ action_set_size: 50
+ algo: ppo
+@@ -14,6 +14,7 @@ analysis_angle: None
+ analysis_emb: None
+ anti_alias_blur: 0.0
+ backup: None
++best_run: 9349
+ both_train_test: False
+ bound_effect: False
+ cat_kl_loss: None
+@@ -38,7 +39,7 @@ create_play_len: 7
+ create_play_run_steps: 3
+ create_sec_goal_reward: 2.0
+ create_target_reward: 1.0
+-cuda: False
++cuda: True
+ cuda_deterministic: False
+ debug_render: False
+ decay_clipping: False
+@@ -73,9 +74,10 @@ emb_viz_interval: 5
+ encoder_dim: 64
+ entropy_coef: 0.005
+ env_name: CreateLevelPush-v0
++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+ eps: 1e-05
+ eval_interval: 50
+-eval_num_processes: None
++eval_num_processes: 1
+ eval_only: False
+ eval_split: False
+ eval_split_ratio: 0.5
+@@ -109,7 +111,7 @@ kl_pen: None
+ large_steps: 40
+ latent_dim: 1
+ load_all_data: False
+-load_best_name: None
++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
+ load_dataset: True
+ load_emb_logvar: True
+ load_emb_model_file: None
+@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+ max_grid_steps: 50
+ max_std_width: 3.0
+ mega_res_interval: 4
++multitask: True
+ n_clusters: 10
+ n_distributions: 1
+ n_hidden_option: 3
+@@ -138,7 +141,7 @@ no_diag: True
+ no_frame_stack: False
+ no_initial_state: False
+ no_overlap_env: False
+-no_test_eval: False
++no_test_eval: True
+ no_var: False
+ normalize_embs: False
+ not_upto: True
+@@ -146,7 +149,7 @@ num_distributions: 400
+ num_env_steps: 60000000
+ num_eval: 20
+ num_mini_batch: 4
+-num_processes: 1
++num_processes: 4
+ num_render: None
+ num_steps: 384
+ num_z: 1
+@@ -193,7 +196,7 @@ render_result_figures: False
+ render_text: False
+ reparam: True
+ result_dir: ./data/results
+-resume: False
++resume: True
+ resume_emb_training: False
+ reward_entropy_coef: 0.0
+ rl_use_radam: False
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+index 00a83d9..ec24bd5 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+@@ -1 +1 @@
+-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+\ No newline at end of file
++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+\ No newline at end of file
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+index b531690..6d6f339 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+@@ -10764,3 +10764,1081 @@ index b41b6b9..e59734f 100755
+          for (i, new) in enumerate(news):
+              if new:
+                  self.stacked_obs[i] = 0
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..37f6dc9 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..c4ff3d3 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..9e018c4 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++15/04/2024
+++22:26:28
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: None
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..cda9700 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..ebf34e4 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..37f6dc9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..c4ff3d3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++index 953d419..edec780 100644
++--- a/new-actions-rl/rlf/main.py
+++++ b/new-actions-rl/rlf/main.py
++@@ -39,7 +39,7 @@ def get_num_updates(args):
++     return num_updates, lr_updates
++ 
++ 
++-def get_fine_tune_run(load_name, env_name):
+++def get_fine_tune_run(load_name, env_name, args):
++     from rlf.exp_mgr.eval import get_max_run
++     import wandb
++     import subprocess
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..5c86c73 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++16/04/2024
+++11:03:41
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: 5799
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -109,7 +111,7 @@ kl_pen: None
++ large_steps: 40
++ latent_dim: 1
++ load_all_data: False
++-load_best_name: None
+++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
++ load_dataset: True
++ load_emb_logvar: True
++ load_emb_model_file: None
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++@@ -193,7 +196,7 @@ render_result_figures: False
++ render_text: False
++ reparam: True
++ result_dir: ./data/results
++-resume: False
+++resume: True
++ resume_emb_training: False
++ reward_entropy_coef: 0.0
++ rl_use_radam: False
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..e3712f3 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..fde463e 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,433 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..37f6dc9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..c4ff3d3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..9e018c4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++15/04/2024
++++22:26:28
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: None
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..cda9700 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..ebf34e4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..37f6dc9 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..c4ff3d3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++index 953d419..edec780 100644
+++--- a/new-actions-rl/rlf/main.py
++++++ b/new-actions-rl/rlf/main.py
+++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++     return num_updates, lr_updates
+++ 
+++ 
+++-def get_fine_tune_run(load_name, env_name):
++++def get_fine_tune_run(load_name, env_name, args):
+++     from rlf.exp_mgr.eval import get_max_run
+++     import wandb
+++     import subprocess
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++index 953d419..edec780 100644
++--- a/new-actions-rl/rlf/main.py
+++++ b/new-actions-rl/rlf/main.py
++@@ -39,7 +39,7 @@ def get_num_updates(args):
++     return num_updates, lr_updates
++ 
++ 
++-def get_fine_tune_run(load_name, env_name):
+++def get_fine_tune_run(load_name, env_name, args):
++     from rlf.exp_mgr.eval import get_max_run
++     import wandb
++     import subprocess
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+index 953d419..edec780 100644
+--- a/new-actions-rl/rlf/main.py
++++ b/new-actions-rl/rlf/main.py
+@@ -39,7 +39,7 @@ def get_num_updates(args):
+     return num_updates, lr_updates
+ 
+ 
+-def get_fine_tune_run(load_name, env_name):
++def get_fine_tune_run(load_name, env_name, args):
+     from rlf.exp_mgr.eval import get_max_run
+     import wandb
+     import subprocess
+diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+index d008c38..9b566fb 100755
+--- a/new-actions-rl/rlf/rl/envs.py
++++ b/new-actions-rl/rlf/rl/envs.py
+@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+ 
+     return _thunk
+ 
+-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+ 
+ def make_vec_envs(env_name,
+                   seed,
+@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+                   trans_fn,
+                   args,
+                   num_frame_stack=None,
+-                  set_eval=False,
+-                  env_names_input=None):
++                  set_eval=False):
+ 
+     if args.multitask and not set_eval:
+         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+                   set_eval=False,
+                   env_names_input=None):
+ 
++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     envs = [
+         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+-        for env_name in env_names
++        for env_name in candidate_env_names
+     ]
+ 
+     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+index 0d25c28..e45648c 100755
+--- a/new-actions-rl/rlf/rl/rl.py
++++ b/new-actions-rl/rlf/rl/rl.py
+@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+           end_update, lr_updates, args, test_args, checkpointer):
+ 
++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     if args.resume and start_update > 0:
+         start_update += 1
+ 
+@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+         log.start_interval_log()
+ 
+         if args.multitask:
+-            idx = np.random.randint(10000) % len(env_names)
++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+             envs = envs_bulk[idx]
+-            args.env_name = env_names[idx]
+-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++            args.env_name = actual_env_names[idx]
++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+         else:
+             envs = envs_bulk
+ 
+@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+                 train_eval_envs = []
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs = None,
+                                train_eval_envs = None)
+@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+             else:
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs[i],
+                                train_eval_envs[i])
+347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+index 93c497a..479a608 100644
+--- a/new-actions-rl/arguments.py
++++ b/new-actions-rl/arguments.py
+@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+ 
+     #### Multitask specific
+     parser.add_argument('--multitask', action='store_true', default=False)
++    parser.add_argument('--env-names', nargs='+', default=[])
+ 
+     #### Resume specific
+     parser.add_argument('--best-run', type=int, default=None)
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+index a55af28..85c20f2 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+@@ -1,11 +1,11 @@
+ Date and Time:
+-10/03/2024
+-16:36:27
++16/04/2024
++18:38:56
+ 
+ action_base_hidden_size: 128
+ action_base_output_size: 64
+ action_proj_dim: 1
+-action_random_sample: True
++action_random_sample: False
+ action_seg_loc: ./data/action_segs
+ action_set_size: 50
+ algo: ppo
+@@ -14,6 +14,7 @@ analysis_angle: None
+ analysis_emb: None
+ anti_alias_blur: 0.0
+ backup: None
++best_run: 12899
+ both_train_test: False
+ bound_effect: False
+ cat_kl_loss: None
+@@ -38,7 +39,7 @@ create_play_len: 7
+ create_play_run_steps: 3
+ create_sec_goal_reward: 2.0
+ create_target_reward: 1.0
+-cuda: False
++cuda: True
+ cuda_deterministic: False
+ debug_render: False
+ decay_clipping: False
+@@ -73,9 +74,10 @@ emb_viz_interval: 5
+ encoder_dim: 64
+ entropy_coef: 0.005
+ env_name: CreateLevelPush-v0
++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+ eps: 1e-05
+ eval_interval: 50
+-eval_num_processes: None
++eval_num_processes: 1
+ eval_only: False
+ eval_split: False
+ eval_split_ratio: 0.5
+@@ -109,7 +111,7 @@ kl_pen: None
+ large_steps: 40
+ latent_dim: 1
+ load_all_data: False
+-load_best_name: None
++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
+ load_dataset: True
+ load_emb_logvar: True
+ load_emb_model_file: None
+@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+ max_grid_steps: 50
+ max_std_width: 3.0
+ mega_res_interval: 4
++multitask: True
+ n_clusters: 10
+ n_distributions: 1
+ n_hidden_option: 3
+@@ -138,7 +141,7 @@ no_diag: True
+ no_frame_stack: False
+ no_initial_state: False
+ no_overlap_env: False
+-no_test_eval: False
++no_test_eval: True
+ no_var: False
+ normalize_embs: False
+ not_upto: True
+@@ -146,7 +149,7 @@ num_distributions: 400
+ num_env_steps: 60000000
+ num_eval: 20
+ num_mini_batch: 4
+-num_processes: 1
++num_processes: 4
+ num_render: None
+ num_steps: 384
+ num_z: 1
+@@ -193,7 +196,7 @@ render_result_figures: False
+ render_text: False
+ reparam: True
+ result_dir: ./data/results
+-resume: False
++resume: True
+ resume_emb_training: False
+ reward_entropy_coef: 0.0
+ rl_use_radam: False
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+index 00a83d9..63b1f15 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+@@ -1 +1 @@
+-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+\ No newline at end of file
++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 16449 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+\ No newline at end of file
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+index b531690..815f948 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+@@ -10764,3 +10764,2377 @@ index b41b6b9..e59734f 100755
+          for (i, new) in enumerate(news):
+              if new:
+                  self.stacked_obs[i] = 0
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..37f6dc9 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..c4ff3d3 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..9e018c4 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++15/04/2024
+++22:26:28
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: None
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..cda9700 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..ebf34e4 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..37f6dc9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..c4ff3d3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++index 953d419..edec780 100644
++--- a/new-actions-rl/rlf/main.py
+++++ b/new-actions-rl/rlf/main.py
++@@ -39,7 +39,7 @@ def get_num_updates(args):
++     return num_updates, lr_updates
++ 
++ 
++-def get_fine_tune_run(load_name, env_name):
+++def get_fine_tune_run(load_name, env_name, args):
++     from rlf.exp_mgr.eval import get_max_run
++     import wandb
++     import subprocess
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..5c86c73 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++16/04/2024
+++11:03:41
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: 5799
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -109,7 +111,7 @@ kl_pen: None
++ large_steps: 40
++ latent_dim: 1
++ load_all_data: False
++-load_best_name: None
+++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
++ load_dataset: True
++ load_emb_logvar: True
++ load_emb_model_file: None
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++@@ -193,7 +196,7 @@ render_result_figures: False
++ render_text: False
++ reparam: True
++ result_dir: ./data/results
++-resume: False
+++resume: True
++ resume_emb_training: False
++ reward_entropy_coef: 0.0
++ rl_use_radam: False
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..e3712f3 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..fde463e 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,433 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..37f6dc9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..c4ff3d3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..9e018c4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++15/04/2024
++++22:26:28
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: None
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..cda9700 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..ebf34e4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..37f6dc9 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..c4ff3d3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++index 953d419..edec780 100644
+++--- a/new-actions-rl/rlf/main.py
++++++ b/new-actions-rl/rlf/main.py
+++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++     return num_updates, lr_updates
+++ 
+++ 
+++-def get_fine_tune_run(load_name, env_name):
++++def get_fine_tune_run(load_name, env_name, args):
+++     from rlf.exp_mgr.eval import get_max_run
+++     import wandb
+++     import subprocess
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++index 953d419..edec780 100644
++--- a/new-actions-rl/rlf/main.py
+++++ b/new-actions-rl/rlf/main.py
++@@ -39,7 +39,7 @@ def get_num_updates(args):
++     return num_updates, lr_updates
++ 
++ 
++-def get_fine_tune_run(load_name, env_name):
+++def get_fine_tune_run(load_name, env_name, args):
++     from rlf.exp_mgr.eval import get_max_run
++     import wandb
++     import subprocess
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..c06c75e 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++16/04/2024
+++14:42:37
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: 9349
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -109,7 +111,7 @@ kl_pen: None
++ large_steps: 40
++ latent_dim: 1
++ load_all_data: False
++-load_best_name: None
+++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
++ load_dataset: True
++ load_emb_logvar: True
++ load_emb_model_file: None
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++@@ -193,7 +196,7 @@ render_result_figures: False
++ render_text: False
++ reparam: True
++ result_dir: ./data/results
++-resume: False
+++resume: True
++ resume_emb_training: False
++ reward_entropy_coef: 0.0
++ rl_use_radam: False
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..ec24bd5 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..6d6f339 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,1081 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..37f6dc9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..c4ff3d3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..9e018c4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++15/04/2024
++++22:26:28
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: None
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..cda9700 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..ebf34e4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..37f6dc9 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..c4ff3d3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++index 953d419..edec780 100644
+++--- a/new-actions-rl/rlf/main.py
++++++ b/new-actions-rl/rlf/main.py
+++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++     return num_updates, lr_updates
+++ 
+++ 
+++-def get_fine_tune_run(load_name, env_name):
++++def get_fine_tune_run(load_name, env_name, args):
+++     from rlf.exp_mgr.eval import get_max_run
+++     import wandb
+++     import subprocess
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..5c86c73 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++16/04/2024
++++11:03:41
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: 5799
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -109,7 +111,7 @@ kl_pen: None
+++ large_steps: 40
+++ latent_dim: 1
+++ load_all_data: False
+++-load_best_name: None
++++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
+++ load_dataset: True
+++ load_emb_logvar: True
+++ load_emb_model_file: None
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++@@ -193,7 +196,7 @@ render_result_figures: False
+++ render_text: False
+++ reparam: True
+++ result_dir: ./data/results
+++-resume: False
++++resume: True
+++ resume_emb_training: False
+++ reward_entropy_coef: 0.0
+++ rl_use_radam: False
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..e3712f3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..fde463e 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,433 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..37f6dc9 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..c4ff3d3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++index a55af28..9e018c4 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++@@ -1,11 +1,11 @@
++++ Date and Time:
++++-10/03/2024
++++-16:36:27
+++++15/04/2024
+++++22:26:28
++++ 
++++ action_base_hidden_size: 128
++++ action_base_output_size: 64
++++ action_proj_dim: 1
++++-action_random_sample: True
+++++action_random_sample: False
++++ action_seg_loc: ./data/action_segs
++++ action_set_size: 50
++++ algo: ppo
++++@@ -14,6 +14,7 @@ analysis_angle: None
++++ analysis_emb: None
++++ anti_alias_blur: 0.0
++++ backup: None
+++++best_run: None
++++ both_train_test: False
++++ bound_effect: False
++++ cat_kl_loss: None
++++@@ -38,7 +39,7 @@ create_play_len: 7
++++ create_play_run_steps: 3
++++ create_sec_goal_reward: 2.0
++++ create_target_reward: 1.0
++++-cuda: False
+++++cuda: True
++++ cuda_deterministic: False
++++ debug_render: False
++++ decay_clipping: False
++++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++++ encoder_dim: 64
++++ entropy_coef: 0.005
++++ env_name: CreateLevelPush-v0
+++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++++ eps: 1e-05
++++ eval_interval: 50
++++-eval_num_processes: None
+++++eval_num_processes: 1
++++ eval_only: False
++++ eval_split: False
++++ eval_split_ratio: 0.5
++++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++++ max_grid_steps: 50
++++ max_std_width: 3.0
++++ mega_res_interval: 4
+++++multitask: True
++++ n_clusters: 10
++++ n_distributions: 1
++++ n_hidden_option: 3
++++@@ -138,7 +141,7 @@ no_diag: True
++++ no_frame_stack: False
++++ no_initial_state: False
++++ no_overlap_env: False
++++-no_test_eval: False
+++++no_test_eval: True
++++ no_var: False
++++ normalize_embs: False
++++ not_upto: True
++++@@ -146,7 +149,7 @@ num_distributions: 400
++++ num_env_steps: 60000000
++++ num_eval: 20
++++ num_mini_batch: 4
++++-num_processes: 1
+++++num_processes: 4
++++ num_render: None
++++ num_steps: 384
++++ num_z: 1
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..cda9700 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..ebf34e4 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++++index 93c497a..479a608 100644
+++++--- a/new-actions-rl/arguments.py
++++++++ b/new-actions-rl/arguments.py
+++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++++ 
+++++     #### Multitask specific
+++++     parser.add_argument('--multitask', action='store_true', default=False)
++++++    parser.add_argument('--env-names', nargs='+', default=[])
+++++ 
+++++     #### Resume specific
+++++     parser.add_argument('--best-run', type=int, default=None)
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++index 00a83d9..37f6dc9 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++@@ -1 +1 @@
+++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++++\ No newline at end of file
++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++++\ No newline at end of file
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++index b531690..c4ff3d3 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++++          for (i, new) in enumerate(news):
+++++              if new:
+++++                  self.stacked_obs[i] = 0
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++++index d008c38..9b566fb 100755
+++++--- a/new-actions-rl/rlf/rl/envs.py
++++++++ b/new-actions-rl/rlf/rl/envs.py
+++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++++ 
+++++     return _thunk
+++++ 
+++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++++ 
+++++ def make_vec_envs(env_name,
+++++                   seed,
+++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++++                   trans_fn,
+++++                   args,
+++++                   num_frame_stack=None,
+++++-                  set_eval=False,
+++++-                  env_names_input=None):
++++++                  set_eval=False):
+++++ 
+++++     if args.multitask and not set_eval:
+++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++++                   set_eval=False,
+++++                   env_names_input=None):
+++++ 
++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     envs = [
+++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++++-        for env_name in env_names
++++++        for env_name in candidate_env_names
+++++     ]
+++++ 
+++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++++index 0d25c28..e45648c 100755
+++++--- a/new-actions-rl/rlf/rl/rl.py
++++++++ b/new-actions-rl/rlf/rl/rl.py
+++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++           end_update, lr_updates, args, test_args, checkpointer):
+++++ 
++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     if args.resume and start_update > 0:
+++++         start_update += 1
+++++ 
+++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++         log.start_interval_log()
+++++ 
+++++         if args.multitask:
+++++-            idx = np.random.randint(10000) % len(env_names)
++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++++             envs = envs_bulk[idx]
+++++-            args.env_name = env_names[idx]
+++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++++            args.env_name = actual_env_names[idx]
++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++++         else:
+++++             envs = envs_bulk
+++++ 
+++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++                 train_eval_envs = []
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++++                                train_eval_envs = None)
+++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++             else:
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++++                                train_eval_envs[i])
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++++index 953d419..edec780 100644
++++--- a/new-actions-rl/rlf/main.py
+++++++ b/new-actions-rl/rlf/main.py
++++@@ -39,7 +39,7 @@ def get_num_updates(args):
++++     return num_updates, lr_updates
++++ 
++++ 
++++-def get_fine_tune_run(load_name, env_name):
+++++def get_fine_tune_run(load_name, env_name, args):
++++     from rlf.exp_mgr.eval import get_max_run
++++     import wandb
++++     import subprocess
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++index 953d419..edec780 100644
+++--- a/new-actions-rl/rlf/main.py
++++++ b/new-actions-rl/rlf/main.py
+++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++     return num_updates, lr_updates
+++ 
+++ 
+++-def get_fine_tune_run(load_name, env_name):
++++def get_fine_tune_run(load_name, env_name, args):
+++     from rlf.exp_mgr.eval import get_max_run
+++     import wandb
+++     import subprocess
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++index 953d419..edec780 100644
++--- a/new-actions-rl/rlf/main.py
+++++ b/new-actions-rl/rlf/main.py
++@@ -39,7 +39,7 @@ def get_num_updates(args):
++     return num_updates, lr_updates
++ 
++ 
++-def get_fine_tune_run(load_name, env_name):
+++def get_fine_tune_run(load_name, env_name, args):
++     from rlf.exp_mgr.eval import get_max_run
++     import wandb
++     import subprocess
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+index 953d419..edec780 100644
+--- a/new-actions-rl/rlf/main.py
++++ b/new-actions-rl/rlf/main.py
+@@ -39,7 +39,7 @@ def get_num_updates(args):
+     return num_updates, lr_updates
+ 
+ 
+-def get_fine_tune_run(load_name, env_name):
++def get_fine_tune_run(load_name, env_name, args):
+     from rlf.exp_mgr.eval import get_max_run
+     import wandb
+     import subprocess
+diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+index d008c38..9b566fb 100755
+--- a/new-actions-rl/rlf/rl/envs.py
++++ b/new-actions-rl/rlf/rl/envs.py
+@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+ 
+     return _thunk
+ 
+-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+ 
+ def make_vec_envs(env_name,
+                   seed,
+@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+                   trans_fn,
+                   args,
+                   num_frame_stack=None,
+-                  set_eval=False,
+-                  env_names_input=None):
++                  set_eval=False):
+ 
+     if args.multitask and not set_eval:
+         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+                   set_eval=False,
+                   env_names_input=None):
+ 
++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     envs = [
+         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+-        for env_name in env_names
++        for env_name in candidate_env_names
+     ]
+ 
+     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+index 0d25c28..e45648c 100755
+--- a/new-actions-rl/rlf/rl/rl.py
++++ b/new-actions-rl/rlf/rl/rl.py
+@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+           end_update, lr_updates, args, test_args, checkpointer):
+ 
++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     if args.resume and start_update > 0:
+         start_update += 1
+ 
+@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+         log.start_interval_log()
+ 
+         if args.multitask:
+-            idx = np.random.randint(10000) % len(env_names)
++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+             envs = envs_bulk[idx]
+-            args.env_name = env_names[idx]
+-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++            args.env_name = actual_env_names[idx]
++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+         else:
+             envs = envs_bulk
+ 
+@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+                 train_eval_envs = []
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs = None,
+                                train_eval_envs = None)
+@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+             else:
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs[i],
+                                train_eval_envs[i])
+347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+index 93c497a..479a608 100644
+--- a/new-actions-rl/arguments.py
++++ b/new-actions-rl/arguments.py
+@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+ 
+     #### Multitask specific
+     parser.add_argument('--multitask', action='store_true', default=False)
++    parser.add_argument('--env-names', nargs='+', default=[])
+ 
+     #### Resume specific
+     parser.add_argument('--best-run', type=int, default=None)
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+index a55af28..471a8c9 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+@@ -1,11 +1,11 @@
+ Date and Time:
+-10/03/2024
+-16:36:27
++17/04/2024
++01:03:09
+ 
+ action_base_hidden_size: 128
+ action_base_output_size: 64
+ action_proj_dim: 1
+-action_random_sample: True
++action_random_sample: False
+ action_seg_loc: ./data/action_segs
+ action_set_size: 50
+ algo: ppo
+@@ -14,6 +14,7 @@ analysis_angle: None
+ analysis_emb: None
+ anti_alias_blur: 0.0
+ backup: None
++best_run: 16449
+ both_train_test: False
+ bound_effect: False
+ cat_kl_loss: None
+@@ -38,7 +39,7 @@ create_play_len: 7
+ create_play_run_steps: 3
+ create_sec_goal_reward: 2.0
+ create_target_reward: 1.0
+-cuda: False
++cuda: True
+ cuda_deterministic: False
+ debug_render: False
+ decay_clipping: False
+@@ -73,9 +74,10 @@ emb_viz_interval: 5
+ encoder_dim: 64
+ entropy_coef: 0.005
+ env_name: CreateLevelPush-v0
++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+ eps: 1e-05
+ eval_interval: 50
+-eval_num_processes: None
++eval_num_processes: 1
+ eval_only: False
+ eval_split: False
+ eval_split_ratio: 0.5
+@@ -109,7 +111,7 @@ kl_pen: None
+ large_steps: 40
+ latent_dim: 1
+ load_all_data: False
+-load_best_name: None
++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
+ load_dataset: True
+ load_emb_logvar: True
+ load_emb_model_file: None
+@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+ max_grid_steps: 50
+ max_std_width: 3.0
+ mega_res_interval: 4
++multitask: True
+ n_clusters: 10
+ n_distributions: 1
+ n_hidden_option: 3
+@@ -138,7 +141,7 @@ no_diag: True
+ no_frame_stack: False
+ no_initial_state: False
+ no_overlap_env: False
+-no_test_eval: False
++no_test_eval: True
+ no_var: False
+ normalize_embs: False
+ not_upto: True
+@@ -146,7 +149,7 @@ num_distributions: 400
+ num_env_steps: 60000000
+ num_eval: 20
+ num_mini_batch: 4
+-num_processes: 1
++num_processes: 4
+ num_render: None
+ num_steps: 384
+ num_z: 1
+@@ -193,7 +196,7 @@ render_result_figures: False
+ render_text: False
+ reparam: True
+ result_dir: ./data/results
+-resume: False
++resume: True
+ resume_emb_training: False
+ reward_entropy_coef: 0.0
+ rl_use_radam: False
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+index 00a83d9..5cdd351 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+@@ -1 +1 @@
+-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+\ No newline at end of file
++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 16449 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v
\ No newline at end of file
diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
index 953d419..edec780 100644
--- a/new-actions-rl/rlf/main.py
+++ b/new-actions-rl/rlf/main.py
@@ -39,7 +39,7 @@ def get_num_updates(args):
     return num_updates, lr_updates
 
 
-def get_fine_tune_run(load_name, env_name):
+def get_fine_tune_run(load_name, env_name, args):
     from rlf.exp_mgr.eval import get_max_run
     import wandb
     import subprocess
diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
index d008c38..9b566fb 100755
--- a/new-actions-rl/rlf/rl/envs.py
+++ b/new-actions-rl/rlf/rl/envs.py
@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
 
     return _thunk
 
-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
 
 def make_vec_envs(env_name,
                   seed,
@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
                   trans_fn,
                   args,
                   num_frame_stack=None,
-                  set_eval=False,
-                  env_names_input=None):
+                  set_eval=False):
 
     if args.multitask and not set_eval:
         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
                   set_eval=False,
                   env_names_input=None):
 
+    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
     envs = [
         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
-        for env_name in env_names
+        for env_name in candidate_env_names
     ]
 
     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
index 0d25c28..e45648c 100755
--- a/new-actions-rl/rlf/rl/rl.py
+++ b/new-actions-rl/rlf/rl/rl.py
@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
 def train(envs_bulk, rollouts, policy, updater, log, start_update,
           end_update, lr_updates, args, test_args, checkpointer):
 
+    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
     if args.resume and start_update > 0:
         start_update += 1
 
@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
         log.start_interval_log()
 
         if args.multitask:
-            idx = np.random.randint(10000) % len(env_names)
+            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
             envs = envs_bulk[idx]
-            args.env_name = env_names[idx]
-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+            args.env_name = actual_env_names[idx]
+            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
         else:
             envs = envs_bulk
 
@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
                 train_eval_envs = []
                 for i in range(len(envs_bulk)):
                     eval_envs = envs_bulk[i]
-                    args.env_name = env_names[i]
-                    print(f"evaluating for env {env_names[i]}")
+                    args.env_name = actual_env_names[i]
+                    print(f"evaluating for env {actual_env_names[i]}")
                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
                                test_args, log, j, total_num_steps, test_eval_envs = None,
                                train_eval_envs = None)
@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
             else:
                 for i in range(len(envs_bulk)):
                     eval_envs = envs_bulk[i]
-                    args.env_name = env_names[i]
-                    print(f"evaluating for env {env_names[i]}")
+                    args.env_name = actual_env_names[i]
+                    print(f"evaluating for env {actual_env_names[i]}")
                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
                                test_args, log, j, total_num_steps, test_eval_envs[i],
                                train_eval_envs[i])
347a0e6efbab5459e5d4db3b55c040154efa2886
diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
index 93c497a..479a608 100644
--- a/new-actions-rl/arguments.py
+++ b/new-actions-rl/arguments.py
@@ -616,6 +616,7 @@ def get_args(arg_str=None):
 
     #### Multitask specific
     parser.add_argument('--multitask', action='store_true', default=False)
+    parser.add_argument('--env-names', nargs='+', default=[])
 
     #### Resume specific
     parser.add_argument('--best-run', type=int, default=None)
diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
index a55af28..e8cd4ed 100644
--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
@@ -1,11 +1,11 @@
 Date and Time:
-10/03/2024
-16:36:27
+17/04/2024
+12:09:34
 
 action_base_hidden_size: 128
 action_base_output_size: 64
 action_proj_dim: 1
-action_random_sample: True
+action_random_sample: False
 action_seg_loc: ./data/action_segs
 action_set_size: 50
 algo: ppo
@@ -14,6 +14,7 @@ analysis_angle: None
 analysis_emb: None
 anti_alias_blur: 0.0
 backup: None
+best_run: 22299
 both_train_test: False
 bound_effect: False
 cat_kl_loss: None
@@ -38,7 +39,7 @@ create_play_len: 7
 create_play_run_steps: 3
 create_sec_goal_reward: 2.0
 create_target_reward: 1.0
-cuda: False
+cuda: True
 cuda_deterministic: False
 debug_render: False
 decay_clipping: False
@@ -73,9 +74,10 @@ emb_viz_interval: 5
 encoder_dim: 64
 entropy_coef: 0.005
 env_name: CreateLevelPush-v0
+env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
 eps: 1e-05
 eval_interval: 50
-eval_num_processes: None
+eval_num_processes: 1
 eval_only: False
 eval_split: False
 eval_split_ratio: 0.5
@@ -109,7 +111,7 @@ kl_pen: None
 large_steps: 40
 latent_dim: 1
 load_all_data: False
-load_best_name: None
+load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
 load_dataset: True
 load_emb_logvar: True
 load_emb_model_file: None
@@ -126,6 +128,7 @@ max_grad_norm: 0.5
 max_grid_steps: 50
 max_std_width: 3.0
 mega_res_interval: 4
+multitask: True
 n_clusters: 10
 n_distributions: 1
 n_hidden_option: 3
@@ -138,7 +141,7 @@ no_diag: True
 no_frame_stack: False
 no_initial_state: False
 no_overlap_env: False
-no_test_eval: False
+no_test_eval: True
 no_var: False
 normalize_embs: False
 not_upto: True
@@ -146,7 +149,7 @@ num_distributions: 400
 num_env_steps: 60000000
 num_eval: 20
 num_mini_batch: 4
-num_processes: 1
+num_processes: 4
 num_render: None
 num_steps: 384
 num_z: 1
@@ -193,7 +196,7 @@ render_result_figures: False
 render_text: False
 reparam: True
 result_dir: ./data/results
-resume: False
+resume: True
 resume_emb_training: False
 reward_entropy_coef: 0.0
 rl_use_radam: False
diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
index 00a83d9..c83c000 100644
--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
@@ -1 +1 @@
-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
\ No newline at end of file
+python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 16449 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 22299 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 28099 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
\ No newline at end of file
diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
index b531690..4605e4d 100644
--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
@@ -10764,3 +10764,10378 @@ index b41b6b9..e59734f 100755
          for (i, new) in enumerate(news):
              if new:
                  self.stacked_obs[i] = 0
+347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+index 93c497a..479a608 100644
+--- a/new-actions-rl/arguments.py
++++ b/new-actions-rl/arguments.py
+@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+ 
+     #### Multitask specific
+     parser.add_argument('--multitask', action='store_true', default=False)
++    parser.add_argument('--env-names', nargs='+', default=[])
+ 
+     #### Resume specific
+     parser.add_argument('--best-run', type=int, default=None)
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+index 00a83d9..37f6dc9 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+@@ -1 +1 @@
+-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+\ No newline at end of file
++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+\ No newline at end of file
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+index b531690..c4ff3d3 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+          for (i, new) in enumerate(news):
+              if new:
+                  self.stacked_obs[i] = 0
++347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+index d008c38..9b566fb 100755
+--- a/new-actions-rl/rlf/rl/envs.py
++++ b/new-actions-rl/rlf/rl/envs.py
+@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+ 
+     return _thunk
+ 
+-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+ 
+ def make_vec_envs(env_name,
+                   seed,
+@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+                   trans_fn,
+                   args,
+                   num_frame_stack=None,
+-                  set_eval=False,
+-                  env_names_input=None):
++                  set_eval=False):
+ 
+     if args.multitask and not set_eval:
+         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+                   set_eval=False,
+                   env_names_input=None):
+ 
++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     envs = [
+         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+-        for env_name in env_names
++        for env_name in candidate_env_names
+     ]
+ 
+     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+index 0d25c28..e45648c 100755
+--- a/new-actions-rl/rlf/rl/rl.py
++++ b/new-actions-rl/rlf/rl/rl.py
+@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+           end_update, lr_updates, args, test_args, checkpointer):
+ 
++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     if args.resume and start_update > 0:
+         start_update += 1
+ 
+@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+         log.start_interval_log()
+ 
+         if args.multitask:
+-            idx = np.random.randint(10000) % len(env_names)
++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+             envs = envs_bulk[idx]
+-            args.env_name = env_names[idx]
+-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++            args.env_name = actual_env_names[idx]
++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+         else:
+             envs = envs_bulk
+ 
+@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+                 train_eval_envs = []
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs = None,
+                                train_eval_envs = None)
+@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+             else:
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs[i],
+                                train_eval_envs[i])
+347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+index 93c497a..479a608 100644
+--- a/new-actions-rl/arguments.py
++++ b/new-actions-rl/arguments.py
+@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+ 
+     #### Multitask specific
+     parser.add_argument('--multitask', action='store_true', default=False)
++    parser.add_argument('--env-names', nargs='+', default=[])
+ 
+     #### Resume specific
+     parser.add_argument('--best-run', type=int, default=None)
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+index a55af28..9e018c4 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+@@ -1,11 +1,11 @@
+ Date and Time:
+-10/03/2024
+-16:36:27
++15/04/2024
++22:26:28
+ 
+ action_base_hidden_size: 128
+ action_base_output_size: 64
+ action_proj_dim: 1
+-action_random_sample: True
++action_random_sample: False
+ action_seg_loc: ./data/action_segs
+ action_set_size: 50
+ algo: ppo
+@@ -14,6 +14,7 @@ analysis_angle: None
+ analysis_emb: None
+ anti_alias_blur: 0.0
+ backup: None
++best_run: None
+ both_train_test: False
+ bound_effect: False
+ cat_kl_loss: None
+@@ -38,7 +39,7 @@ create_play_len: 7
+ create_play_run_steps: 3
+ create_sec_goal_reward: 2.0
+ create_target_reward: 1.0
+-cuda: False
++cuda: True
+ cuda_deterministic: False
+ debug_render: False
+ decay_clipping: False
+@@ -73,9 +74,10 @@ emb_viz_interval: 5
+ encoder_dim: 64
+ entropy_coef: 0.005
+ env_name: CreateLevelPush-v0
++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+ eps: 1e-05
+ eval_interval: 50
+-eval_num_processes: None
++eval_num_processes: 1
+ eval_only: False
+ eval_split: False
+ eval_split_ratio: 0.5
+@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+ max_grid_steps: 50
+ max_std_width: 3.0
+ mega_res_interval: 4
++multitask: True
+ n_clusters: 10
+ n_distributions: 1
+ n_hidden_option: 3
+@@ -138,7 +141,7 @@ no_diag: True
+ no_frame_stack: False
+ no_initial_state: False
+ no_overlap_env: False
+-no_test_eval: False
++no_test_eval: True
+ no_var: False
+ normalize_embs: False
+ not_upto: True
+@@ -146,7 +149,7 @@ num_distributions: 400
+ num_env_steps: 60000000
+ num_eval: 20
+ num_mini_batch: 4
+-num_processes: 1
++num_processes: 4
+ num_render: None
+ num_steps: 384
+ num_z: 1
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+index 00a83d9..cda9700 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+@@ -1 +1 @@
+-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+\ No newline at end of file
++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+\ No newline at end of file
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+index b531690..ebf34e4 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
+          for (i, new) in enumerate(news):
+              if new:
+                  self.stacked_obs[i] = 0
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..37f6dc9 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..c4ff3d3 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+index 953d419..edec780 100644
+--- a/new-actions-rl/rlf/main.py
++++ b/new-actions-rl/rlf/main.py
+@@ -39,7 +39,7 @@ def get_num_updates(args):
+     return num_updates, lr_updates
+ 
+ 
+-def get_fine_tune_run(load_name, env_name):
++def get_fine_tune_run(load_name, env_name, args):
+     from rlf.exp_mgr.eval import get_max_run
+     import wandb
+     import subprocess
+diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+index d008c38..9b566fb 100755
+--- a/new-actions-rl/rlf/rl/envs.py
++++ b/new-actions-rl/rlf/rl/envs.py
+@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+ 
+     return _thunk
+ 
+-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+ 
+ def make_vec_envs(env_name,
+                   seed,
+@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+                   trans_fn,
+                   args,
+                   num_frame_stack=None,
+-                  set_eval=False,
+-                  env_names_input=None):
++                  set_eval=False):
+ 
+     if args.multitask and not set_eval:
+         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+                   set_eval=False,
+                   env_names_input=None):
+ 
++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     envs = [
+         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+-        for env_name in env_names
++        for env_name in candidate_env_names
+     ]
+ 
+     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+index 0d25c28..e45648c 100755
+--- a/new-actions-rl/rlf/rl/rl.py
++++ b/new-actions-rl/rlf/rl/rl.py
+@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+           end_update, lr_updates, args, test_args, checkpointer):
+ 
++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     if args.resume and start_update > 0:
+         start_update += 1
+ 
+@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+         log.start_interval_log()
+ 
+         if args.multitask:
+-            idx = np.random.randint(10000) % len(env_names)
++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+             envs = envs_bulk[idx]
+-            args.env_name = env_names[idx]
+-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++            args.env_name = actual_env_names[idx]
++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+         else:
+             envs = envs_bulk
+ 
+@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+                 train_eval_envs = []
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs = None,
+                                train_eval_envs = None)
+@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+             else:
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs[i],
+                                train_eval_envs[i])
+347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+index 93c497a..479a608 100644
+--- a/new-actions-rl/arguments.py
++++ b/new-actions-rl/arguments.py
+@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+ 
+     #### Multitask specific
+     parser.add_argument('--multitask', action='store_true', default=False)
++    parser.add_argument('--env-names', nargs='+', default=[])
+ 
+     #### Resume specific
+     parser.add_argument('--best-run', type=int, default=None)
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+index a55af28..5c86c73 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+@@ -1,11 +1,11 @@
+ Date and Time:
+-10/03/2024
+-16:36:27
++16/04/2024
++11:03:41
+ 
+ action_base_hidden_size: 128
+ action_base_output_size: 64
+ action_proj_dim: 1
+-action_random_sample: True
++action_random_sample: False
+ action_seg_loc: ./data/action_segs
+ action_set_size: 50
+ algo: ppo
+@@ -14,6 +14,7 @@ analysis_angle: None
+ analysis_emb: None
+ anti_alias_blur: 0.0
+ backup: None
++best_run: 5799
+ both_train_test: False
+ bound_effect: False
+ cat_kl_loss: None
+@@ -38,7 +39,7 @@ create_play_len: 7
+ create_play_run_steps: 3
+ create_sec_goal_reward: 2.0
+ create_target_reward: 1.0
+-cuda: False
++cuda: True
+ cuda_deterministic: False
+ debug_render: False
+ decay_clipping: False
+@@ -73,9 +74,10 @@ emb_viz_interval: 5
+ encoder_dim: 64
+ entropy_coef: 0.005
+ env_name: CreateLevelPush-v0
++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+ eps: 1e-05
+ eval_interval: 50
+-eval_num_processes: None
++eval_num_processes: 1
+ eval_only: False
+ eval_split: False
+ eval_split_ratio: 0.5
+@@ -109,7 +111,7 @@ kl_pen: None
+ large_steps: 40
+ latent_dim: 1
+ load_all_data: False
+-load_best_name: None
++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
+ load_dataset: True
+ load_emb_logvar: True
+ load_emb_model_file: None
+@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+ max_grid_steps: 50
+ max_std_width: 3.0
+ mega_res_interval: 4
++multitask: True
+ n_clusters: 10
+ n_distributions: 1
+ n_hidden_option: 3
+@@ -138,7 +141,7 @@ no_diag: True
+ no_frame_stack: False
+ no_initial_state: False
+ no_overlap_env: False
+-no_test_eval: False
++no_test_eval: True
+ no_var: False
+ normalize_embs: False
+ not_upto: True
+@@ -146,7 +149,7 @@ num_distributions: 400
+ num_env_steps: 60000000
+ num_eval: 20
+ num_mini_batch: 4
+-num_processes: 1
++num_processes: 4
+ num_render: None
+ num_steps: 384
+ num_z: 1
+@@ -193,7 +196,7 @@ render_result_figures: False
+ render_text: False
+ reparam: True
+ result_dir: ./data/results
+-resume: False
++resume: True
+ resume_emb_training: False
+ reward_entropy_coef: 0.0
+ rl_use_radam: False
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+index 00a83d9..e3712f3 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+@@ -1 +1 @@
+-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+\ No newline at end of file
++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+\ No newline at end of file
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+index b531690..fde463e 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+@@ -10764,3 +10764,433 @@ index b41b6b9..e59734f 100755
+          for (i, new) in enumerate(news):
+              if new:
+                  self.stacked_obs[i] = 0
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..37f6dc9 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..c4ff3d3 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..9e018c4 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++15/04/2024
+++22:26:28
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: None
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..cda9700 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..ebf34e4 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..37f6dc9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..c4ff3d3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++index 953d419..edec780 100644
++--- a/new-actions-rl/rlf/main.py
+++++ b/new-actions-rl/rlf/main.py
++@@ -39,7 +39,7 @@ def get_num_updates(args):
++     return num_updates, lr_updates
++ 
++ 
++-def get_fine_tune_run(load_name, env_name):
+++def get_fine_tune_run(load_name, env_name, args):
++     from rlf.exp_mgr.eval import get_max_run
++     import wandb
++     import subprocess
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+index 953d419..edec780 100644
+--- a/new-actions-rl/rlf/main.py
++++ b/new-actions-rl/rlf/main.py
+@@ -39,7 +39,7 @@ def get_num_updates(args):
+     return num_updates, lr_updates
+ 
+ 
+-def get_fine_tune_run(load_name, env_name):
++def get_fine_tune_run(load_name, env_name, args):
+     from rlf.exp_mgr.eval import get_max_run
+     import wandb
+     import subprocess
+diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+index d008c38..9b566fb 100755
+--- a/new-actions-rl/rlf/rl/envs.py
++++ b/new-actions-rl/rlf/rl/envs.py
+@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+ 
+     return _thunk
+ 
+-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+ 
+ def make_vec_envs(env_name,
+                   seed,
+@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+                   trans_fn,
+                   args,
+                   num_frame_stack=None,
+-                  set_eval=False,
+-                  env_names_input=None):
++                  set_eval=False):
+ 
+     if args.multitask and not set_eval:
+         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+                   set_eval=False,
+                   env_names_input=None):
+ 
++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     envs = [
+         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+-        for env_name in env_names
++        for env_name in candidate_env_names
+     ]
+ 
+     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+index 0d25c28..e45648c 100755
+--- a/new-actions-rl/rlf/rl/rl.py
++++ b/new-actions-rl/rlf/rl/rl.py
+@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+           end_update, lr_updates, args, test_args, checkpointer):
+ 
++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     if args.resume and start_update > 0:
+         start_update += 1
+ 
+@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+         log.start_interval_log()
+ 
+         if args.multitask:
+-            idx = np.random.randint(10000) % len(env_names)
++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+             envs = envs_bulk[idx]
+-            args.env_name = env_names[idx]
+-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++            args.env_name = actual_env_names[idx]
++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+         else:
+             envs = envs_bulk
+ 
+@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+                 train_eval_envs = []
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs = None,
+                                train_eval_envs = None)
+@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+             else:
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs[i],
+                                train_eval_envs[i])
+347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+index 93c497a..479a608 100644
+--- a/new-actions-rl/arguments.py
++++ b/new-actions-rl/arguments.py
+@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+ 
+     #### Multitask specific
+     parser.add_argument('--multitask', action='store_true', default=False)
++    parser.add_argument('--env-names', nargs='+', default=[])
+ 
+     #### Resume specific
+     parser.add_argument('--best-run', type=int, default=None)
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+index a55af28..c06c75e 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+@@ -1,11 +1,11 @@
+ Date and Time:
+-10/03/2024
+-16:36:27
++16/04/2024
++14:42:37
+ 
+ action_base_hidden_size: 128
+ action_base_output_size: 64
+ action_proj_dim: 1
+-action_random_sample: True
++action_random_sample: False
+ action_seg_loc: ./data/action_segs
+ action_set_size: 50
+ algo: ppo
+@@ -14,6 +14,7 @@ analysis_angle: None
+ analysis_emb: None
+ anti_alias_blur: 0.0
+ backup: None
++best_run: 9349
+ both_train_test: False
+ bound_effect: False
+ cat_kl_loss: None
+@@ -38,7 +39,7 @@ create_play_len: 7
+ create_play_run_steps: 3
+ create_sec_goal_reward: 2.0
+ create_target_reward: 1.0
+-cuda: False
++cuda: True
+ cuda_deterministic: False
+ debug_render: False
+ decay_clipping: False
+@@ -73,9 +74,10 @@ emb_viz_interval: 5
+ encoder_dim: 64
+ entropy_coef: 0.005
+ env_name: CreateLevelPush-v0
++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+ eps: 1e-05
+ eval_interval: 50
+-eval_num_processes: None
++eval_num_processes: 1
+ eval_only: False
+ eval_split: False
+ eval_split_ratio: 0.5
+@@ -109,7 +111,7 @@ kl_pen: None
+ large_steps: 40
+ latent_dim: 1
+ load_all_data: False
+-load_best_name: None
++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
+ load_dataset: True
+ load_emb_logvar: True
+ load_emb_model_file: None
+@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+ max_grid_steps: 50
+ max_std_width: 3.0
+ mega_res_interval: 4
++multitask: True
+ n_clusters: 10
+ n_distributions: 1
+ n_hidden_option: 3
+@@ -138,7 +141,7 @@ no_diag: True
+ no_frame_stack: False
+ no_initial_state: False
+ no_overlap_env: False
+-no_test_eval: False
++no_test_eval: True
+ no_var: False
+ normalize_embs: False
+ not_upto: True
+@@ -146,7 +149,7 @@ num_distributions: 400
+ num_env_steps: 60000000
+ num_eval: 20
+ num_mini_batch: 4
+-num_processes: 1
++num_processes: 4
+ num_render: None
+ num_steps: 384
+ num_z: 1
+@@ -193,7 +196,7 @@ render_result_figures: False
+ render_text: False
+ reparam: True
+ result_dir: ./data/results
+-resume: False
++resume: True
+ resume_emb_training: False
+ reward_entropy_coef: 0.0
+ rl_use_radam: False
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+index 00a83d9..ec24bd5 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+@@ -1 +1 @@
+-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+\ No newline at end of file
++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+\ No newline at end of file
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+index b531690..6d6f339 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+@@ -10764,3 +10764,1081 @@ index b41b6b9..e59734f 100755
+          for (i, new) in enumerate(news):
+              if new:
+                  self.stacked_obs[i] = 0
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..37f6dc9 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..c4ff3d3 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..9e018c4 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++15/04/2024
+++22:26:28
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: None
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..cda9700 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..ebf34e4 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..37f6dc9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..c4ff3d3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++index 953d419..edec780 100644
++--- a/new-actions-rl/rlf/main.py
+++++ b/new-actions-rl/rlf/main.py
++@@ -39,7 +39,7 @@ def get_num_updates(args):
++     return num_updates, lr_updates
++ 
++ 
++-def get_fine_tune_run(load_name, env_name):
+++def get_fine_tune_run(load_name, env_name, args):
++     from rlf.exp_mgr.eval import get_max_run
++     import wandb
++     import subprocess
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..5c86c73 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++16/04/2024
+++11:03:41
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: 5799
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -109,7 +111,7 @@ kl_pen: None
++ large_steps: 40
++ latent_dim: 1
++ load_all_data: False
++-load_best_name: None
+++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
++ load_dataset: True
++ load_emb_logvar: True
++ load_emb_model_file: None
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++@@ -193,7 +196,7 @@ render_result_figures: False
++ render_text: False
++ reparam: True
++ result_dir: ./data/results
++-resume: False
+++resume: True
++ resume_emb_training: False
++ reward_entropy_coef: 0.0
++ rl_use_radam: False
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..e3712f3 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..fde463e 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,433 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..37f6dc9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..c4ff3d3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..9e018c4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++15/04/2024
++++22:26:28
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: None
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..cda9700 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..ebf34e4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..37f6dc9 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..c4ff3d3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++index 953d419..edec780 100644
+++--- a/new-actions-rl/rlf/main.py
++++++ b/new-actions-rl/rlf/main.py
+++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++     return num_updates, lr_updates
+++ 
+++ 
+++-def get_fine_tune_run(load_name, env_name):
++++def get_fine_tune_run(load_name, env_name, args):
+++     from rlf.exp_mgr.eval import get_max_run
+++     import wandb
+++     import subprocess
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++index 953d419..edec780 100644
++--- a/new-actions-rl/rlf/main.py
+++++ b/new-actions-rl/rlf/main.py
++@@ -39,7 +39,7 @@ def get_num_updates(args):
++     return num_updates, lr_updates
++ 
++ 
++-def get_fine_tune_run(load_name, env_name):
+++def get_fine_tune_run(load_name, env_name, args):
++     from rlf.exp_mgr.eval import get_max_run
++     import wandb
++     import subprocess
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+index 953d419..edec780 100644
+--- a/new-actions-rl/rlf/main.py
++++ b/new-actions-rl/rlf/main.py
+@@ -39,7 +39,7 @@ def get_num_updates(args):
+     return num_updates, lr_updates
+ 
+ 
+-def get_fine_tune_run(load_name, env_name):
++def get_fine_tune_run(load_name, env_name, args):
+     from rlf.exp_mgr.eval import get_max_run
+     import wandb
+     import subprocess
+diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+index d008c38..9b566fb 100755
+--- a/new-actions-rl/rlf/rl/envs.py
++++ b/new-actions-rl/rlf/rl/envs.py
+@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+ 
+     return _thunk
+ 
+-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+ 
+ def make_vec_envs(env_name,
+                   seed,
+@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+                   trans_fn,
+                   args,
+                   num_frame_stack=None,
+-                  set_eval=False,
+-                  env_names_input=None):
++                  set_eval=False):
+ 
+     if args.multitask and not set_eval:
+         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+                   set_eval=False,
+                   env_names_input=None):
+ 
++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     envs = [
+         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+-        for env_name in env_names
++        for env_name in candidate_env_names
+     ]
+ 
+     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+index 0d25c28..e45648c 100755
+--- a/new-actions-rl/rlf/rl/rl.py
++++ b/new-actions-rl/rlf/rl/rl.py
+@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+           end_update, lr_updates, args, test_args, checkpointer):
+ 
++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     if args.resume and start_update > 0:
+         start_update += 1
+ 
+@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+         log.start_interval_log()
+ 
+         if args.multitask:
+-            idx = np.random.randint(10000) % len(env_names)
++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+             envs = envs_bulk[idx]
+-            args.env_name = env_names[idx]
+-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++            args.env_name = actual_env_names[idx]
++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+         else:
+             envs = envs_bulk
+ 
+@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+                 train_eval_envs = []
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs = None,
+                                train_eval_envs = None)
+@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+             else:
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs[i],
+                                train_eval_envs[i])
+347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+index 93c497a..479a608 100644
+--- a/new-actions-rl/arguments.py
++++ b/new-actions-rl/arguments.py
+@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+ 
+     #### Multitask specific
+     parser.add_argument('--multitask', action='store_true', default=False)
++    parser.add_argument('--env-names', nargs='+', default=[])
+ 
+     #### Resume specific
+     parser.add_argument('--best-run', type=int, default=None)
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+index a55af28..85c20f2 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+@@ -1,11 +1,11 @@
+ Date and Time:
+-10/03/2024
+-16:36:27
++16/04/2024
++18:38:56
+ 
+ action_base_hidden_size: 128
+ action_base_output_size: 64
+ action_proj_dim: 1
+-action_random_sample: True
++action_random_sample: False
+ action_seg_loc: ./data/action_segs
+ action_set_size: 50
+ algo: ppo
+@@ -14,6 +14,7 @@ analysis_angle: None
+ analysis_emb: None
+ anti_alias_blur: 0.0
+ backup: None
++best_run: 12899
+ both_train_test: False
+ bound_effect: False
+ cat_kl_loss: None
+@@ -38,7 +39,7 @@ create_play_len: 7
+ create_play_run_steps: 3
+ create_sec_goal_reward: 2.0
+ create_target_reward: 1.0
+-cuda: False
++cuda: True
+ cuda_deterministic: False
+ debug_render: False
+ decay_clipping: False
+@@ -73,9 +74,10 @@ emb_viz_interval: 5
+ encoder_dim: 64
+ entropy_coef: 0.005
+ env_name: CreateLevelPush-v0
++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+ eps: 1e-05
+ eval_interval: 50
+-eval_num_processes: None
++eval_num_processes: 1
+ eval_only: False
+ eval_split: False
+ eval_split_ratio: 0.5
+@@ -109,7 +111,7 @@ kl_pen: None
+ large_steps: 40
+ latent_dim: 1
+ load_all_data: False
+-load_best_name: None
++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
+ load_dataset: True
+ load_emb_logvar: True
+ load_emb_model_file: None
+@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+ max_grid_steps: 50
+ max_std_width: 3.0
+ mega_res_interval: 4
++multitask: True
+ n_clusters: 10
+ n_distributions: 1
+ n_hidden_option: 3
+@@ -138,7 +141,7 @@ no_diag: True
+ no_frame_stack: False
+ no_initial_state: False
+ no_overlap_env: False
+-no_test_eval: False
++no_test_eval: True
+ no_var: False
+ normalize_embs: False
+ not_upto: True
+@@ -146,7 +149,7 @@ num_distributions: 400
+ num_env_steps: 60000000
+ num_eval: 20
+ num_mini_batch: 4
+-num_processes: 1
++num_processes: 4
+ num_render: None
+ num_steps: 384
+ num_z: 1
+@@ -193,7 +196,7 @@ render_result_figures: False
+ render_text: False
+ reparam: True
+ result_dir: ./data/results
+-resume: False
++resume: True
+ resume_emb_training: False
+ reward_entropy_coef: 0.0
+ rl_use_radam: False
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+index 00a83d9..63b1f15 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+@@ -1 +1 @@
+-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+\ No newline at end of file
++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 16449 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+\ No newline at end of file
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+index b531690..815f948 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+@@ -10764,3 +10764,2377 @@ index b41b6b9..e59734f 100755
+          for (i, new) in enumerate(news):
+              if new:
+                  self.stacked_obs[i] = 0
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..37f6dc9 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..c4ff3d3 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..9e018c4 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++15/04/2024
+++22:26:28
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: None
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..cda9700 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..ebf34e4 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..37f6dc9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..c4ff3d3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++index 953d419..edec780 100644
++--- a/new-actions-rl/rlf/main.py
+++++ b/new-actions-rl/rlf/main.py
++@@ -39,7 +39,7 @@ def get_num_updates(args):
++     return num_updates, lr_updates
++ 
++ 
++-def get_fine_tune_run(load_name, env_name):
+++def get_fine_tune_run(load_name, env_name, args):
++     from rlf.exp_mgr.eval import get_max_run
++     import wandb
++     import subprocess
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..5c86c73 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++16/04/2024
+++11:03:41
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: 5799
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -109,7 +111,7 @@ kl_pen: None
++ large_steps: 40
++ latent_dim: 1
++ load_all_data: False
++-load_best_name: None
+++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
++ load_dataset: True
++ load_emb_logvar: True
++ load_emb_model_file: None
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++@@ -193,7 +196,7 @@ render_result_figures: False
++ render_text: False
++ reparam: True
++ result_dir: ./data/results
++-resume: False
+++resume: True
++ resume_emb_training: False
++ reward_entropy_coef: 0.0
++ rl_use_radam: False
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..e3712f3 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..fde463e 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,433 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..37f6dc9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..c4ff3d3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..9e018c4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++15/04/2024
++++22:26:28
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: None
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..cda9700 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..ebf34e4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..37f6dc9 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..c4ff3d3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++index 953d419..edec780 100644
+++--- a/new-actions-rl/rlf/main.py
++++++ b/new-actions-rl/rlf/main.py
+++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++     return num_updates, lr_updates
+++ 
+++ 
+++-def get_fine_tune_run(load_name, env_name):
++++def get_fine_tune_run(load_name, env_name, args):
+++     from rlf.exp_mgr.eval import get_max_run
+++     import wandb
+++     import subprocess
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++index 953d419..edec780 100644
++--- a/new-actions-rl/rlf/main.py
+++++ b/new-actions-rl/rlf/main.py
++@@ -39,7 +39,7 @@ def get_num_updates(args):
++     return num_updates, lr_updates
++ 
++ 
++-def get_fine_tune_run(load_name, env_name):
+++def get_fine_tune_run(load_name, env_name, args):
++     from rlf.exp_mgr.eval import get_max_run
++     import wandb
++     import subprocess
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..c06c75e 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++16/04/2024
+++14:42:37
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: 9349
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -109,7 +111,7 @@ kl_pen: None
++ large_steps: 40
++ latent_dim: 1
++ load_all_data: False
++-load_best_name: None
+++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
++ load_dataset: True
++ load_emb_logvar: True
++ load_emb_model_file: None
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++@@ -193,7 +196,7 @@ render_result_figures: False
++ render_text: False
++ reparam: True
++ result_dir: ./data/results
++-resume: False
+++resume: True
++ resume_emb_training: False
++ reward_entropy_coef: 0.0
++ rl_use_radam: False
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..ec24bd5 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..6d6f339 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,1081 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..37f6dc9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..c4ff3d3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..9e018c4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++15/04/2024
++++22:26:28
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: None
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..cda9700 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..ebf34e4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..37f6dc9 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..c4ff3d3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++index 953d419..edec780 100644
+++--- a/new-actions-rl/rlf/main.py
++++++ b/new-actions-rl/rlf/main.py
+++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++     return num_updates, lr_updates
+++ 
+++ 
+++-def get_fine_tune_run(load_name, env_name):
++++def get_fine_tune_run(load_name, env_name, args):
+++     from rlf.exp_mgr.eval import get_max_run
+++     import wandb
+++     import subprocess
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..5c86c73 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++16/04/2024
++++11:03:41
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: 5799
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -109,7 +111,7 @@ kl_pen: None
+++ large_steps: 40
+++ latent_dim: 1
+++ load_all_data: False
+++-load_best_name: None
++++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
+++ load_dataset: True
+++ load_emb_logvar: True
+++ load_emb_model_file: None
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++@@ -193,7 +196,7 @@ render_result_figures: False
+++ render_text: False
+++ reparam: True
+++ result_dir: ./data/results
+++-resume: False
++++resume: True
+++ resume_emb_training: False
+++ reward_entropy_coef: 0.0
+++ rl_use_radam: False
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..e3712f3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..fde463e 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,433 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..37f6dc9 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..c4ff3d3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++index a55af28..9e018c4 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++@@ -1,11 +1,11 @@
++++ Date and Time:
++++-10/03/2024
++++-16:36:27
+++++15/04/2024
+++++22:26:28
++++ 
++++ action_base_hidden_size: 128
++++ action_base_output_size: 64
++++ action_proj_dim: 1
++++-action_random_sample: True
+++++action_random_sample: False
++++ action_seg_loc: ./data/action_segs
++++ action_set_size: 50
++++ algo: ppo
++++@@ -14,6 +14,7 @@ analysis_angle: None
++++ analysis_emb: None
++++ anti_alias_blur: 0.0
++++ backup: None
+++++best_run: None
++++ both_train_test: False
++++ bound_effect: False
++++ cat_kl_loss: None
++++@@ -38,7 +39,7 @@ create_play_len: 7
++++ create_play_run_steps: 3
++++ create_sec_goal_reward: 2.0
++++ create_target_reward: 1.0
++++-cuda: False
+++++cuda: True
++++ cuda_deterministic: False
++++ debug_render: False
++++ decay_clipping: False
++++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++++ encoder_dim: 64
++++ entropy_coef: 0.005
++++ env_name: CreateLevelPush-v0
+++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++++ eps: 1e-05
++++ eval_interval: 50
++++-eval_num_processes: None
+++++eval_num_processes: 1
++++ eval_only: False
++++ eval_split: False
++++ eval_split_ratio: 0.5
++++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++++ max_grid_steps: 50
++++ max_std_width: 3.0
++++ mega_res_interval: 4
+++++multitask: True
++++ n_clusters: 10
++++ n_distributions: 1
++++ n_hidden_option: 3
++++@@ -138,7 +141,7 @@ no_diag: True
++++ no_frame_stack: False
++++ no_initial_state: False
++++ no_overlap_env: False
++++-no_test_eval: False
+++++no_test_eval: True
++++ no_var: False
++++ normalize_embs: False
++++ not_upto: True
++++@@ -146,7 +149,7 @@ num_distributions: 400
++++ num_env_steps: 60000000
++++ num_eval: 20
++++ num_mini_batch: 4
++++-num_processes: 1
+++++num_processes: 4
++++ num_render: None
++++ num_steps: 384
++++ num_z: 1
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..cda9700 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..ebf34e4 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++++index 93c497a..479a608 100644
+++++--- a/new-actions-rl/arguments.py
++++++++ b/new-actions-rl/arguments.py
+++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++++ 
+++++     #### Multitask specific
+++++     parser.add_argument('--multitask', action='store_true', default=False)
++++++    parser.add_argument('--env-names', nargs='+', default=[])
+++++ 
+++++     #### Resume specific
+++++     parser.add_argument('--best-run', type=int, default=None)
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++index 00a83d9..37f6dc9 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++@@ -1 +1 @@
+++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++++\ No newline at end of file
++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++++\ No newline at end of file
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++index b531690..c4ff3d3 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++++          for (i, new) in enumerate(news):
+++++              if new:
+++++                  self.stacked_obs[i] = 0
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++++index d008c38..9b566fb 100755
+++++--- a/new-actions-rl/rlf/rl/envs.py
++++++++ b/new-actions-rl/rlf/rl/envs.py
+++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++++ 
+++++     return _thunk
+++++ 
+++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++++ 
+++++ def make_vec_envs(env_name,
+++++                   seed,
+++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++++                   trans_fn,
+++++                   args,
+++++                   num_frame_stack=None,
+++++-                  set_eval=False,
+++++-                  env_names_input=None):
++++++                  set_eval=False):
+++++ 
+++++     if args.multitask and not set_eval:
+++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++++                   set_eval=False,
+++++                   env_names_input=None):
+++++ 
++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     envs = [
+++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++++-        for env_name in env_names
++++++        for env_name in candidate_env_names
+++++     ]
+++++ 
+++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++++index 0d25c28..e45648c 100755
+++++--- a/new-actions-rl/rlf/rl/rl.py
++++++++ b/new-actions-rl/rlf/rl/rl.py
+++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++           end_update, lr_updates, args, test_args, checkpointer):
+++++ 
++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     if args.resume and start_update > 0:
+++++         start_update += 1
+++++ 
+++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++         log.start_interval_log()
+++++ 
+++++         if args.multitask:
+++++-            idx = np.random.randint(10000) % len(env_names)
++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++++             envs = envs_bulk[idx]
+++++-            args.env_name = env_names[idx]
+++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++++            args.env_name = actual_env_names[idx]
++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++++         else:
+++++             envs = envs_bulk
+++++ 
+++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++                 train_eval_envs = []
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++++                                train_eval_envs = None)
+++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++             else:
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++++                                train_eval_envs[i])
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++++index 953d419..edec780 100644
++++--- a/new-actions-rl/rlf/main.py
+++++++ b/new-actions-rl/rlf/main.py
++++@@ -39,7 +39,7 @@ def get_num_updates(args):
++++     return num_updates, lr_updates
++++ 
++++ 
++++-def get_fine_tune_run(load_name, env_name):
+++++def get_fine_tune_run(load_name, env_name, args):
++++     from rlf.exp_mgr.eval import get_max_run
++++     import wandb
++++     import subprocess
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++index 953d419..edec780 100644
+++--- a/new-actions-rl/rlf/main.py
++++++ b/new-actions-rl/rlf/main.py
+++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++     return num_updates, lr_updates
+++ 
+++ 
+++-def get_fine_tune_run(load_name, env_name):
++++def get_fine_tune_run(load_name, env_name, args):
+++     from rlf.exp_mgr.eval import get_max_run
+++     import wandb
+++     import subprocess
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++index 953d419..edec780 100644
++--- a/new-actions-rl/rlf/main.py
+++++ b/new-actions-rl/rlf/main.py
++@@ -39,7 +39,7 @@ def get_num_updates(args):
++     return num_updates, lr_updates
++ 
++ 
++-def get_fine_tune_run(load_name, env_name):
+++def get_fine_tune_run(load_name, env_name, args):
++     from rlf.exp_mgr.eval import get_max_run
++     import wandb
++     import subprocess
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+index 953d419..edec780 100644
+--- a/new-actions-rl/rlf/main.py
++++ b/new-actions-rl/rlf/main.py
+@@ -39,7 +39,7 @@ def get_num_updates(args):
+     return num_updates, lr_updates
+ 
+ 
+-def get_fine_tune_run(load_name, env_name):
++def get_fine_tune_run(load_name, env_name, args):
+     from rlf.exp_mgr.eval import get_max_run
+     import wandb
+     import subprocess
+diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+index d008c38..9b566fb 100755
+--- a/new-actions-rl/rlf/rl/envs.py
++++ b/new-actions-rl/rlf/rl/envs.py
+@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+ 
+     return _thunk
+ 
+-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+ 
+ def make_vec_envs(env_name,
+                   seed,
+@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+                   trans_fn,
+                   args,
+                   num_frame_stack=None,
+-                  set_eval=False,
+-                  env_names_input=None):
++                  set_eval=False):
+ 
+     if args.multitask and not set_eval:
+         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+                   set_eval=False,
+                   env_names_input=None):
+ 
++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     envs = [
+         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+-        for env_name in env_names
++        for env_name in candidate_env_names
+     ]
+ 
+     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+index 0d25c28..e45648c 100755
+--- a/new-actions-rl/rlf/rl/rl.py
++++ b/new-actions-rl/rlf/rl/rl.py
+@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+           end_update, lr_updates, args, test_args, checkpointer):
+ 
++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     if args.resume and start_update > 0:
+         start_update += 1
+ 
+@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+         log.start_interval_log()
+ 
+         if args.multitask:
+-            idx = np.random.randint(10000) % len(env_names)
++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+             envs = envs_bulk[idx]
+-            args.env_name = env_names[idx]
+-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++            args.env_name = actual_env_names[idx]
++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+         else:
+             envs = envs_bulk
+ 
+@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+                 train_eval_envs = []
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs = None,
+                                train_eval_envs = None)
+@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+             else:
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs[i],
+                                train_eval_envs[i])
+347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+index 93c497a..479a608 100644
+--- a/new-actions-rl/arguments.py
++++ b/new-actions-rl/arguments.py
+@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+ 
+     #### Multitask specific
+     parser.add_argument('--multitask', action='store_true', default=False)
++    parser.add_argument('--env-names', nargs='+', default=[])
+ 
+     #### Resume specific
+     parser.add_argument('--best-run', type=int, default=None)
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+index a55af28..471a8c9 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+@@ -1,11 +1,11 @@
+ Date and Time:
+-10/03/2024
+-16:36:27
++17/04/2024
++01:03:09
+ 
+ action_base_hidden_size: 128
+ action_base_output_size: 64
+ action_proj_dim: 1
+-action_random_sample: True
++action_random_sample: False
+ action_seg_loc: ./data/action_segs
+ action_set_size: 50
+ algo: ppo
+@@ -14,6 +14,7 @@ analysis_angle: None
+ analysis_emb: None
+ anti_alias_blur: 0.0
+ backup: None
++best_run: 16449
+ both_train_test: False
+ bound_effect: False
+ cat_kl_loss: None
+@@ -38,7 +39,7 @@ create_play_len: 7
+ create_play_run_steps: 3
+ create_sec_goal_reward: 2.0
+ create_target_reward: 1.0
+-cuda: False
++cuda: True
+ cuda_deterministic: False
+ debug_render: False
+ decay_clipping: False
+@@ -73,9 +74,10 @@ emb_viz_interval: 5
+ encoder_dim: 64
+ entropy_coef: 0.005
+ env_name: CreateLevelPush-v0
++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+ eps: 1e-05
+ eval_interval: 50
+-eval_num_processes: None
++eval_num_processes: 1
+ eval_only: False
+ eval_split: False
+ eval_split_ratio: 0.5
+@@ -109,7 +111,7 @@ kl_pen: None
+ large_steps: 40
+ latent_dim: 1
+ load_all_data: False
+-load_best_name: None
++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
+ load_dataset: True
+ load_emb_logvar: True
+ load_emb_model_file: None
+@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+ max_grid_steps: 50
+ max_std_width: 3.0
+ mega_res_interval: 4
++multitask: True
+ n_clusters: 10
+ n_distributions: 1
+ n_hidden_option: 3
+@@ -138,7 +141,7 @@ no_diag: True
+ no_frame_stack: False
+ no_initial_state: False
+ no_overlap_env: False
+-no_test_eval: False
++no_test_eval: True
+ no_var: False
+ normalize_embs: False
+ not_upto: True
+@@ -146,7 +149,7 @@ num_distributions: 400
+ num_env_steps: 60000000
+ num_eval: 20
+ num_mini_batch: 4
+-num_processes: 1
++num_processes: 4
+ num_render: None
+ num_steps: 384
+ num_z: 1
+@@ -193,7 +196,7 @@ render_result_figures: False
+ render_text: False
+ reparam: True
+ result_dir: ./data/results
+-resume: False
++resume: True
+ resume_emb_training: False
+ reward_entropy_coef: 0.0
+ rl_use_radam: False
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+index 00a83d9..5cdd351 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+@@ -1 +1 @@
+-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+\ No newline at end of file
++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 16449 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 22299 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+\ No newline at end of file
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+index b531690..13b575f 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+@@ -10764,3 +10764,5081 @@ index b41b6b9..e59734f 100755
+          for (i, new) in enumerate(news):
+              if new:
+                  self.stacked_obs[i] = 0
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..37f6dc9 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..c4ff3d3 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..9e018c4 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++15/04/2024
+++22:26:28
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: None
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..cda9700 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..ebf34e4 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..37f6dc9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..c4ff3d3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++index 953d419..edec780 100644
++--- a/new-actions-rl/rlf/main.py
+++++ b/new-actions-rl/rlf/main.py
++@@ -39,7 +39,7 @@ def get_num_updates(args):
++     return num_updates, lr_updates
++ 
++ 
++-def get_fine_tune_run(load_name, env_name):
+++def get_fine_tune_run(load_name, env_name, args):
++     from rlf.exp_mgr.eval import get_max_run
++     import wandb
++     import subprocess
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..5c86c73 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++16/04/2024
+++11:03:41
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: 5799
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -109,7 +111,7 @@ kl_pen: None
++ large_steps: 40
++ latent_dim: 1
++ load_all_data: False
++-load_best_name: None
+++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
++ load_dataset: True
++ load_emb_logvar: True
++ load_emb_model_file: None
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++@@ -193,7 +196,7 @@ render_result_figures: False
++ render_text: False
++ reparam: True
++ result_dir: ./data/results
++-resume: False
+++resume: True
++ resume_emb_training: False
++ reward_entropy_coef: 0.0
++ rl_use_radam: False
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..e3712f3 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..fde463e 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,433 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..37f6dc9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..c4ff3d3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..9e018c4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++15/04/2024
++++22:26:28
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: None
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..cda9700 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..ebf34e4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..37f6dc9 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..c4ff3d3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++index 953d419..edec780 100644
+++--- a/new-actions-rl/rlf/main.py
++++++ b/new-actions-rl/rlf/main.py
+++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++     return num_updates, lr_updates
+++ 
+++ 
+++-def get_fine_tune_run(load_name, env_name):
++++def get_fine_tune_run(load_name, env_name, args):
+++     from rlf.exp_mgr.eval import get_max_run
+++     import wandb
+++     import subprocess
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++index 953d419..edec780 100644
++--- a/new-actions-rl/rlf/main.py
+++++ b/new-actions-rl/rlf/main.py
++@@ -39,7 +39,7 @@ def get_num_updates(args):
++     return num_updates, lr_updates
++ 
++ 
++-def get_fine_tune_run(load_name, env_name):
+++def get_fine_tune_run(load_name, env_name, args):
++     from rlf.exp_mgr.eval import get_max_run
++     import wandb
++     import subprocess
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..c06c75e 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++16/04/2024
+++14:42:37
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: 9349
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -109,7 +111,7 @@ kl_pen: None
++ large_steps: 40
++ latent_dim: 1
++ load_all_data: False
++-load_best_name: None
+++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
++ load_dataset: True
++ load_emb_logvar: True
++ load_emb_model_file: None
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++@@ -193,7 +196,7 @@ render_result_figures: False
++ render_text: False
++ reparam: True
++ result_dir: ./data/results
++-resume: False
+++resume: True
++ resume_emb_training: False
++ reward_entropy_coef: 0.0
++ rl_use_radam: False
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..ec24bd5 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..6d6f339 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,1081 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..37f6dc9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..c4ff3d3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..9e018c4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++15/04/2024
++++22:26:28
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: None
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..cda9700 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..ebf34e4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..37f6dc9 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..c4ff3d3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++index 953d419..edec780 100644
+++--- a/new-actions-rl/rlf/main.py
++++++ b/new-actions-rl/rlf/main.py
+++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++     return num_updates, lr_updates
+++ 
+++ 
+++-def get_fine_tune_run(load_name, env_name):
++++def get_fine_tune_run(load_name, env_name, args):
+++     from rlf.exp_mgr.eval import get_max_run
+++     import wandb
+++     import subprocess
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..5c86c73 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++16/04/2024
++++11:03:41
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: 5799
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -109,7 +111,7 @@ kl_pen: None
+++ large_steps: 40
+++ latent_dim: 1
+++ load_all_data: False
+++-load_best_name: None
++++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
+++ load_dataset: True
+++ load_emb_logvar: True
+++ load_emb_model_file: None
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++@@ -193,7 +196,7 @@ render_result_figures: False
+++ render_text: False
+++ reparam: True
+++ result_dir: ./data/results
+++-resume: False
++++resume: True
+++ resume_emb_training: False
+++ reward_entropy_coef: 0.0
+++ rl_use_radam: False
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..e3712f3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..fde463e 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,433 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..37f6dc9 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..c4ff3d3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++index a55af28..9e018c4 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++@@ -1,11 +1,11 @@
++++ Date and Time:
++++-10/03/2024
++++-16:36:27
+++++15/04/2024
+++++22:26:28
++++ 
++++ action_base_hidden_size: 128
++++ action_base_output_size: 64
++++ action_proj_dim: 1
++++-action_random_sample: True
+++++action_random_sample: False
++++ action_seg_loc: ./data/action_segs
++++ action_set_size: 50
++++ algo: ppo
++++@@ -14,6 +14,7 @@ analysis_angle: None
++++ analysis_emb: None
++++ anti_alias_blur: 0.0
++++ backup: None
+++++best_run: None
++++ both_train_test: False
++++ bound_effect: False
++++ cat_kl_loss: None
++++@@ -38,7 +39,7 @@ create_play_len: 7
++++ create_play_run_steps: 3
++++ create_sec_goal_reward: 2.0
++++ create_target_reward: 1.0
++++-cuda: False
+++++cuda: True
++++ cuda_deterministic: False
++++ debug_render: False
++++ decay_clipping: False
++++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++++ encoder_dim: 64
++++ entropy_coef: 0.005
++++ env_name: CreateLevelPush-v0
+++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++++ eps: 1e-05
++++ eval_interval: 50
++++-eval_num_processes: None
+++++eval_num_processes: 1
++++ eval_only: False
++++ eval_split: False
++++ eval_split_ratio: 0.5
++++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++++ max_grid_steps: 50
++++ max_std_width: 3.0
++++ mega_res_interval: 4
+++++multitask: True
++++ n_clusters: 10
++++ n_distributions: 1
++++ n_hidden_option: 3
++++@@ -138,7 +141,7 @@ no_diag: True
++++ no_frame_stack: False
++++ no_initial_state: False
++++ no_overlap_env: False
++++-no_test_eval: False
+++++no_test_eval: True
++++ no_var: False
++++ normalize_embs: False
++++ not_upto: True
++++@@ -146,7 +149,7 @@ num_distributions: 400
++++ num_env_steps: 60000000
++++ num_eval: 20
++++ num_mini_batch: 4
++++-num_processes: 1
+++++num_processes: 4
++++ num_render: None
++++ num_steps: 384
++++ num_z: 1
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..cda9700 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..ebf34e4 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++++index 93c497a..479a608 100644
+++++--- a/new-actions-rl/arguments.py
++++++++ b/new-actions-rl/arguments.py
+++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++++ 
+++++     #### Multitask specific
+++++     parser.add_argument('--multitask', action='store_true', default=False)
++++++    parser.add_argument('--env-names', nargs='+', default=[])
+++++ 
+++++     #### Resume specific
+++++     parser.add_argument('--best-run', type=int, default=None)
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++index 00a83d9..37f6dc9 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++@@ -1 +1 @@
+++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++++\ No newline at end of file
++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++++\ No newline at end of file
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++index b531690..c4ff3d3 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++++          for (i, new) in enumerate(news):
+++++              if new:
+++++                  self.stacked_obs[i] = 0
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++++index d008c38..9b566fb 100755
+++++--- a/new-actions-rl/rlf/rl/envs.py
++++++++ b/new-actions-rl/rlf/rl/envs.py
+++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++++ 
+++++     return _thunk
+++++ 
+++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++++ 
+++++ def make_vec_envs(env_name,
+++++                   seed,
+++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++++                   trans_fn,
+++++                   args,
+++++                   num_frame_stack=None,
+++++-                  set_eval=False,
+++++-                  env_names_input=None):
++++++                  set_eval=False):
+++++ 
+++++     if args.multitask and not set_eval:
+++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++++                   set_eval=False,
+++++                   env_names_input=None):
+++++ 
++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     envs = [
+++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++++-        for env_name in env_names
++++++        for env_name in candidate_env_names
+++++     ]
+++++ 
+++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++++index 0d25c28..e45648c 100755
+++++--- a/new-actions-rl/rlf/rl/rl.py
++++++++ b/new-actions-rl/rlf/rl/rl.py
+++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++           end_update, lr_updates, args, test_args, checkpointer):
+++++ 
++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     if args.resume and start_update > 0:
+++++         start_update += 1
+++++ 
+++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++         log.start_interval_log()
+++++ 
+++++         if args.multitask:
+++++-            idx = np.random.randint(10000) % len(env_names)
++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++++             envs = envs_bulk[idx]
+++++-            args.env_name = env_names[idx]
+++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++++            args.env_name = actual_env_names[idx]
++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++++         else:
+++++             envs = envs_bulk
+++++ 
+++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++                 train_eval_envs = []
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++++                                train_eval_envs = None)
+++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++             else:
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++++                                train_eval_envs[i])
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++++index 953d419..edec780 100644
++++--- a/new-actions-rl/rlf/main.py
+++++++ b/new-actions-rl/rlf/main.py
++++@@ -39,7 +39,7 @@ def get_num_updates(args):
++++     return num_updates, lr_updates
++++ 
++++ 
++++-def get_fine_tune_run(load_name, env_name):
+++++def get_fine_tune_run(load_name, env_name, args):
++++     from rlf.exp_mgr.eval import get_max_run
++++     import wandb
++++     import subprocess
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++index 953d419..edec780 100644
+++--- a/new-actions-rl/rlf/main.py
++++++ b/new-actions-rl/rlf/main.py
+++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++     return num_updates, lr_updates
+++ 
+++ 
+++-def get_fine_tune_run(load_name, env_name):
++++def get_fine_tune_run(load_name, env_name, args):
+++     from rlf.exp_mgr.eval import get_max_run
+++     import wandb
+++     import subprocess
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++index 953d419..edec780 100644
++--- a/new-actions-rl/rlf/main.py
+++++ b/new-actions-rl/rlf/main.py
++@@ -39,7 +39,7 @@ def get_num_updates(args):
++     return num_updates, lr_updates
++ 
++ 
++-def get_fine_tune_run(load_name, env_name):
+++def get_fine_tune_run(load_name, env_name, args):
++     from rlf.exp_mgr.eval import get_max_run
++     import wandb
++     import subprocess
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..85c20f2 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++16/04/2024
+++18:38:56
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: 12899
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -109,7 +111,7 @@ kl_pen: None
++ large_steps: 40
++ latent_dim: 1
++ load_all_data: False
++-load_best_name: None
+++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
++ load_dataset: True
++ load_emb_logvar: True
++ load_emb_model_file: None
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++@@ -193,7 +196,7 @@ render_result_figures: False
++ render_text: False
++ reparam: True
++ result_dir: ./data/results
++-resume: False
+++resume: True
++ resume_emb_training: False
++ reward_entropy_coef: 0.0
++ rl_use_radam: False
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..63b1f15 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 16449 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..815f948 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,2377 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..37f6dc9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..c4ff3d3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..9e018c4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++15/04/2024
++++22:26:28
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: None
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..cda9700 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..ebf34e4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..37f6dc9 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..c4ff3d3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++index 953d419..edec780 100644
+++--- a/new-actions-rl/rlf/main.py
++++++ b/new-actions-rl/rlf/main.py
+++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++     return num_updates, lr_updates
+++ 
+++ 
+++-def get_fine_tune_run(load_name, env_name):
++++def get_fine_tune_run(load_name, env_name, args):
+++     from rlf.exp_mgr.eval import get_max_run
+++     import wandb
+++     import subprocess
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..5c86c73 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++16/04/2024
++++11:03:41
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: 5799
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -109,7 +111,7 @@ kl_pen: None
+++ large_steps: 40
+++ latent_dim: 1
+++ load_all_data: False
+++-load_best_name: None
++++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
+++ load_dataset: True
+++ load_emb_logvar: True
+++ load_emb_model_file: None
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++@@ -193,7 +196,7 @@ render_result_figures: False
+++ render_text: False
+++ reparam: True
+++ result_dir: ./data/results
+++-resume: False
++++resume: True
+++ resume_emb_training: False
+++ reward_entropy_coef: 0.0
+++ rl_use_radam: False
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..e3712f3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..fde463e 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,433 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..37f6dc9 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..c4ff3d3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++index a55af28..9e018c4 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++@@ -1,11 +1,11 @@
++++ Date and Time:
++++-10/03/2024
++++-16:36:27
+++++15/04/2024
+++++22:26:28
++++ 
++++ action_base_hidden_size: 128
++++ action_base_output_size: 64
++++ action_proj_dim: 1
++++-action_random_sample: True
+++++action_random_sample: False
++++ action_seg_loc: ./data/action_segs
++++ action_set_size: 50
++++ algo: ppo
++++@@ -14,6 +14,7 @@ analysis_angle: None
++++ analysis_emb: None
++++ anti_alias_blur: 0.0
++++ backup: None
+++++best_run: None
++++ both_train_test: False
++++ bound_effect: False
++++ cat_kl_loss: None
++++@@ -38,7 +39,7 @@ create_play_len: 7
++++ create_play_run_steps: 3
++++ create_sec_goal_reward: 2.0
++++ create_target_reward: 1.0
++++-cuda: False
+++++cuda: True
++++ cuda_deterministic: False
++++ debug_render: False
++++ decay_clipping: False
++++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++++ encoder_dim: 64
++++ entropy_coef: 0.005
++++ env_name: CreateLevelPush-v0
+++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++++ eps: 1e-05
++++ eval_interval: 50
++++-eval_num_processes: None
+++++eval_num_processes: 1
++++ eval_only: False
++++ eval_split: False
++++ eval_split_ratio: 0.5
++++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++++ max_grid_steps: 50
++++ max_std_width: 3.0
++++ mega_res_interval: 4
+++++multitask: True
++++ n_clusters: 10
++++ n_distributions: 1
++++ n_hidden_option: 3
++++@@ -138,7 +141,7 @@ no_diag: True
++++ no_frame_stack: False
++++ no_initial_state: False
++++ no_overlap_env: False
++++-no_test_eval: False
+++++no_test_eval: True
++++ no_var: False
++++ normalize_embs: False
++++ not_upto: True
++++@@ -146,7 +149,7 @@ num_distributions: 400
++++ num_env_steps: 60000000
++++ num_eval: 20
++++ num_mini_batch: 4
++++-num_processes: 1
+++++num_processes: 4
++++ num_render: None
++++ num_steps: 384
++++ num_z: 1
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..cda9700 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..ebf34e4 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++++index 93c497a..479a608 100644
+++++--- a/new-actions-rl/arguments.py
++++++++ b/new-actions-rl/arguments.py
+++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++++ 
+++++     #### Multitask specific
+++++     parser.add_argument('--multitask', action='store_true', default=False)
++++++    parser.add_argument('--env-names', nargs='+', default=[])
+++++ 
+++++     #### Resume specific
+++++     parser.add_argument('--best-run', type=int, default=None)
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++index 00a83d9..37f6dc9 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++@@ -1 +1 @@
+++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++++\ No newline at end of file
++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++++\ No newline at end of file
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++index b531690..c4ff3d3 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++++          for (i, new) in enumerate(news):
+++++              if new:
+++++                  self.stacked_obs[i] = 0
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++++index d008c38..9b566fb 100755
+++++--- a/new-actions-rl/rlf/rl/envs.py
++++++++ b/new-actions-rl/rlf/rl/envs.py
+++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++++ 
+++++     return _thunk
+++++ 
+++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++++ 
+++++ def make_vec_envs(env_name,
+++++                   seed,
+++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++++                   trans_fn,
+++++                   args,
+++++                   num_frame_stack=None,
+++++-                  set_eval=False,
+++++-                  env_names_input=None):
++++++                  set_eval=False):
+++++ 
+++++     if args.multitask and not set_eval:
+++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++++                   set_eval=False,
+++++                   env_names_input=None):
+++++ 
++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     envs = [
+++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++++-        for env_name in env_names
++++++        for env_name in candidate_env_names
+++++     ]
+++++ 
+++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++++index 0d25c28..e45648c 100755
+++++--- a/new-actions-rl/rlf/rl/rl.py
++++++++ b/new-actions-rl/rlf/rl/rl.py
+++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++           end_update, lr_updates, args, test_args, checkpointer):
+++++ 
++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     if args.resume and start_update > 0:
+++++         start_update += 1
+++++ 
+++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++         log.start_interval_log()
+++++ 
+++++         if args.multitask:
+++++-            idx = np.random.randint(10000) % len(env_names)
++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++++             envs = envs_bulk[idx]
+++++-            args.env_name = env_names[idx]
+++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++++            args.env_name = actual_env_names[idx]
++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++++         else:
+++++             envs = envs_bulk
+++++ 
+++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++                 train_eval_envs = []
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++++                                train_eval_envs = None)
+++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++             else:
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++++                                train_eval_envs[i])
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++++index 953d419..edec780 100644
++++--- a/new-actions-rl/rlf/main.py
+++++++ b/new-actions-rl/rlf/main.py
++++@@ -39,7 +39,7 @@ def get_num_updates(args):
++++     return num_updates, lr_updates
++++ 
++++ 
++++-def get_fine_tune_run(load_name, env_name):
+++++def get_fine_tune_run(load_name, env_name, args):
++++     from rlf.exp_mgr.eval import get_max_run
++++     import wandb
++++     import subprocess
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++index 953d419..edec780 100644
+++--- a/new-actions-rl/rlf/main.py
++++++ b/new-actions-rl/rlf/main.py
+++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++     return num_updates, lr_updates
+++ 
+++ 
+++-def get_fine_tune_run(load_name, env_name):
++++def get_fine_tune_run(load_name, env_name, args):
+++     from rlf.exp_mgr.eval import get_max_run
+++     import wandb
+++     import subprocess
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..c06c75e 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++16/04/2024
++++14:42:37
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: 9349
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -109,7 +111,7 @@ kl_pen: None
+++ large_steps: 40
+++ latent_dim: 1
+++ load_all_data: False
+++-load_best_name: None
++++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
+++ load_dataset: True
+++ load_emb_logvar: True
+++ load_emb_model_file: None
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++@@ -193,7 +196,7 @@ render_result_figures: False
+++ render_text: False
+++ reparam: True
+++ result_dir: ./data/results
+++-resume: False
++++resume: True
+++ resume_emb_training: False
+++ reward_entropy_coef: 0.0
+++ rl_use_radam: False
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..ec24bd5 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..6d6f339 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,1081 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..37f6dc9 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..c4ff3d3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++index a55af28..9e018c4 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++@@ -1,11 +1,11 @@
++++ Date and Time:
++++-10/03/2024
++++-16:36:27
+++++15/04/2024
+++++22:26:28
++++ 
++++ action_base_hidden_size: 128
++++ action_base_output_size: 64
++++ action_proj_dim: 1
++++-action_random_sample: True
+++++action_random_sample: False
++++ action_seg_loc: ./data/action_segs
++++ action_set_size: 50
++++ algo: ppo
++++@@ -14,6 +14,7 @@ analysis_angle: None
++++ analysis_emb: None
++++ anti_alias_blur: 0.0
++++ backup: None
+++++best_run: None
++++ both_train_test: False
++++ bound_effect: False
++++ cat_kl_loss: None
++++@@ -38,7 +39,7 @@ create_play_len: 7
++++ create_play_run_steps: 3
++++ create_sec_goal_reward: 2.0
++++ create_target_reward: 1.0
++++-cuda: False
+++++cuda: True
++++ cuda_deterministic: False
++++ debug_render: False
++++ decay_clipping: False
++++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++++ encoder_dim: 64
++++ entropy_coef: 0.005
++++ env_name: CreateLevelPush-v0
+++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++++ eps: 1e-05
++++ eval_interval: 50
++++-eval_num_processes: None
+++++eval_num_processes: 1
++++ eval_only: False
++++ eval_split: False
++++ eval_split_ratio: 0.5
++++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++++ max_grid_steps: 50
++++ max_std_width: 3.0
++++ mega_res_interval: 4
+++++multitask: True
++++ n_clusters: 10
++++ n_distributions: 1
++++ n_hidden_option: 3
++++@@ -138,7 +141,7 @@ no_diag: True
++++ no_frame_stack: False
++++ no_initial_state: False
++++ no_overlap_env: False
++++-no_test_eval: False
+++++no_test_eval: True
++++ no_var: False
++++ normalize_embs: False
++++ not_upto: True
++++@@ -146,7 +149,7 @@ num_distributions: 400
++++ num_env_steps: 60000000
++++ num_eval: 20
++++ num_mini_batch: 4
++++-num_processes: 1
+++++num_processes: 4
++++ num_render: None
++++ num_steps: 384
++++ num_z: 1
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..cda9700 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..ebf34e4 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++++index 93c497a..479a608 100644
+++++--- a/new-actions-rl/arguments.py
++++++++ b/new-actions-rl/arguments.py
+++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++++ 
+++++     #### Multitask specific
+++++     parser.add_argument('--multitask', action='store_true', default=False)
++++++    parser.add_argument('--env-names', nargs='+', default=[])
+++++ 
+++++     #### Resume specific
+++++     parser.add_argument('--best-run', type=int, default=None)
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++index 00a83d9..37f6dc9 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++@@ -1 +1 @@
+++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++++\ No newline at end of file
++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++++\ No newline at end of file
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++index b531690..c4ff3d3 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++++          for (i, new) in enumerate(news):
+++++              if new:
+++++                  self.stacked_obs[i] = 0
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++++index d008c38..9b566fb 100755
+++++--- a/new-actions-rl/rlf/rl/envs.py
++++++++ b/new-actions-rl/rlf/rl/envs.py
+++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++++ 
+++++     return _thunk
+++++ 
+++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++++ 
+++++ def make_vec_envs(env_name,
+++++                   seed,
+++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++++                   trans_fn,
+++++                   args,
+++++                   num_frame_stack=None,
+++++-                  set_eval=False,
+++++-                  env_names_input=None):
++++++                  set_eval=False):
+++++ 
+++++     if args.multitask and not set_eval:
+++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++++                   set_eval=False,
+++++                   env_names_input=None):
+++++ 
++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     envs = [
+++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++++-        for env_name in env_names
++++++        for env_name in candidate_env_names
+++++     ]
+++++ 
+++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++++index 0d25c28..e45648c 100755
+++++--- a/new-actions-rl/rlf/rl/rl.py
++++++++ b/new-actions-rl/rlf/rl/rl.py
+++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++           end_update, lr_updates, args, test_args, checkpointer):
+++++ 
++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     if args.resume and start_update > 0:
+++++         start_update += 1
+++++ 
+++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++         log.start_interval_log()
+++++ 
+++++         if args.multitask:
+++++-            idx = np.random.randint(10000) % len(env_names)
++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++++             envs = envs_bulk[idx]
+++++-            args.env_name = env_names[idx]
+++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++++            args.env_name = actual_env_names[idx]
++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++++         else:
+++++             envs = envs_bulk
+++++ 
+++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++                 train_eval_envs = []
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++++                                train_eval_envs = None)
+++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++             else:
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++++                                train_eval_envs[i])
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++++index 953d419..edec780 100644
++++--- a/new-actions-rl/rlf/main.py
+++++++ b/new-actions-rl/rlf/main.py
++++@@ -39,7 +39,7 @@ def get_num_updates(args):
++++     return num_updates, lr_updates
++++ 
++++ 
++++-def get_fine_tune_run(load_name, env_name):
+++++def get_fine_tune_run(load_name, env_name, args):
++++     from rlf.exp_mgr.eval import get_max_run
++++     import wandb
++++     import subprocess
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++index a55af28..5c86c73 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++@@ -1,11 +1,11 @@
++++ Date and Time:
++++-10/03/2024
++++-16:36:27
+++++16/04/2024
+++++11:03:41
++++ 
++++ action_base_hidden_size: 128
++++ action_base_output_size: 64
++++ action_proj_dim: 1
++++-action_random_sample: True
+++++action_random_sample: False
++++ action_seg_loc: ./data/action_segs
++++ action_set_size: 50
++++ algo: ppo
++++@@ -14,6 +14,7 @@ analysis_angle: None
++++ analysis_emb: None
++++ anti_alias_blur: 0.0
++++ backup: None
+++++best_run: 5799
++++ both_train_test: False
++++ bound_effect: False
++++ cat_kl_loss: None
++++@@ -38,7 +39,7 @@ create_play_len: 7
++++ create_play_run_steps: 3
++++ create_sec_goal_reward: 2.0
++++ create_target_reward: 1.0
++++-cuda: False
+++++cuda: True
++++ cuda_deterministic: False
++++ debug_render: False
++++ decay_clipping: False
++++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++++ encoder_dim: 64
++++ entropy_coef: 0.005
++++ env_name: CreateLevelPush-v0
+++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++++ eps: 1e-05
++++ eval_interval: 50
++++-eval_num_processes: None
+++++eval_num_processes: 1
++++ eval_only: False
++++ eval_split: False
++++ eval_split_ratio: 0.5
++++@@ -109,7 +111,7 @@ kl_pen: None
++++ large_steps: 40
++++ latent_dim: 1
++++ load_all_data: False
++++-load_best_name: None
+++++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
++++ load_dataset: True
++++ load_emb_logvar: True
++++ load_emb_model_file: None
++++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++++ max_grid_steps: 50
++++ max_std_width: 3.0
++++ mega_res_interval: 4
+++++multitask: True
++++ n_clusters: 10
++++ n_distributions: 1
++++ n_hidden_option: 3
++++@@ -138,7 +141,7 @@ no_diag: True
++++ no_frame_stack: False
++++ no_initial_state: False
++++ no_overlap_env: False
++++-no_test_eval: False
+++++no_test_eval: True
++++ no_var: False
++++ normalize_embs: False
++++ not_upto: True
++++@@ -146,7 +149,7 @@ num_distributions: 400
++++ num_env_steps: 60000000
++++ num_eval: 20
++++ num_mini_batch: 4
++++-num_processes: 1
+++++num_processes: 4
++++ num_render: None
++++ num_steps: 384
++++ num_z: 1
++++@@ -193,7 +196,7 @@ render_result_figures: False
++++ render_text: False
++++ reparam: True
++++ result_dir: ./data/results
++++-resume: False
+++++resume: True
++++ resume_emb_training: False
++++ reward_entropy_coef: 0.0
++++ rl_use_radam: False
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..e3712f3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..fde463e 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,433 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++++index 93c497a..479a608 100644
+++++--- a/new-actions-rl/arguments.py
++++++++ b/new-actions-rl/arguments.py
+++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++++ 
+++++     #### Multitask specific
+++++     parser.add_argument('--multitask', action='store_true', default=False)
++++++    parser.add_argument('--env-names', nargs='+', default=[])
+++++ 
+++++     #### Resume specific
+++++     parser.add_argument('--best-run', type=int, default=None)
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++index 00a83d9..37f6dc9 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++@@ -1 +1 @@
+++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++++\ No newline at end of file
++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++++\ No newline at end of file
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++index b531690..c4ff3d3 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++++          for (i, new) in enumerate(news):
+++++              if new:
+++++                  self.stacked_obs[i] = 0
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++++index d008c38..9b566fb 100755
+++++--- a/new-actions-rl/rlf/rl/envs.py
++++++++ b/new-actions-rl/rlf/rl/envs.py
+++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++++ 
+++++     return _thunk
+++++ 
+++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++++ 
+++++ def make_vec_envs(env_name,
+++++                   seed,
+++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++++                   trans_fn,
+++++                   args,
+++++                   num_frame_stack=None,
+++++-                  set_eval=False,
+++++-                  env_names_input=None):
++++++                  set_eval=False):
+++++ 
+++++     if args.multitask and not set_eval:
+++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++++                   set_eval=False,
+++++                   env_names_input=None):
+++++ 
++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     envs = [
+++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++++-        for env_name in env_names
++++++        for env_name in candidate_env_names
+++++     ]
+++++ 
+++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++++index 0d25c28..e45648c 100755
+++++--- a/new-actions-rl/rlf/rl/rl.py
++++++++ b/new-actions-rl/rlf/rl/rl.py
+++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++           end_update, lr_updates, args, test_args, checkpointer):
+++++ 
++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     if args.resume and start_update > 0:
+++++         start_update += 1
+++++ 
+++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++         log.start_interval_log()
+++++ 
+++++         if args.multitask:
+++++-            idx = np.random.randint(10000) % len(env_names)
++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++++             envs = envs_bulk[idx]
+++++-            args.env_name = env_names[idx]
+++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++++            args.env_name = actual_env_names[idx]
++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++++         else:
+++++             envs = envs_bulk
+++++ 
+++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++                 train_eval_envs = []
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++++                                train_eval_envs = None)
+++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++             else:
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++++                                train_eval_envs[i])
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++++index 93c497a..479a608 100644
+++++--- a/new-actions-rl/arguments.py
++++++++ b/new-actions-rl/arguments.py
+++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++++ 
+++++     #### Multitask specific
+++++     parser.add_argument('--multitask', action='store_true', default=False)
++++++    parser.add_argument('--env-names', nargs='+', default=[])
+++++ 
+++++     #### Resume specific
+++++     parser.add_argument('--best-run', type=int, default=None)
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++index a55af28..9e018c4 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++@@ -1,11 +1,11 @@
+++++ Date and Time:
+++++-10/03/2024
+++++-16:36:27
++++++15/04/2024
++++++22:26:28
+++++ 
+++++ action_base_hidden_size: 128
+++++ action_base_output_size: 64
+++++ action_proj_dim: 1
+++++-action_random_sample: True
++++++action_random_sample: False
+++++ action_seg_loc: ./data/action_segs
+++++ action_set_size: 50
+++++ algo: ppo
+++++@@ -14,6 +14,7 @@ analysis_angle: None
+++++ analysis_emb: None
+++++ anti_alias_blur: 0.0
+++++ backup: None
++++++best_run: None
+++++ both_train_test: False
+++++ bound_effect: False
+++++ cat_kl_loss: None
+++++@@ -38,7 +39,7 @@ create_play_len: 7
+++++ create_play_run_steps: 3
+++++ create_sec_goal_reward: 2.0
+++++ create_target_reward: 1.0
+++++-cuda: False
++++++cuda: True
+++++ cuda_deterministic: False
+++++ debug_render: False
+++++ decay_clipping: False
+++++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++++ encoder_dim: 64
+++++ entropy_coef: 0.005
+++++ env_name: CreateLevelPush-v0
++++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++++ eps: 1e-05
+++++ eval_interval: 50
+++++-eval_num_processes: None
++++++eval_num_processes: 1
+++++ eval_only: False
+++++ eval_split: False
+++++ eval_split_ratio: 0.5
+++++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++++ max_grid_steps: 50
+++++ max_std_width: 3.0
+++++ mega_res_interval: 4
++++++multitask: True
+++++ n_clusters: 10
+++++ n_distributions: 1
+++++ n_hidden_option: 3
+++++@@ -138,7 +141,7 @@ no_diag: True
+++++ no_frame_stack: False
+++++ no_initial_state: False
+++++ no_overlap_env: False
+++++-no_test_eval: False
++++++no_test_eval: True
+++++ no_var: False
+++++ normalize_embs: False
+++++ not_upto: True
+++++@@ -146,7 +149,7 @@ num_distributions: 400
+++++ num_env_steps: 60000000
+++++ num_eval: 20
+++++ num_mini_batch: 4
+++++-num_processes: 1
++++++num_processes: 4
+++++ num_render: None
+++++ num_steps: 384
+++++ num_z: 1
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++index 00a83d9..cda9700 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++@@ -1 +1 @@
+++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++++\ No newline at end of file
++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++++\ No newline at end of file
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++index b531690..ebf34e4 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
+++++          for (i, new) in enumerate(news):
+++++              if new:
+++++                  self.stacked_obs[i] = 0
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++++index 93c497a..479a608 100644
++++++--- a/new-actions-rl/arguments.py
+++++++++ b/new-actions-rl/arguments.py
++++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++++ 
++++++     #### Multitask specific
++++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++++    parser.add_argument('--env-names', nargs='+', default=[])
++++++ 
++++++     #### Resume specific
++++++     parser.add_argument('--best-run', type=int, default=None)
++++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++index 00a83d9..37f6dc9 100644
++++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++@@ -1 +1 @@
++++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++++\ No newline at end of file
+++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++++\ No newline at end of file
++++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++index b531690..c4ff3d3 100644
++++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++++          for (i, new) in enumerate(news):
++++++              if new:
++++++                  self.stacked_obs[i] = 0
+++++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++++index d008c38..9b566fb 100755
++++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++++ b/new-actions-rl/rlf/rl/envs.py
++++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++++ 
++++++     return _thunk
++++++ 
++++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++++ 
++++++ def make_vec_envs(env_name,
++++++                   seed,
++++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++++                   trans_fn,
++++++                   args,
++++++                   num_frame_stack=None,
++++++-                  set_eval=False,
++++++-                  env_names_input=None):
+++++++                  set_eval=False):
++++++ 
++++++     if args.multitask and not set_eval:
++++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++++                   set_eval=False,
++++++                   env_names_input=None):
++++++ 
+++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++++     envs = [
++++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++++-        for env_name in env_names
+++++++        for env_name in candidate_env_names
++++++     ]
++++++ 
++++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++++index 0d25c28..e45648c 100755
++++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++++ b/new-actions-rl/rlf/rl/rl.py
++++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++++           end_update, lr_updates, args, test_args, checkpointer):
++++++ 
+++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++++     if args.resume and start_update > 0:
++++++         start_update += 1
++++++ 
++++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++++         log.start_interval_log()
++++++ 
++++++         if args.multitask:
++++++-            idx = np.random.randint(10000) % len(env_names)
+++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++++             envs = envs_bulk[idx]
++++++-            args.env_name = env_names[idx]
++++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++++            args.env_name = actual_env_names[idx]
+++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++++         else:
++++++             envs = envs_bulk
++++++ 
++++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++++                 train_eval_envs = []
++++++                 for i in range(len(envs_bulk)):
++++++                     eval_envs = envs_bulk[i]
++++++-                    args.env_name = env_names[i]
++++++-                    print(f"evaluating for env {env_names[i]}")
+++++++                    args.env_name = actual_env_names[i]
+++++++                    print(f"evaluating for env {actual_env_names[i]}")
++++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++++                                train_eval_envs = None)
++++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++++             else:
++++++                 for i in range(len(envs_bulk)):
++++++                     eval_envs = envs_bulk[i]
++++++-                    args.env_name = env_names[i]
++++++-                    print(f"evaluating for env {env_names[i]}")
+++++++                    args.env_name = actual_env_names[i]
+++++++                    print(f"evaluating for env {actual_env_names[i]}")
++++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++++                                train_eval_envs[i])
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++++index 953d419..edec780 100644
+++++--- a/new-actions-rl/rlf/main.py
++++++++ b/new-actions-rl/rlf/main.py
+++++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++++     return num_updates, lr_updates
+++++ 
+++++ 
+++++-def get_fine_tune_run(load_name, env_name):
++++++def get_fine_tune_run(load_name, env_name, args):
+++++     from rlf.exp_mgr.eval import get_max_run
+++++     import wandb
+++++     import subprocess
+++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++++index d008c38..9b566fb 100755
+++++--- a/new-actions-rl/rlf/rl/envs.py
++++++++ b/new-actions-rl/rlf/rl/envs.py
+++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++++ 
+++++     return _thunk
+++++ 
+++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++++ 
+++++ def make_vec_envs(env_name,
+++++                   seed,
+++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++++                   trans_fn,
+++++                   args,
+++++                   num_frame_stack=None,
+++++-                  set_eval=False,
+++++-                  env_names_input=None):
++++++                  set_eval=False):
+++++ 
+++++     if args.multitask and not set_eval:
+++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++++                   set_eval=False,
+++++                   env_names_input=None):
+++++ 
++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     envs = [
+++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++++-        for env_name in env_names
++++++        for env_name in candidate_env_names
+++++     ]
+++++ 
+++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++++index 0d25c28..e45648c 100755
+++++--- a/new-actions-rl/rlf/rl/rl.py
++++++++ b/new-actions-rl/rlf/rl/rl.py
+++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++           end_update, lr_updates, args, test_args, checkpointer):
+++++ 
++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     if args.resume and start_update > 0:
+++++         start_update += 1
+++++ 
+++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++         log.start_interval_log()
+++++ 
+++++         if args.multitask:
+++++-            idx = np.random.randint(10000) % len(env_names)
++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++++             envs = envs_bulk[idx]
+++++-            args.env_name = env_names[idx]
+++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++++            args.env_name = actual_env_names[idx]
++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++++         else:
+++++             envs = envs_bulk
+++++ 
+++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++                 train_eval_envs = []
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++++                                train_eval_envs = None)
+++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++             else:
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++++                                train_eval_envs[i])
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++++index 953d419..edec780 100644
++++--- a/new-actions-rl/rlf/main.py
+++++++ b/new-actions-rl/rlf/main.py
++++@@ -39,7 +39,7 @@ def get_num_updates(args):
++++     return num_updates, lr_updates
++++ 
++++ 
++++-def get_fine_tune_run(load_name, env_name):
+++++def get_fine_tune_run(load_name, env_name, args):
++++     from rlf.exp_mgr.eval import get_max_run
++++     import wandb
++++     import subprocess
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++index 953d419..edec780 100644
+++--- a/new-actions-rl/rlf/main.py
++++++ b/new-actions-rl/rlf/main.py
+++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++     return num_updates, lr_updates
+++ 
+++ 
+++-def get_fine_tune_run(load_name, env_name):
++++def get_fine_tune_run(load_name, env_name, args):
+++     from rlf.exp_mgr.eval import get_max_run
+++     import wandb
+++     import subprocess
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++index 953d419..edec780 100644
++--- a/new-actions-rl/rlf/main.py
+++++ b/new-actions-rl/rlf/main.py
++@@ -39,7 +39,7 @@ def get_num_updates(args):
++     return num_updates, lr_updates
++ 
++ 
++-def get_fine_tune_run(load_name, env_name):
+++def get_fine_tune_run(load_name, env_name, args):
++     from rlf.exp_mgr.eval import get_max_run
++     import wandb
++     import subprocess
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..471a8c9 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++17/04/2024
+++01:03:09
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: 16449
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -109,7 +111,7 @@ kl_pen: None
++ large_steps: 40
++ latent_dim: 1
++ load_all_data: False
++-load_best_name: None
+++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
++ load_dataset: True
++ load_emb_logvar: True
++ load_emb_model_file: None
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++@@ -193,7 +196,7 @@ render_result_figures: False
++ render_text: False
++ reparam: True
++ result_dir: ./data/results
++-resume: False
+++resume: True
++ resume_emb_training: False
++ reward_entropy_coef: 0.0
++ rl_use_radam: False
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..5cdd351 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 16449 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v
+\ No newline at end of file
+diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+index 953d419..edec780 100644
+--- a/new-actions-rl/rlf/main.py
++++ b/new-actions-rl/rlf/main.py
+@@ -39,7 +39,7 @@ def get_num_updates(args):
+     return num_updates, lr_updates
+ 
+ 
+-def get_fine_tune_run(load_name, env_name):
++def get_fine_tune_run(load_name, env_name, args):
+     from rlf.exp_mgr.eval import get_max_run
+     import wandb
+     import subprocess
+diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+index d008c38..9b566fb 100755
+--- a/new-actions-rl/rlf/rl/envs.py
++++ b/new-actions-rl/rlf/rl/envs.py
+@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+ 
+     return _thunk
+ 
+-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+ 
+ def make_vec_envs(env_name,
+                   seed,
+@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+                   trans_fn,
+                   args,
+                   num_frame_stack=None,
+-                  set_eval=False,
+-                  env_names_input=None):
++                  set_eval=False):
+ 
+     if args.multitask and not set_eval:
+         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+                   set_eval=False,
+                   env_names_input=None):
+ 
++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     envs = [
+         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+-        for env_name in env_names
++        for env_name in candidate_env_names
+     ]
+ 
+     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+index 0d25c28..e45648c 100755
+--- a/new-actions-rl/rlf/rl/rl.py
++++ b/new-actions-rl/rlf/rl/rl.py
+@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+           end_update, lr_updates, args, test_args, checkpointer):
+ 
++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     if args.resume and start_update > 0:
+         start_update += 1
+ 
+@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+         log.start_interval_log()
+ 
+         if args.multitask:
+-            idx = np.random.randint(10000) % len(env_names)
++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+             envs = envs_bulk[idx]
+-            args.env_name = env_names[idx]
+-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++            args.env_name = actual_env_names[idx]
++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+         else:
+             envs = envs_bulk
+ 
+@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+                 train_eval_envs = []
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs = None,
+                                train_eval_envs = None)
+@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+             else:
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs[i],
+                                train_eval_envs[i])
+347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+index 93c497a..479a608 100644
+--- a/new-actions-rl/arguments.py
++++ b/new-actions-rl/arguments.py
+@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+ 
+     #### Multitask specific
+     parser.add_argument('--multitask', action='store_true', default=False)
++    parser.add_argument('--env-names', nargs='+', default=[])
+ 
+     #### Resume specific
+     parser.add_argument('--best-run', type=int, default=None)
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+index a55af28..e8cd4ed 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+@@ -1,11 +1,11 @@
+ Date and Time:
+-10/03/2024
+-16:36:27
++17/04/2024
++12:09:34
+ 
+ action_base_hidden_size: 128
+ action_base_output_size: 64
+ action_proj_dim: 1
+-action_random_sample: True
++action_random_sample: False
+ action_seg_loc: ./data/action_segs
+ action_set_size: 50
+ algo: ppo
+@@ -14,6 +14,7 @@ analysis_angle: None
+ analysis_emb: None
+ anti_alias_blur: 0.0
+ backup: None
++best_run: 22299
+ both_train_test: False
+ bound_effect: False
+ cat_kl_loss: None
+@@ -38,7 +39,7 @@ create_play_len: 7
+ create_play_run_steps: 3
+ create_sec_goal_reward: 2.0
+ create_target_reward: 1.0
+-cuda: False
++cuda: True
+ cuda_deterministic: False
+ debug_render: False
+ decay_clipping: False
+@@ -73,9 +74,10 @@ emb_viz_interval: 5
+ encoder_dim: 64
+ entropy_coef: 0.005
+ env_name: CreateLevelPush-v0
++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+ eps: 1e-05
+ eval_interval: 50
+-eval_num_processes: None
++eval_num_processes: 1
+ eval_only: False
+ eval_split: False
+ eval_split_ratio: 0.5
+@@ -109,7 +111,7 @@ kl_pen: None
+ large_steps: 40
+ latent_dim: 1
+ load_all_data: False
+-load_best_name: None
++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
+ load_dataset: True
+ load_emb_logvar: True
+ load_emb_model_file: None
+@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+ max_grid_steps: 50
+ max_std_width: 3.0
+ mega_res_interval: 4
++multitask: True
+ n_clusters: 10
+ n_distributions: 1
+ n_hidden_option: 3
+@@ -138,7 +141,7 @@ no_diag: True
+ no_frame_stack: False
+ no_initial_state: False
+ no_overlap_env: False
+-no_test_eval: False
++no_test_eval: True
+ no_var: False
+ normalize_embs: False
+ not_upto: True
+@@ -146,7 +149,7 @@ num_distributions: 400
+ num_env_steps: 60000000
+ num_eval: 20
+ num_mini_batch: 4
+-num_processes: 1
++num_processes: 4
+ num_render: None
+ num_steps: 384
+ num_z: 1
+@@ -193,7 +196,7 @@ render_result_figures: False
+ render_text: False
+ reparam: True
+ result_dir: ./data/results
+-resume: False
++resume: True
+ resume_emb_training: False
+ reward_entropy_coef: 0.0
+ rl_use_radam: False
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+index 00a83d9..c83c000 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+@@ -1 +1 @@
+-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+\ No newline at end of file
++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 16449 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v
\ No newline at end of file
diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
index 953d419..edec780 100644
--- a/new-actions-rl/rlf/main.py
+++ b/new-actions-rl/rlf/main.py
@@ -39,7 +39,7 @@ def get_num_updates(args):
     return num_updates, lr_updates
 
 
-def get_fine_tune_run(load_name, env_name):
+def get_fine_tune_run(load_name, env_name, args):
     from rlf.exp_mgr.eval import get_max_run
     import wandb
     import subprocess
diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
index d008c38..9b566fb 100755
--- a/new-actions-rl/rlf/rl/envs.py
+++ b/new-actions-rl/rlf/rl/envs.py
@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
 
     return _thunk
 
-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
 
 def make_vec_envs(env_name,
                   seed,
@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
                   trans_fn,
                   args,
                   num_frame_stack=None,
-                  set_eval=False,
-                  env_names_input=None):
+                  set_eval=False):
 
     if args.multitask and not set_eval:
         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
                   set_eval=False,
                   env_names_input=None):
 
+    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
     envs = [
         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
-        for env_name in env_names
+        for env_name in candidate_env_names
     ]
 
     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
index 0d25c28..e45648c 100755
--- a/new-actions-rl/rlf/rl/rl.py
+++ b/new-actions-rl/rlf/rl/rl.py
@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
 def train(envs_bulk, rollouts, policy, updater, log, start_update,
           end_update, lr_updates, args, test_args, checkpointer):
 
+    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
     if args.resume and start_update > 0:
         start_update += 1
 
@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
         log.start_interval_log()
 
         if args.multitask:
-            idx = np.random.randint(10000) % len(env_names)
+            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
             envs = envs_bulk[idx]
-            args.env_name = env_names[idx]
-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+            args.env_name = actual_env_names[idx]
+            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
         else:
             envs = envs_bulk
 
@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
                 train_eval_envs = []
                 for i in range(len(envs_bulk)):
                     eval_envs = envs_bulk[i]
-                    args.env_name = env_names[i]
-                    print(f"evaluating for env {env_names[i]}")
+                    args.env_name = actual_env_names[i]
+                    print(f"evaluating for env {actual_env_names[i]}")
                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
                                test_args, log, j, total_num_steps, test_eval_envs = None,
                                train_eval_envs = None)
@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
             else:
                 for i in range(len(envs_bulk)):
                     eval_envs = envs_bulk[i]
-                    args.env_name = env_names[i]
-                    print(f"evaluating for env {env_names[i]}")
+                    args.env_name = actual_env_names[i]
+                    print(f"evaluating for env {actual_env_names[i]}")
                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
                                test_args, log, j, total_num_steps, test_eval_envs[i],
                                train_eval_envs[i])
347a0e6efbab5459e5d4db3b55c040154efa2886
diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
index 93c497a..479a608 100644
--- a/new-actions-rl/arguments.py
+++ b/new-actions-rl/arguments.py
@@ -616,6 +616,7 @@ def get_args(arg_str=None):
 
     #### Multitask specific
     parser.add_argument('--multitask', action='store_true', default=False)
+    parser.add_argument('--env-names', nargs='+', default=[])
 
     #### Resume specific
     parser.add_argument('--best-run', type=int, default=None)
diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
index a55af28..9018754 100644
--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
@@ -1,11 +1,11 @@
 Date and Time:
-10/03/2024
-16:36:27
+17/04/2024
+19:25:55
 
 action_base_hidden_size: 128
 action_base_output_size: 64
 action_proj_dim: 1
-action_random_sample: True
+action_random_sample: False
 action_seg_loc: ./data/action_segs
 action_set_size: 50
 algo: ppo
@@ -14,6 +14,7 @@ analysis_angle: None
 analysis_emb: None
 anti_alias_blur: 0.0
 backup: None
+best_run: 28099
 both_train_test: False
 bound_effect: False
 cat_kl_loss: None
@@ -38,7 +39,7 @@ create_play_len: 7
 create_play_run_steps: 3
 create_sec_goal_reward: 2.0
 create_target_reward: 1.0
-cuda: False
+cuda: True
 cuda_deterministic: False
 debug_render: False
 decay_clipping: False
@@ -73,9 +74,10 @@ emb_viz_interval: 5
 encoder_dim: 64
 entropy_coef: 0.005
 env_name: CreateLevelPush-v0
+env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
 eps: 1e-05
 eval_interval: 50
-eval_num_processes: None
+eval_num_processes: 1
 eval_only: False
 eval_split: False
 eval_split_ratio: 0.5
@@ -109,7 +111,7 @@ kl_pen: None
 large_steps: 40
 latent_dim: 1
 load_all_data: False
-load_best_name: None
+load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
 load_dataset: True
 load_emb_logvar: True
 load_emb_model_file: None
@@ -126,6 +128,7 @@ max_grad_norm: 0.5
 max_grid_steps: 50
 max_std_width: 3.0
 mega_res_interval: 4
+multitask: True
 n_clusters: 10
 n_distributions: 1
 n_hidden_option: 3
@@ -138,7 +141,7 @@ no_diag: True
 no_frame_stack: False
 no_initial_state: False
 no_overlap_env: False
-no_test_eval: False
+no_test_eval: True
 no_var: False
 normalize_embs: False
 not_upto: True
@@ -146,7 +149,7 @@ num_distributions: 400
 num_env_steps: 60000000
 num_eval: 20
 num_mini_batch: 4
-num_processes: 1
+num_processes: 4
 num_render: None
 num_steps: 384
 num_z: 1
@@ -193,7 +196,7 @@ render_result_figures: False
 render_text: False
 reparam: True
 result_dir: ./data/results
-resume: False
+resume: True
 resume_emb_training: False
 reward_entropy_coef: 0.0
 rl_use_radam: False
diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
index 00a83d9..a2b5735 100644
--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
@@ -1 +1 @@
-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
\ No newline at end of file
+python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 16449 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 22299 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 28099 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 31649 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
\ No newline at end of file
diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
index b531690..a4e02c7 100644
--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
@@ -10764,3 +10764,20972 @@ index b41b6b9..e59734f 100755
          for (i, new) in enumerate(news):
              if new:
                  self.stacked_obs[i] = 0
+347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+index 93c497a..479a608 100644
+--- a/new-actions-rl/arguments.py
++++ b/new-actions-rl/arguments.py
+@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+ 
+     #### Multitask specific
+     parser.add_argument('--multitask', action='store_true', default=False)
++    parser.add_argument('--env-names', nargs='+', default=[])
+ 
+     #### Resume specific
+     parser.add_argument('--best-run', type=int, default=None)
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+index 00a83d9..37f6dc9 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+@@ -1 +1 @@
+-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+\ No newline at end of file
++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+\ No newline at end of file
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+index b531690..c4ff3d3 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+          for (i, new) in enumerate(news):
+              if new:
+                  self.stacked_obs[i] = 0
++347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+index d008c38..9b566fb 100755
+--- a/new-actions-rl/rlf/rl/envs.py
++++ b/new-actions-rl/rlf/rl/envs.py
+@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+ 
+     return _thunk
+ 
+-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+ 
+ def make_vec_envs(env_name,
+                   seed,
+@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+                   trans_fn,
+                   args,
+                   num_frame_stack=None,
+-                  set_eval=False,
+-                  env_names_input=None):
++                  set_eval=False):
+ 
+     if args.multitask and not set_eval:
+         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+                   set_eval=False,
+                   env_names_input=None):
+ 
++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     envs = [
+         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+-        for env_name in env_names
++        for env_name in candidate_env_names
+     ]
+ 
+     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+index 0d25c28..e45648c 100755
+--- a/new-actions-rl/rlf/rl/rl.py
++++ b/new-actions-rl/rlf/rl/rl.py
+@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+           end_update, lr_updates, args, test_args, checkpointer):
+ 
++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     if args.resume and start_update > 0:
+         start_update += 1
+ 
+@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+         log.start_interval_log()
+ 
+         if args.multitask:
+-            idx = np.random.randint(10000) % len(env_names)
++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+             envs = envs_bulk[idx]
+-            args.env_name = env_names[idx]
+-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++            args.env_name = actual_env_names[idx]
++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+         else:
+             envs = envs_bulk
+ 
+@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+                 train_eval_envs = []
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs = None,
+                                train_eval_envs = None)
+@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+             else:
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs[i],
+                                train_eval_envs[i])
+347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+index 93c497a..479a608 100644
+--- a/new-actions-rl/arguments.py
++++ b/new-actions-rl/arguments.py
+@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+ 
+     #### Multitask specific
+     parser.add_argument('--multitask', action='store_true', default=False)
++    parser.add_argument('--env-names', nargs='+', default=[])
+ 
+     #### Resume specific
+     parser.add_argument('--best-run', type=int, default=None)
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+index a55af28..9e018c4 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+@@ -1,11 +1,11 @@
+ Date and Time:
+-10/03/2024
+-16:36:27
++15/04/2024
++22:26:28
+ 
+ action_base_hidden_size: 128
+ action_base_output_size: 64
+ action_proj_dim: 1
+-action_random_sample: True
++action_random_sample: False
+ action_seg_loc: ./data/action_segs
+ action_set_size: 50
+ algo: ppo
+@@ -14,6 +14,7 @@ analysis_angle: None
+ analysis_emb: None
+ anti_alias_blur: 0.0
+ backup: None
++best_run: None
+ both_train_test: False
+ bound_effect: False
+ cat_kl_loss: None
+@@ -38,7 +39,7 @@ create_play_len: 7
+ create_play_run_steps: 3
+ create_sec_goal_reward: 2.0
+ create_target_reward: 1.0
+-cuda: False
++cuda: True
+ cuda_deterministic: False
+ debug_render: False
+ decay_clipping: False
+@@ -73,9 +74,10 @@ emb_viz_interval: 5
+ encoder_dim: 64
+ entropy_coef: 0.005
+ env_name: CreateLevelPush-v0
++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+ eps: 1e-05
+ eval_interval: 50
+-eval_num_processes: None
++eval_num_processes: 1
+ eval_only: False
+ eval_split: False
+ eval_split_ratio: 0.5
+@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+ max_grid_steps: 50
+ max_std_width: 3.0
+ mega_res_interval: 4
++multitask: True
+ n_clusters: 10
+ n_distributions: 1
+ n_hidden_option: 3
+@@ -138,7 +141,7 @@ no_diag: True
+ no_frame_stack: False
+ no_initial_state: False
+ no_overlap_env: False
+-no_test_eval: False
++no_test_eval: True
+ no_var: False
+ normalize_embs: False
+ not_upto: True
+@@ -146,7 +149,7 @@ num_distributions: 400
+ num_env_steps: 60000000
+ num_eval: 20
+ num_mini_batch: 4
+-num_processes: 1
++num_processes: 4
+ num_render: None
+ num_steps: 384
+ num_z: 1
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+index 00a83d9..cda9700 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+@@ -1 +1 @@
+-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+\ No newline at end of file
++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+\ No newline at end of file
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+index b531690..ebf34e4 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
+          for (i, new) in enumerate(news):
+              if new:
+                  self.stacked_obs[i] = 0
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..37f6dc9 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..c4ff3d3 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+index 953d419..edec780 100644
+--- a/new-actions-rl/rlf/main.py
++++ b/new-actions-rl/rlf/main.py
+@@ -39,7 +39,7 @@ def get_num_updates(args):
+     return num_updates, lr_updates
+ 
+ 
+-def get_fine_tune_run(load_name, env_name):
++def get_fine_tune_run(load_name, env_name, args):
+     from rlf.exp_mgr.eval import get_max_run
+     import wandb
+     import subprocess
+diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+index d008c38..9b566fb 100755
+--- a/new-actions-rl/rlf/rl/envs.py
++++ b/new-actions-rl/rlf/rl/envs.py
+@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+ 
+     return _thunk
+ 
+-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+ 
+ def make_vec_envs(env_name,
+                   seed,
+@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+                   trans_fn,
+                   args,
+                   num_frame_stack=None,
+-                  set_eval=False,
+-                  env_names_input=None):
++                  set_eval=False):
+ 
+     if args.multitask and not set_eval:
+         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+                   set_eval=False,
+                   env_names_input=None):
+ 
++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     envs = [
+         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+-        for env_name in env_names
++        for env_name in candidate_env_names
+     ]
+ 
+     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+index 0d25c28..e45648c 100755
+--- a/new-actions-rl/rlf/rl/rl.py
++++ b/new-actions-rl/rlf/rl/rl.py
+@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+           end_update, lr_updates, args, test_args, checkpointer):
+ 
++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     if args.resume and start_update > 0:
+         start_update += 1
+ 
+@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+         log.start_interval_log()
+ 
+         if args.multitask:
+-            idx = np.random.randint(10000) % len(env_names)
++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+             envs = envs_bulk[idx]
+-            args.env_name = env_names[idx]
+-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++            args.env_name = actual_env_names[idx]
++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+         else:
+             envs = envs_bulk
+ 
+@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+                 train_eval_envs = []
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs = None,
+                                train_eval_envs = None)
+@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+             else:
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs[i],
+                                train_eval_envs[i])
+347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+index 93c497a..479a608 100644
+--- a/new-actions-rl/arguments.py
++++ b/new-actions-rl/arguments.py
+@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+ 
+     #### Multitask specific
+     parser.add_argument('--multitask', action='store_true', default=False)
++    parser.add_argument('--env-names', nargs='+', default=[])
+ 
+     #### Resume specific
+     parser.add_argument('--best-run', type=int, default=None)
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+index a55af28..5c86c73 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+@@ -1,11 +1,11 @@
+ Date and Time:
+-10/03/2024
+-16:36:27
++16/04/2024
++11:03:41
+ 
+ action_base_hidden_size: 128
+ action_base_output_size: 64
+ action_proj_dim: 1
+-action_random_sample: True
++action_random_sample: False
+ action_seg_loc: ./data/action_segs
+ action_set_size: 50
+ algo: ppo
+@@ -14,6 +14,7 @@ analysis_angle: None
+ analysis_emb: None
+ anti_alias_blur: 0.0
+ backup: None
++best_run: 5799
+ both_train_test: False
+ bound_effect: False
+ cat_kl_loss: None
+@@ -38,7 +39,7 @@ create_play_len: 7
+ create_play_run_steps: 3
+ create_sec_goal_reward: 2.0
+ create_target_reward: 1.0
+-cuda: False
++cuda: True
+ cuda_deterministic: False
+ debug_render: False
+ decay_clipping: False
+@@ -73,9 +74,10 @@ emb_viz_interval: 5
+ encoder_dim: 64
+ entropy_coef: 0.005
+ env_name: CreateLevelPush-v0
++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+ eps: 1e-05
+ eval_interval: 50
+-eval_num_processes: None
++eval_num_processes: 1
+ eval_only: False
+ eval_split: False
+ eval_split_ratio: 0.5
+@@ -109,7 +111,7 @@ kl_pen: None
+ large_steps: 40
+ latent_dim: 1
+ load_all_data: False
+-load_best_name: None
++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
+ load_dataset: True
+ load_emb_logvar: True
+ load_emb_model_file: None
+@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+ max_grid_steps: 50
+ max_std_width: 3.0
+ mega_res_interval: 4
++multitask: True
+ n_clusters: 10
+ n_distributions: 1
+ n_hidden_option: 3
+@@ -138,7 +141,7 @@ no_diag: True
+ no_frame_stack: False
+ no_initial_state: False
+ no_overlap_env: False
+-no_test_eval: False
++no_test_eval: True
+ no_var: False
+ normalize_embs: False
+ not_upto: True
+@@ -146,7 +149,7 @@ num_distributions: 400
+ num_env_steps: 60000000
+ num_eval: 20
+ num_mini_batch: 4
+-num_processes: 1
++num_processes: 4
+ num_render: None
+ num_steps: 384
+ num_z: 1
+@@ -193,7 +196,7 @@ render_result_figures: False
+ render_text: False
+ reparam: True
+ result_dir: ./data/results
+-resume: False
++resume: True
+ resume_emb_training: False
+ reward_entropy_coef: 0.0
+ rl_use_radam: False
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+index 00a83d9..e3712f3 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+@@ -1 +1 @@
+-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+\ No newline at end of file
++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+\ No newline at end of file
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+index b531690..fde463e 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+@@ -10764,3 +10764,433 @@ index b41b6b9..e59734f 100755
+          for (i, new) in enumerate(news):
+              if new:
+                  self.stacked_obs[i] = 0
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..37f6dc9 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..c4ff3d3 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..9e018c4 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++15/04/2024
+++22:26:28
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: None
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..cda9700 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..ebf34e4 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..37f6dc9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..c4ff3d3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++index 953d419..edec780 100644
++--- a/new-actions-rl/rlf/main.py
+++++ b/new-actions-rl/rlf/main.py
++@@ -39,7 +39,7 @@ def get_num_updates(args):
++     return num_updates, lr_updates
++ 
++ 
++-def get_fine_tune_run(load_name, env_name):
+++def get_fine_tune_run(load_name, env_name, args):
++     from rlf.exp_mgr.eval import get_max_run
++     import wandb
++     import subprocess
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+index 953d419..edec780 100644
+--- a/new-actions-rl/rlf/main.py
++++ b/new-actions-rl/rlf/main.py
+@@ -39,7 +39,7 @@ def get_num_updates(args):
+     return num_updates, lr_updates
+ 
+ 
+-def get_fine_tune_run(load_name, env_name):
++def get_fine_tune_run(load_name, env_name, args):
+     from rlf.exp_mgr.eval import get_max_run
+     import wandb
+     import subprocess
+diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+index d008c38..9b566fb 100755
+--- a/new-actions-rl/rlf/rl/envs.py
++++ b/new-actions-rl/rlf/rl/envs.py
+@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+ 
+     return _thunk
+ 
+-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+ 
+ def make_vec_envs(env_name,
+                   seed,
+@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+                   trans_fn,
+                   args,
+                   num_frame_stack=None,
+-                  set_eval=False,
+-                  env_names_input=None):
++                  set_eval=False):
+ 
+     if args.multitask and not set_eval:
+         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+                   set_eval=False,
+                   env_names_input=None):
+ 
++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     envs = [
+         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+-        for env_name in env_names
++        for env_name in candidate_env_names
+     ]
+ 
+     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+index 0d25c28..e45648c 100755
+--- a/new-actions-rl/rlf/rl/rl.py
++++ b/new-actions-rl/rlf/rl/rl.py
+@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+           end_update, lr_updates, args, test_args, checkpointer):
+ 
++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     if args.resume and start_update > 0:
+         start_update += 1
+ 
+@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+         log.start_interval_log()
+ 
+         if args.multitask:
+-            idx = np.random.randint(10000) % len(env_names)
++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+             envs = envs_bulk[idx]
+-            args.env_name = env_names[idx]
+-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++            args.env_name = actual_env_names[idx]
++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+         else:
+             envs = envs_bulk
+ 
+@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+                 train_eval_envs = []
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs = None,
+                                train_eval_envs = None)
+@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+             else:
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs[i],
+                                train_eval_envs[i])
+347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+index 93c497a..479a608 100644
+--- a/new-actions-rl/arguments.py
++++ b/new-actions-rl/arguments.py
+@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+ 
+     #### Multitask specific
+     parser.add_argument('--multitask', action='store_true', default=False)
++    parser.add_argument('--env-names', nargs='+', default=[])
+ 
+     #### Resume specific
+     parser.add_argument('--best-run', type=int, default=None)
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+index a55af28..c06c75e 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+@@ -1,11 +1,11 @@
+ Date and Time:
+-10/03/2024
+-16:36:27
++16/04/2024
++14:42:37
+ 
+ action_base_hidden_size: 128
+ action_base_output_size: 64
+ action_proj_dim: 1
+-action_random_sample: True
++action_random_sample: False
+ action_seg_loc: ./data/action_segs
+ action_set_size: 50
+ algo: ppo
+@@ -14,6 +14,7 @@ analysis_angle: None
+ analysis_emb: None
+ anti_alias_blur: 0.0
+ backup: None
++best_run: 9349
+ both_train_test: False
+ bound_effect: False
+ cat_kl_loss: None
+@@ -38,7 +39,7 @@ create_play_len: 7
+ create_play_run_steps: 3
+ create_sec_goal_reward: 2.0
+ create_target_reward: 1.0
+-cuda: False
++cuda: True
+ cuda_deterministic: False
+ debug_render: False
+ decay_clipping: False
+@@ -73,9 +74,10 @@ emb_viz_interval: 5
+ encoder_dim: 64
+ entropy_coef: 0.005
+ env_name: CreateLevelPush-v0
++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+ eps: 1e-05
+ eval_interval: 50
+-eval_num_processes: None
++eval_num_processes: 1
+ eval_only: False
+ eval_split: False
+ eval_split_ratio: 0.5
+@@ -109,7 +111,7 @@ kl_pen: None
+ large_steps: 40
+ latent_dim: 1
+ load_all_data: False
+-load_best_name: None
++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
+ load_dataset: True
+ load_emb_logvar: True
+ load_emb_model_file: None
+@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+ max_grid_steps: 50
+ max_std_width: 3.0
+ mega_res_interval: 4
++multitask: True
+ n_clusters: 10
+ n_distributions: 1
+ n_hidden_option: 3
+@@ -138,7 +141,7 @@ no_diag: True
+ no_frame_stack: False
+ no_initial_state: False
+ no_overlap_env: False
+-no_test_eval: False
++no_test_eval: True
+ no_var: False
+ normalize_embs: False
+ not_upto: True
+@@ -146,7 +149,7 @@ num_distributions: 400
+ num_env_steps: 60000000
+ num_eval: 20
+ num_mini_batch: 4
+-num_processes: 1
++num_processes: 4
+ num_render: None
+ num_steps: 384
+ num_z: 1
+@@ -193,7 +196,7 @@ render_result_figures: False
+ render_text: False
+ reparam: True
+ result_dir: ./data/results
+-resume: False
++resume: True
+ resume_emb_training: False
+ reward_entropy_coef: 0.0
+ rl_use_radam: False
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+index 00a83d9..ec24bd5 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+@@ -1 +1 @@
+-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+\ No newline at end of file
++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+\ No newline at end of file
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+index b531690..6d6f339 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+@@ -10764,3 +10764,1081 @@ index b41b6b9..e59734f 100755
+          for (i, new) in enumerate(news):
+              if new:
+                  self.stacked_obs[i] = 0
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..37f6dc9 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..c4ff3d3 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..9e018c4 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++15/04/2024
+++22:26:28
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: None
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..cda9700 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..ebf34e4 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..37f6dc9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..c4ff3d3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++index 953d419..edec780 100644
++--- a/new-actions-rl/rlf/main.py
+++++ b/new-actions-rl/rlf/main.py
++@@ -39,7 +39,7 @@ def get_num_updates(args):
++     return num_updates, lr_updates
++ 
++ 
++-def get_fine_tune_run(load_name, env_name):
+++def get_fine_tune_run(load_name, env_name, args):
++     from rlf.exp_mgr.eval import get_max_run
++     import wandb
++     import subprocess
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..5c86c73 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++16/04/2024
+++11:03:41
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: 5799
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -109,7 +111,7 @@ kl_pen: None
++ large_steps: 40
++ latent_dim: 1
++ load_all_data: False
++-load_best_name: None
+++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
++ load_dataset: True
++ load_emb_logvar: True
++ load_emb_model_file: None
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++@@ -193,7 +196,7 @@ render_result_figures: False
++ render_text: False
++ reparam: True
++ result_dir: ./data/results
++-resume: False
+++resume: True
++ resume_emb_training: False
++ reward_entropy_coef: 0.0
++ rl_use_radam: False
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..e3712f3 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..fde463e 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,433 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..37f6dc9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..c4ff3d3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..9e018c4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++15/04/2024
++++22:26:28
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: None
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..cda9700 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..ebf34e4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..37f6dc9 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..c4ff3d3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++index 953d419..edec780 100644
+++--- a/new-actions-rl/rlf/main.py
++++++ b/new-actions-rl/rlf/main.py
+++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++     return num_updates, lr_updates
+++ 
+++ 
+++-def get_fine_tune_run(load_name, env_name):
++++def get_fine_tune_run(load_name, env_name, args):
+++     from rlf.exp_mgr.eval import get_max_run
+++     import wandb
+++     import subprocess
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++index 953d419..edec780 100644
++--- a/new-actions-rl/rlf/main.py
+++++ b/new-actions-rl/rlf/main.py
++@@ -39,7 +39,7 @@ def get_num_updates(args):
++     return num_updates, lr_updates
++ 
++ 
++-def get_fine_tune_run(load_name, env_name):
+++def get_fine_tune_run(load_name, env_name, args):
++     from rlf.exp_mgr.eval import get_max_run
++     import wandb
++     import subprocess
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+index 953d419..edec780 100644
+--- a/new-actions-rl/rlf/main.py
++++ b/new-actions-rl/rlf/main.py
+@@ -39,7 +39,7 @@ def get_num_updates(args):
+     return num_updates, lr_updates
+ 
+ 
+-def get_fine_tune_run(load_name, env_name):
++def get_fine_tune_run(load_name, env_name, args):
+     from rlf.exp_mgr.eval import get_max_run
+     import wandb
+     import subprocess
+diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+index d008c38..9b566fb 100755
+--- a/new-actions-rl/rlf/rl/envs.py
++++ b/new-actions-rl/rlf/rl/envs.py
+@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+ 
+     return _thunk
+ 
+-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+ 
+ def make_vec_envs(env_name,
+                   seed,
+@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+                   trans_fn,
+                   args,
+                   num_frame_stack=None,
+-                  set_eval=False,
+-                  env_names_input=None):
++                  set_eval=False):
+ 
+     if args.multitask and not set_eval:
+         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+                   set_eval=False,
+                   env_names_input=None):
+ 
++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     envs = [
+         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+-        for env_name in env_names
++        for env_name in candidate_env_names
+     ]
+ 
+     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+index 0d25c28..e45648c 100755
+--- a/new-actions-rl/rlf/rl/rl.py
++++ b/new-actions-rl/rlf/rl/rl.py
+@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+           end_update, lr_updates, args, test_args, checkpointer):
+ 
++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     if args.resume and start_update > 0:
+         start_update += 1
+ 
+@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+         log.start_interval_log()
+ 
+         if args.multitask:
+-            idx = np.random.randint(10000) % len(env_names)
++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+             envs = envs_bulk[idx]
+-            args.env_name = env_names[idx]
+-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++            args.env_name = actual_env_names[idx]
++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+         else:
+             envs = envs_bulk
+ 
+@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+                 train_eval_envs = []
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs = None,
+                                train_eval_envs = None)
+@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+             else:
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs[i],
+                                train_eval_envs[i])
+347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+index 93c497a..479a608 100644
+--- a/new-actions-rl/arguments.py
++++ b/new-actions-rl/arguments.py
+@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+ 
+     #### Multitask specific
+     parser.add_argument('--multitask', action='store_true', default=False)
++    parser.add_argument('--env-names', nargs='+', default=[])
+ 
+     #### Resume specific
+     parser.add_argument('--best-run', type=int, default=None)
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+index a55af28..85c20f2 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+@@ -1,11 +1,11 @@
+ Date and Time:
+-10/03/2024
+-16:36:27
++16/04/2024
++18:38:56
+ 
+ action_base_hidden_size: 128
+ action_base_output_size: 64
+ action_proj_dim: 1
+-action_random_sample: True
++action_random_sample: False
+ action_seg_loc: ./data/action_segs
+ action_set_size: 50
+ algo: ppo
+@@ -14,6 +14,7 @@ analysis_angle: None
+ analysis_emb: None
+ anti_alias_blur: 0.0
+ backup: None
++best_run: 12899
+ both_train_test: False
+ bound_effect: False
+ cat_kl_loss: None
+@@ -38,7 +39,7 @@ create_play_len: 7
+ create_play_run_steps: 3
+ create_sec_goal_reward: 2.0
+ create_target_reward: 1.0
+-cuda: False
++cuda: True
+ cuda_deterministic: False
+ debug_render: False
+ decay_clipping: False
+@@ -73,9 +74,10 @@ emb_viz_interval: 5
+ encoder_dim: 64
+ entropy_coef: 0.005
+ env_name: CreateLevelPush-v0
++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+ eps: 1e-05
+ eval_interval: 50
+-eval_num_processes: None
++eval_num_processes: 1
+ eval_only: False
+ eval_split: False
+ eval_split_ratio: 0.5
+@@ -109,7 +111,7 @@ kl_pen: None
+ large_steps: 40
+ latent_dim: 1
+ load_all_data: False
+-load_best_name: None
++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
+ load_dataset: True
+ load_emb_logvar: True
+ load_emb_model_file: None
+@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+ max_grid_steps: 50
+ max_std_width: 3.0
+ mega_res_interval: 4
++multitask: True
+ n_clusters: 10
+ n_distributions: 1
+ n_hidden_option: 3
+@@ -138,7 +141,7 @@ no_diag: True
+ no_frame_stack: False
+ no_initial_state: False
+ no_overlap_env: False
+-no_test_eval: False
++no_test_eval: True
+ no_var: False
+ normalize_embs: False
+ not_upto: True
+@@ -146,7 +149,7 @@ num_distributions: 400
+ num_env_steps: 60000000
+ num_eval: 20
+ num_mini_batch: 4
+-num_processes: 1
++num_processes: 4
+ num_render: None
+ num_steps: 384
+ num_z: 1
+@@ -193,7 +196,7 @@ render_result_figures: False
+ render_text: False
+ reparam: True
+ result_dir: ./data/results
+-resume: False
++resume: True
+ resume_emb_training: False
+ reward_entropy_coef: 0.0
+ rl_use_radam: False
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+index 00a83d9..63b1f15 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+@@ -1 +1 @@
+-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+\ No newline at end of file
++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 16449 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+\ No newline at end of file
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+index b531690..815f948 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+@@ -10764,3 +10764,2377 @@ index b41b6b9..e59734f 100755
+          for (i, new) in enumerate(news):
+              if new:
+                  self.stacked_obs[i] = 0
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..37f6dc9 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..c4ff3d3 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..9e018c4 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++15/04/2024
+++22:26:28
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: None
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..cda9700 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..ebf34e4 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..37f6dc9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..c4ff3d3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++index 953d419..edec780 100644
++--- a/new-actions-rl/rlf/main.py
+++++ b/new-actions-rl/rlf/main.py
++@@ -39,7 +39,7 @@ def get_num_updates(args):
++     return num_updates, lr_updates
++ 
++ 
++-def get_fine_tune_run(load_name, env_name):
+++def get_fine_tune_run(load_name, env_name, args):
++     from rlf.exp_mgr.eval import get_max_run
++     import wandb
++     import subprocess
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..5c86c73 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++16/04/2024
+++11:03:41
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: 5799
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -109,7 +111,7 @@ kl_pen: None
++ large_steps: 40
++ latent_dim: 1
++ load_all_data: False
++-load_best_name: None
+++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
++ load_dataset: True
++ load_emb_logvar: True
++ load_emb_model_file: None
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++@@ -193,7 +196,7 @@ render_result_figures: False
++ render_text: False
++ reparam: True
++ result_dir: ./data/results
++-resume: False
+++resume: True
++ resume_emb_training: False
++ reward_entropy_coef: 0.0
++ rl_use_radam: False
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..e3712f3 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..fde463e 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,433 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..37f6dc9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..c4ff3d3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..9e018c4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++15/04/2024
++++22:26:28
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: None
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..cda9700 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..ebf34e4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..37f6dc9 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..c4ff3d3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++index 953d419..edec780 100644
+++--- a/new-actions-rl/rlf/main.py
++++++ b/new-actions-rl/rlf/main.py
+++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++     return num_updates, lr_updates
+++ 
+++ 
+++-def get_fine_tune_run(load_name, env_name):
++++def get_fine_tune_run(load_name, env_name, args):
+++     from rlf.exp_mgr.eval import get_max_run
+++     import wandb
+++     import subprocess
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++index 953d419..edec780 100644
++--- a/new-actions-rl/rlf/main.py
+++++ b/new-actions-rl/rlf/main.py
++@@ -39,7 +39,7 @@ def get_num_updates(args):
++     return num_updates, lr_updates
++ 
++ 
++-def get_fine_tune_run(load_name, env_name):
+++def get_fine_tune_run(load_name, env_name, args):
++     from rlf.exp_mgr.eval import get_max_run
++     import wandb
++     import subprocess
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..c06c75e 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++16/04/2024
+++14:42:37
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: 9349
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -109,7 +111,7 @@ kl_pen: None
++ large_steps: 40
++ latent_dim: 1
++ load_all_data: False
++-load_best_name: None
+++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
++ load_dataset: True
++ load_emb_logvar: True
++ load_emb_model_file: None
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++@@ -193,7 +196,7 @@ render_result_figures: False
++ render_text: False
++ reparam: True
++ result_dir: ./data/results
++-resume: False
+++resume: True
++ resume_emb_training: False
++ reward_entropy_coef: 0.0
++ rl_use_radam: False
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..ec24bd5 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..6d6f339 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,1081 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..37f6dc9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..c4ff3d3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..9e018c4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++15/04/2024
++++22:26:28
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: None
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..cda9700 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..ebf34e4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..37f6dc9 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..c4ff3d3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++index 953d419..edec780 100644
+++--- a/new-actions-rl/rlf/main.py
++++++ b/new-actions-rl/rlf/main.py
+++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++     return num_updates, lr_updates
+++ 
+++ 
+++-def get_fine_tune_run(load_name, env_name):
++++def get_fine_tune_run(load_name, env_name, args):
+++     from rlf.exp_mgr.eval import get_max_run
+++     import wandb
+++     import subprocess
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..5c86c73 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++16/04/2024
++++11:03:41
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: 5799
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -109,7 +111,7 @@ kl_pen: None
+++ large_steps: 40
+++ latent_dim: 1
+++ load_all_data: False
+++-load_best_name: None
++++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
+++ load_dataset: True
+++ load_emb_logvar: True
+++ load_emb_model_file: None
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++@@ -193,7 +196,7 @@ render_result_figures: False
+++ render_text: False
+++ reparam: True
+++ result_dir: ./data/results
+++-resume: False
++++resume: True
+++ resume_emb_training: False
+++ reward_entropy_coef: 0.0
+++ rl_use_radam: False
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..e3712f3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..fde463e 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,433 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..37f6dc9 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..c4ff3d3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++index a55af28..9e018c4 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++@@ -1,11 +1,11 @@
++++ Date and Time:
++++-10/03/2024
++++-16:36:27
+++++15/04/2024
+++++22:26:28
++++ 
++++ action_base_hidden_size: 128
++++ action_base_output_size: 64
++++ action_proj_dim: 1
++++-action_random_sample: True
+++++action_random_sample: False
++++ action_seg_loc: ./data/action_segs
++++ action_set_size: 50
++++ algo: ppo
++++@@ -14,6 +14,7 @@ analysis_angle: None
++++ analysis_emb: None
++++ anti_alias_blur: 0.0
++++ backup: None
+++++best_run: None
++++ both_train_test: False
++++ bound_effect: False
++++ cat_kl_loss: None
++++@@ -38,7 +39,7 @@ create_play_len: 7
++++ create_play_run_steps: 3
++++ create_sec_goal_reward: 2.0
++++ create_target_reward: 1.0
++++-cuda: False
+++++cuda: True
++++ cuda_deterministic: False
++++ debug_render: False
++++ decay_clipping: False
++++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++++ encoder_dim: 64
++++ entropy_coef: 0.005
++++ env_name: CreateLevelPush-v0
+++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++++ eps: 1e-05
++++ eval_interval: 50
++++-eval_num_processes: None
+++++eval_num_processes: 1
++++ eval_only: False
++++ eval_split: False
++++ eval_split_ratio: 0.5
++++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++++ max_grid_steps: 50
++++ max_std_width: 3.0
++++ mega_res_interval: 4
+++++multitask: True
++++ n_clusters: 10
++++ n_distributions: 1
++++ n_hidden_option: 3
++++@@ -138,7 +141,7 @@ no_diag: True
++++ no_frame_stack: False
++++ no_initial_state: False
++++ no_overlap_env: False
++++-no_test_eval: False
+++++no_test_eval: True
++++ no_var: False
++++ normalize_embs: False
++++ not_upto: True
++++@@ -146,7 +149,7 @@ num_distributions: 400
++++ num_env_steps: 60000000
++++ num_eval: 20
++++ num_mini_batch: 4
++++-num_processes: 1
+++++num_processes: 4
++++ num_render: None
++++ num_steps: 384
++++ num_z: 1
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..cda9700 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..ebf34e4 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++++index 93c497a..479a608 100644
+++++--- a/new-actions-rl/arguments.py
++++++++ b/new-actions-rl/arguments.py
+++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++++ 
+++++     #### Multitask specific
+++++     parser.add_argument('--multitask', action='store_true', default=False)
++++++    parser.add_argument('--env-names', nargs='+', default=[])
+++++ 
+++++     #### Resume specific
+++++     parser.add_argument('--best-run', type=int, default=None)
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++index 00a83d9..37f6dc9 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++@@ -1 +1 @@
+++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++++\ No newline at end of file
++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++++\ No newline at end of file
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++index b531690..c4ff3d3 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++++          for (i, new) in enumerate(news):
+++++              if new:
+++++                  self.stacked_obs[i] = 0
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++++index d008c38..9b566fb 100755
+++++--- a/new-actions-rl/rlf/rl/envs.py
++++++++ b/new-actions-rl/rlf/rl/envs.py
+++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++++ 
+++++     return _thunk
+++++ 
+++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++++ 
+++++ def make_vec_envs(env_name,
+++++                   seed,
+++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++++                   trans_fn,
+++++                   args,
+++++                   num_frame_stack=None,
+++++-                  set_eval=False,
+++++-                  env_names_input=None):
++++++                  set_eval=False):
+++++ 
+++++     if args.multitask and not set_eval:
+++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++++                   set_eval=False,
+++++                   env_names_input=None):
+++++ 
++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     envs = [
+++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++++-        for env_name in env_names
++++++        for env_name in candidate_env_names
+++++     ]
+++++ 
+++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++++index 0d25c28..e45648c 100755
+++++--- a/new-actions-rl/rlf/rl/rl.py
++++++++ b/new-actions-rl/rlf/rl/rl.py
+++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++           end_update, lr_updates, args, test_args, checkpointer):
+++++ 
++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     if args.resume and start_update > 0:
+++++         start_update += 1
+++++ 
+++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++         log.start_interval_log()
+++++ 
+++++         if args.multitask:
+++++-            idx = np.random.randint(10000) % len(env_names)
++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++++             envs = envs_bulk[idx]
+++++-            args.env_name = env_names[idx]
+++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++++            args.env_name = actual_env_names[idx]
++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++++         else:
+++++             envs = envs_bulk
+++++ 
+++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++                 train_eval_envs = []
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++++                                train_eval_envs = None)
+++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++             else:
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++++                                train_eval_envs[i])
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++++index 953d419..edec780 100644
++++--- a/new-actions-rl/rlf/main.py
+++++++ b/new-actions-rl/rlf/main.py
++++@@ -39,7 +39,7 @@ def get_num_updates(args):
++++     return num_updates, lr_updates
++++ 
++++ 
++++-def get_fine_tune_run(load_name, env_name):
+++++def get_fine_tune_run(load_name, env_name, args):
++++     from rlf.exp_mgr.eval import get_max_run
++++     import wandb
++++     import subprocess
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++index 953d419..edec780 100644
+++--- a/new-actions-rl/rlf/main.py
++++++ b/new-actions-rl/rlf/main.py
+++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++     return num_updates, lr_updates
+++ 
+++ 
+++-def get_fine_tune_run(load_name, env_name):
++++def get_fine_tune_run(load_name, env_name, args):
+++     from rlf.exp_mgr.eval import get_max_run
+++     import wandb
+++     import subprocess
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++index 953d419..edec780 100644
++--- a/new-actions-rl/rlf/main.py
+++++ b/new-actions-rl/rlf/main.py
++@@ -39,7 +39,7 @@ def get_num_updates(args):
++     return num_updates, lr_updates
++ 
++ 
++-def get_fine_tune_run(load_name, env_name):
+++def get_fine_tune_run(load_name, env_name, args):
++     from rlf.exp_mgr.eval import get_max_run
++     import wandb
++     import subprocess
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+index 953d419..edec780 100644
+--- a/new-actions-rl/rlf/main.py
++++ b/new-actions-rl/rlf/main.py
+@@ -39,7 +39,7 @@ def get_num_updates(args):
+     return num_updates, lr_updates
+ 
+ 
+-def get_fine_tune_run(load_name, env_name):
++def get_fine_tune_run(load_name, env_name, args):
+     from rlf.exp_mgr.eval import get_max_run
+     import wandb
+     import subprocess
+diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+index d008c38..9b566fb 100755
+--- a/new-actions-rl/rlf/rl/envs.py
++++ b/new-actions-rl/rlf/rl/envs.py
+@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+ 
+     return _thunk
+ 
+-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+ 
+ def make_vec_envs(env_name,
+                   seed,
+@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+                   trans_fn,
+                   args,
+                   num_frame_stack=None,
+-                  set_eval=False,
+-                  env_names_input=None):
++                  set_eval=False):
+ 
+     if args.multitask and not set_eval:
+         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+                   set_eval=False,
+                   env_names_input=None):
+ 
++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     envs = [
+         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+-        for env_name in env_names
++        for env_name in candidate_env_names
+     ]
+ 
+     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+index 0d25c28..e45648c 100755
+--- a/new-actions-rl/rlf/rl/rl.py
++++ b/new-actions-rl/rlf/rl/rl.py
+@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+           end_update, lr_updates, args, test_args, checkpointer):
+ 
++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     if args.resume and start_update > 0:
+         start_update += 1
+ 
+@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+         log.start_interval_log()
+ 
+         if args.multitask:
+-            idx = np.random.randint(10000) % len(env_names)
++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+             envs = envs_bulk[idx]
+-            args.env_name = env_names[idx]
+-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++            args.env_name = actual_env_names[idx]
++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+         else:
+             envs = envs_bulk
+ 
+@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+                 train_eval_envs = []
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs = None,
+                                train_eval_envs = None)
+@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+             else:
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs[i],
+                                train_eval_envs[i])
+347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+index 93c497a..479a608 100644
+--- a/new-actions-rl/arguments.py
++++ b/new-actions-rl/arguments.py
+@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+ 
+     #### Multitask specific
+     parser.add_argument('--multitask', action='store_true', default=False)
++    parser.add_argument('--env-names', nargs='+', default=[])
+ 
+     #### Resume specific
+     parser.add_argument('--best-run', type=int, default=None)
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+index a55af28..471a8c9 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+@@ -1,11 +1,11 @@
+ Date and Time:
+-10/03/2024
+-16:36:27
++17/04/2024
++01:03:09
+ 
+ action_base_hidden_size: 128
+ action_base_output_size: 64
+ action_proj_dim: 1
+-action_random_sample: True
++action_random_sample: False
+ action_seg_loc: ./data/action_segs
+ action_set_size: 50
+ algo: ppo
+@@ -14,6 +14,7 @@ analysis_angle: None
+ analysis_emb: None
+ anti_alias_blur: 0.0
+ backup: None
++best_run: 16449
+ both_train_test: False
+ bound_effect: False
+ cat_kl_loss: None
+@@ -38,7 +39,7 @@ create_play_len: 7
+ create_play_run_steps: 3
+ create_sec_goal_reward: 2.0
+ create_target_reward: 1.0
+-cuda: False
++cuda: True
+ cuda_deterministic: False
+ debug_render: False
+ decay_clipping: False
+@@ -73,9 +74,10 @@ emb_viz_interval: 5
+ encoder_dim: 64
+ entropy_coef: 0.005
+ env_name: CreateLevelPush-v0
++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+ eps: 1e-05
+ eval_interval: 50
+-eval_num_processes: None
++eval_num_processes: 1
+ eval_only: False
+ eval_split: False
+ eval_split_ratio: 0.5
+@@ -109,7 +111,7 @@ kl_pen: None
+ large_steps: 40
+ latent_dim: 1
+ load_all_data: False
+-load_best_name: None
++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
+ load_dataset: True
+ load_emb_logvar: True
+ load_emb_model_file: None
+@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+ max_grid_steps: 50
+ max_std_width: 3.0
+ mega_res_interval: 4
++multitask: True
+ n_clusters: 10
+ n_distributions: 1
+ n_hidden_option: 3
+@@ -138,7 +141,7 @@ no_diag: True
+ no_frame_stack: False
+ no_initial_state: False
+ no_overlap_env: False
+-no_test_eval: False
++no_test_eval: True
+ no_var: False
+ normalize_embs: False
+ not_upto: True
+@@ -146,7 +149,7 @@ num_distributions: 400
+ num_env_steps: 60000000
+ num_eval: 20
+ num_mini_batch: 4
+-num_processes: 1
++num_processes: 4
+ num_render: None
+ num_steps: 384
+ num_z: 1
+@@ -193,7 +196,7 @@ render_result_figures: False
+ render_text: False
+ reparam: True
+ result_dir: ./data/results
+-resume: False
++resume: True
+ resume_emb_training: False
+ reward_entropy_coef: 0.0
+ rl_use_radam: False
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+index 00a83d9..5cdd351 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+@@ -1 +1 @@
+-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+\ No newline at end of file
++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 16449 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 22299 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+\ No newline at end of file
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+index b531690..13b575f 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+@@ -10764,3 +10764,5081 @@ index b41b6b9..e59734f 100755
+          for (i, new) in enumerate(news):
+              if new:
+                  self.stacked_obs[i] = 0
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..37f6dc9 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..c4ff3d3 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..9e018c4 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++15/04/2024
+++22:26:28
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: None
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..cda9700 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..ebf34e4 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..37f6dc9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..c4ff3d3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++index 953d419..edec780 100644
++--- a/new-actions-rl/rlf/main.py
+++++ b/new-actions-rl/rlf/main.py
++@@ -39,7 +39,7 @@ def get_num_updates(args):
++     return num_updates, lr_updates
++ 
++ 
++-def get_fine_tune_run(load_name, env_name):
+++def get_fine_tune_run(load_name, env_name, args):
++     from rlf.exp_mgr.eval import get_max_run
++     import wandb
++     import subprocess
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..5c86c73 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++16/04/2024
+++11:03:41
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: 5799
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -109,7 +111,7 @@ kl_pen: None
++ large_steps: 40
++ latent_dim: 1
++ load_all_data: False
++-load_best_name: None
+++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
++ load_dataset: True
++ load_emb_logvar: True
++ load_emb_model_file: None
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++@@ -193,7 +196,7 @@ render_result_figures: False
++ render_text: False
++ reparam: True
++ result_dir: ./data/results
++-resume: False
+++resume: True
++ resume_emb_training: False
++ reward_entropy_coef: 0.0
++ rl_use_radam: False
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..e3712f3 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..fde463e 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,433 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..37f6dc9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..c4ff3d3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..9e018c4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++15/04/2024
++++22:26:28
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: None
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..cda9700 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..ebf34e4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..37f6dc9 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..c4ff3d3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++index 953d419..edec780 100644
+++--- a/new-actions-rl/rlf/main.py
++++++ b/new-actions-rl/rlf/main.py
+++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++     return num_updates, lr_updates
+++ 
+++ 
+++-def get_fine_tune_run(load_name, env_name):
++++def get_fine_tune_run(load_name, env_name, args):
+++     from rlf.exp_mgr.eval import get_max_run
+++     import wandb
+++     import subprocess
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++index 953d419..edec780 100644
++--- a/new-actions-rl/rlf/main.py
+++++ b/new-actions-rl/rlf/main.py
++@@ -39,7 +39,7 @@ def get_num_updates(args):
++     return num_updates, lr_updates
++ 
++ 
++-def get_fine_tune_run(load_name, env_name):
+++def get_fine_tune_run(load_name, env_name, args):
++     from rlf.exp_mgr.eval import get_max_run
++     import wandb
++     import subprocess
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..c06c75e 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++16/04/2024
+++14:42:37
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: 9349
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -109,7 +111,7 @@ kl_pen: None
++ large_steps: 40
++ latent_dim: 1
++ load_all_data: False
++-load_best_name: None
+++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
++ load_dataset: True
++ load_emb_logvar: True
++ load_emb_model_file: None
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++@@ -193,7 +196,7 @@ render_result_figures: False
++ render_text: False
++ reparam: True
++ result_dir: ./data/results
++-resume: False
+++resume: True
++ resume_emb_training: False
++ reward_entropy_coef: 0.0
++ rl_use_radam: False
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..ec24bd5 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..6d6f339 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,1081 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..37f6dc9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..c4ff3d3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..9e018c4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++15/04/2024
++++22:26:28
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: None
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..cda9700 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..ebf34e4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..37f6dc9 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..c4ff3d3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++index 953d419..edec780 100644
+++--- a/new-actions-rl/rlf/main.py
++++++ b/new-actions-rl/rlf/main.py
+++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++     return num_updates, lr_updates
+++ 
+++ 
+++-def get_fine_tune_run(load_name, env_name):
++++def get_fine_tune_run(load_name, env_name, args):
+++     from rlf.exp_mgr.eval import get_max_run
+++     import wandb
+++     import subprocess
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..5c86c73 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++16/04/2024
++++11:03:41
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: 5799
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -109,7 +111,7 @@ kl_pen: None
+++ large_steps: 40
+++ latent_dim: 1
+++ load_all_data: False
+++-load_best_name: None
++++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
+++ load_dataset: True
+++ load_emb_logvar: True
+++ load_emb_model_file: None
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++@@ -193,7 +196,7 @@ render_result_figures: False
+++ render_text: False
+++ reparam: True
+++ result_dir: ./data/results
+++-resume: False
++++resume: True
+++ resume_emb_training: False
+++ reward_entropy_coef: 0.0
+++ rl_use_radam: False
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..e3712f3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..fde463e 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,433 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..37f6dc9 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..c4ff3d3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++index a55af28..9e018c4 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++@@ -1,11 +1,11 @@
++++ Date and Time:
++++-10/03/2024
++++-16:36:27
+++++15/04/2024
+++++22:26:28
++++ 
++++ action_base_hidden_size: 128
++++ action_base_output_size: 64
++++ action_proj_dim: 1
++++-action_random_sample: True
+++++action_random_sample: False
++++ action_seg_loc: ./data/action_segs
++++ action_set_size: 50
++++ algo: ppo
++++@@ -14,6 +14,7 @@ analysis_angle: None
++++ analysis_emb: None
++++ anti_alias_blur: 0.0
++++ backup: None
+++++best_run: None
++++ both_train_test: False
++++ bound_effect: False
++++ cat_kl_loss: None
++++@@ -38,7 +39,7 @@ create_play_len: 7
++++ create_play_run_steps: 3
++++ create_sec_goal_reward: 2.0
++++ create_target_reward: 1.0
++++-cuda: False
+++++cuda: True
++++ cuda_deterministic: False
++++ debug_render: False
++++ decay_clipping: False
++++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++++ encoder_dim: 64
++++ entropy_coef: 0.005
++++ env_name: CreateLevelPush-v0
+++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++++ eps: 1e-05
++++ eval_interval: 50
++++-eval_num_processes: None
+++++eval_num_processes: 1
++++ eval_only: False
++++ eval_split: False
++++ eval_split_ratio: 0.5
++++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++++ max_grid_steps: 50
++++ max_std_width: 3.0
++++ mega_res_interval: 4
+++++multitask: True
++++ n_clusters: 10
++++ n_distributions: 1
++++ n_hidden_option: 3
++++@@ -138,7 +141,7 @@ no_diag: True
++++ no_frame_stack: False
++++ no_initial_state: False
++++ no_overlap_env: False
++++-no_test_eval: False
+++++no_test_eval: True
++++ no_var: False
++++ normalize_embs: False
++++ not_upto: True
++++@@ -146,7 +149,7 @@ num_distributions: 400
++++ num_env_steps: 60000000
++++ num_eval: 20
++++ num_mini_batch: 4
++++-num_processes: 1
+++++num_processes: 4
++++ num_render: None
++++ num_steps: 384
++++ num_z: 1
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..cda9700 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..ebf34e4 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++++index 93c497a..479a608 100644
+++++--- a/new-actions-rl/arguments.py
++++++++ b/new-actions-rl/arguments.py
+++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++++ 
+++++     #### Multitask specific
+++++     parser.add_argument('--multitask', action='store_true', default=False)
++++++    parser.add_argument('--env-names', nargs='+', default=[])
+++++ 
+++++     #### Resume specific
+++++     parser.add_argument('--best-run', type=int, default=None)
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++index 00a83d9..37f6dc9 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++@@ -1 +1 @@
+++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++++\ No newline at end of file
++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++++\ No newline at end of file
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++index b531690..c4ff3d3 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++++          for (i, new) in enumerate(news):
+++++              if new:
+++++                  self.stacked_obs[i] = 0
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++++index d008c38..9b566fb 100755
+++++--- a/new-actions-rl/rlf/rl/envs.py
++++++++ b/new-actions-rl/rlf/rl/envs.py
+++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++++ 
+++++     return _thunk
+++++ 
+++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++++ 
+++++ def make_vec_envs(env_name,
+++++                   seed,
+++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++++                   trans_fn,
+++++                   args,
+++++                   num_frame_stack=None,
+++++-                  set_eval=False,
+++++-                  env_names_input=None):
++++++                  set_eval=False):
+++++ 
+++++     if args.multitask and not set_eval:
+++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++++                   set_eval=False,
+++++                   env_names_input=None):
+++++ 
++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     envs = [
+++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++++-        for env_name in env_names
++++++        for env_name in candidate_env_names
+++++     ]
+++++ 
+++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++++index 0d25c28..e45648c 100755
+++++--- a/new-actions-rl/rlf/rl/rl.py
++++++++ b/new-actions-rl/rlf/rl/rl.py
+++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++           end_update, lr_updates, args, test_args, checkpointer):
+++++ 
++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     if args.resume and start_update > 0:
+++++         start_update += 1
+++++ 
+++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++         log.start_interval_log()
+++++ 
+++++         if args.multitask:
+++++-            idx = np.random.randint(10000) % len(env_names)
++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++++             envs = envs_bulk[idx]
+++++-            args.env_name = env_names[idx]
+++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++++            args.env_name = actual_env_names[idx]
++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++++         else:
+++++             envs = envs_bulk
+++++ 
+++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++                 train_eval_envs = []
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++++                                train_eval_envs = None)
+++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++             else:
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++++                                train_eval_envs[i])
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++++index 953d419..edec780 100644
++++--- a/new-actions-rl/rlf/main.py
+++++++ b/new-actions-rl/rlf/main.py
++++@@ -39,7 +39,7 @@ def get_num_updates(args):
++++     return num_updates, lr_updates
++++ 
++++ 
++++-def get_fine_tune_run(load_name, env_name):
+++++def get_fine_tune_run(load_name, env_name, args):
++++     from rlf.exp_mgr.eval import get_max_run
++++     import wandb
++++     import subprocess
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++index 953d419..edec780 100644
+++--- a/new-actions-rl/rlf/main.py
++++++ b/new-actions-rl/rlf/main.py
+++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++     return num_updates, lr_updates
+++ 
+++ 
+++-def get_fine_tune_run(load_name, env_name):
++++def get_fine_tune_run(load_name, env_name, args):
+++     from rlf.exp_mgr.eval import get_max_run
+++     import wandb
+++     import subprocess
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++index 953d419..edec780 100644
++--- a/new-actions-rl/rlf/main.py
+++++ b/new-actions-rl/rlf/main.py
++@@ -39,7 +39,7 @@ def get_num_updates(args):
++     return num_updates, lr_updates
++ 
++ 
++-def get_fine_tune_run(load_name, env_name):
+++def get_fine_tune_run(load_name, env_name, args):
++     from rlf.exp_mgr.eval import get_max_run
++     import wandb
++     import subprocess
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..85c20f2 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++16/04/2024
+++18:38:56
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: 12899
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -109,7 +111,7 @@ kl_pen: None
++ large_steps: 40
++ latent_dim: 1
++ load_all_data: False
++-load_best_name: None
+++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
++ load_dataset: True
++ load_emb_logvar: True
++ load_emb_model_file: None
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++@@ -193,7 +196,7 @@ render_result_figures: False
++ render_text: False
++ reparam: True
++ result_dir: ./data/results
++-resume: False
+++resume: True
++ resume_emb_training: False
++ reward_entropy_coef: 0.0
++ rl_use_radam: False
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..63b1f15 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 16449 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..815f948 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,2377 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..37f6dc9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..c4ff3d3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..9e018c4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++15/04/2024
++++22:26:28
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: None
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..cda9700 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..ebf34e4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..37f6dc9 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..c4ff3d3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++index 953d419..edec780 100644
+++--- a/new-actions-rl/rlf/main.py
++++++ b/new-actions-rl/rlf/main.py
+++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++     return num_updates, lr_updates
+++ 
+++ 
+++-def get_fine_tune_run(load_name, env_name):
++++def get_fine_tune_run(load_name, env_name, args):
+++     from rlf.exp_mgr.eval import get_max_run
+++     import wandb
+++     import subprocess
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..5c86c73 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++16/04/2024
++++11:03:41
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: 5799
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -109,7 +111,7 @@ kl_pen: None
+++ large_steps: 40
+++ latent_dim: 1
+++ load_all_data: False
+++-load_best_name: None
++++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
+++ load_dataset: True
+++ load_emb_logvar: True
+++ load_emb_model_file: None
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++@@ -193,7 +196,7 @@ render_result_figures: False
+++ render_text: False
+++ reparam: True
+++ result_dir: ./data/results
+++-resume: False
++++resume: True
+++ resume_emb_training: False
+++ reward_entropy_coef: 0.0
+++ rl_use_radam: False
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..e3712f3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..fde463e 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,433 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..37f6dc9 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..c4ff3d3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++index a55af28..9e018c4 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++@@ -1,11 +1,11 @@
++++ Date and Time:
++++-10/03/2024
++++-16:36:27
+++++15/04/2024
+++++22:26:28
++++ 
++++ action_base_hidden_size: 128
++++ action_base_output_size: 64
++++ action_proj_dim: 1
++++-action_random_sample: True
+++++action_random_sample: False
++++ action_seg_loc: ./data/action_segs
++++ action_set_size: 50
++++ algo: ppo
++++@@ -14,6 +14,7 @@ analysis_angle: None
++++ analysis_emb: None
++++ anti_alias_blur: 0.0
++++ backup: None
+++++best_run: None
++++ both_train_test: False
++++ bound_effect: False
++++ cat_kl_loss: None
++++@@ -38,7 +39,7 @@ create_play_len: 7
++++ create_play_run_steps: 3
++++ create_sec_goal_reward: 2.0
++++ create_target_reward: 1.0
++++-cuda: False
+++++cuda: True
++++ cuda_deterministic: False
++++ debug_render: False
++++ decay_clipping: False
++++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++++ encoder_dim: 64
++++ entropy_coef: 0.005
++++ env_name: CreateLevelPush-v0
+++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++++ eps: 1e-05
++++ eval_interval: 50
++++-eval_num_processes: None
+++++eval_num_processes: 1
++++ eval_only: False
++++ eval_split: False
++++ eval_split_ratio: 0.5
++++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++++ max_grid_steps: 50
++++ max_std_width: 3.0
++++ mega_res_interval: 4
+++++multitask: True
++++ n_clusters: 10
++++ n_distributions: 1
++++ n_hidden_option: 3
++++@@ -138,7 +141,7 @@ no_diag: True
++++ no_frame_stack: False
++++ no_initial_state: False
++++ no_overlap_env: False
++++-no_test_eval: False
+++++no_test_eval: True
++++ no_var: False
++++ normalize_embs: False
++++ not_upto: True
++++@@ -146,7 +149,7 @@ num_distributions: 400
++++ num_env_steps: 60000000
++++ num_eval: 20
++++ num_mini_batch: 4
++++-num_processes: 1
+++++num_processes: 4
++++ num_render: None
++++ num_steps: 384
++++ num_z: 1
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..cda9700 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..ebf34e4 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++++index 93c497a..479a608 100644
+++++--- a/new-actions-rl/arguments.py
++++++++ b/new-actions-rl/arguments.py
+++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++++ 
+++++     #### Multitask specific
+++++     parser.add_argument('--multitask', action='store_true', default=False)
++++++    parser.add_argument('--env-names', nargs='+', default=[])
+++++ 
+++++     #### Resume specific
+++++     parser.add_argument('--best-run', type=int, default=None)
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++index 00a83d9..37f6dc9 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++@@ -1 +1 @@
+++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++++\ No newline at end of file
++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++++\ No newline at end of file
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++index b531690..c4ff3d3 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++++          for (i, new) in enumerate(news):
+++++              if new:
+++++                  self.stacked_obs[i] = 0
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++++index d008c38..9b566fb 100755
+++++--- a/new-actions-rl/rlf/rl/envs.py
++++++++ b/new-actions-rl/rlf/rl/envs.py
+++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++++ 
+++++     return _thunk
+++++ 
+++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++++ 
+++++ def make_vec_envs(env_name,
+++++                   seed,
+++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++++                   trans_fn,
+++++                   args,
+++++                   num_frame_stack=None,
+++++-                  set_eval=False,
+++++-                  env_names_input=None):
++++++                  set_eval=False):
+++++ 
+++++     if args.multitask and not set_eval:
+++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++++                   set_eval=False,
+++++                   env_names_input=None):
+++++ 
++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     envs = [
+++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++++-        for env_name in env_names
++++++        for env_name in candidate_env_names
+++++     ]
+++++ 
+++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++++index 0d25c28..e45648c 100755
+++++--- a/new-actions-rl/rlf/rl/rl.py
++++++++ b/new-actions-rl/rlf/rl/rl.py
+++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++           end_update, lr_updates, args, test_args, checkpointer):
+++++ 
++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     if args.resume and start_update > 0:
+++++         start_update += 1
+++++ 
+++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++         log.start_interval_log()
+++++ 
+++++         if args.multitask:
+++++-            idx = np.random.randint(10000) % len(env_names)
++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++++             envs = envs_bulk[idx]
+++++-            args.env_name = env_names[idx]
+++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++++            args.env_name = actual_env_names[idx]
++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++++         else:
+++++             envs = envs_bulk
+++++ 
+++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++                 train_eval_envs = []
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++++                                train_eval_envs = None)
+++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++             else:
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++++                                train_eval_envs[i])
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++++index 953d419..edec780 100644
++++--- a/new-actions-rl/rlf/main.py
+++++++ b/new-actions-rl/rlf/main.py
++++@@ -39,7 +39,7 @@ def get_num_updates(args):
++++     return num_updates, lr_updates
++++ 
++++ 
++++-def get_fine_tune_run(load_name, env_name):
+++++def get_fine_tune_run(load_name, env_name, args):
++++     from rlf.exp_mgr.eval import get_max_run
++++     import wandb
++++     import subprocess
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++index 953d419..edec780 100644
+++--- a/new-actions-rl/rlf/main.py
++++++ b/new-actions-rl/rlf/main.py
+++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++     return num_updates, lr_updates
+++ 
+++ 
+++-def get_fine_tune_run(load_name, env_name):
++++def get_fine_tune_run(load_name, env_name, args):
+++     from rlf.exp_mgr.eval import get_max_run
+++     import wandb
+++     import subprocess
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..c06c75e 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++16/04/2024
++++14:42:37
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: 9349
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -109,7 +111,7 @@ kl_pen: None
+++ large_steps: 40
+++ latent_dim: 1
+++ load_all_data: False
+++-load_best_name: None
++++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
+++ load_dataset: True
+++ load_emb_logvar: True
+++ load_emb_model_file: None
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++@@ -193,7 +196,7 @@ render_result_figures: False
+++ render_text: False
+++ reparam: True
+++ result_dir: ./data/results
+++-resume: False
++++resume: True
+++ resume_emb_training: False
+++ reward_entropy_coef: 0.0
+++ rl_use_radam: False
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..ec24bd5 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..6d6f339 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,1081 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..37f6dc9 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..c4ff3d3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++index a55af28..9e018c4 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++@@ -1,11 +1,11 @@
++++ Date and Time:
++++-10/03/2024
++++-16:36:27
+++++15/04/2024
+++++22:26:28
++++ 
++++ action_base_hidden_size: 128
++++ action_base_output_size: 64
++++ action_proj_dim: 1
++++-action_random_sample: True
+++++action_random_sample: False
++++ action_seg_loc: ./data/action_segs
++++ action_set_size: 50
++++ algo: ppo
++++@@ -14,6 +14,7 @@ analysis_angle: None
++++ analysis_emb: None
++++ anti_alias_blur: 0.0
++++ backup: None
+++++best_run: None
++++ both_train_test: False
++++ bound_effect: False
++++ cat_kl_loss: None
++++@@ -38,7 +39,7 @@ create_play_len: 7
++++ create_play_run_steps: 3
++++ create_sec_goal_reward: 2.0
++++ create_target_reward: 1.0
++++-cuda: False
+++++cuda: True
++++ cuda_deterministic: False
++++ debug_render: False
++++ decay_clipping: False
++++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++++ encoder_dim: 64
++++ entropy_coef: 0.005
++++ env_name: CreateLevelPush-v0
+++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++++ eps: 1e-05
++++ eval_interval: 50
++++-eval_num_processes: None
+++++eval_num_processes: 1
++++ eval_only: False
++++ eval_split: False
++++ eval_split_ratio: 0.5
++++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++++ max_grid_steps: 50
++++ max_std_width: 3.0
++++ mega_res_interval: 4
+++++multitask: True
++++ n_clusters: 10
++++ n_distributions: 1
++++ n_hidden_option: 3
++++@@ -138,7 +141,7 @@ no_diag: True
++++ no_frame_stack: False
++++ no_initial_state: False
++++ no_overlap_env: False
++++-no_test_eval: False
+++++no_test_eval: True
++++ no_var: False
++++ normalize_embs: False
++++ not_upto: True
++++@@ -146,7 +149,7 @@ num_distributions: 400
++++ num_env_steps: 60000000
++++ num_eval: 20
++++ num_mini_batch: 4
++++-num_processes: 1
+++++num_processes: 4
++++ num_render: None
++++ num_steps: 384
++++ num_z: 1
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..cda9700 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..ebf34e4 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++++index 93c497a..479a608 100644
+++++--- a/new-actions-rl/arguments.py
++++++++ b/new-actions-rl/arguments.py
+++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++++ 
+++++     #### Multitask specific
+++++     parser.add_argument('--multitask', action='store_true', default=False)
++++++    parser.add_argument('--env-names', nargs='+', default=[])
+++++ 
+++++     #### Resume specific
+++++     parser.add_argument('--best-run', type=int, default=None)
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++index 00a83d9..37f6dc9 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++@@ -1 +1 @@
+++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++++\ No newline at end of file
++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++++\ No newline at end of file
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++index b531690..c4ff3d3 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++++          for (i, new) in enumerate(news):
+++++              if new:
+++++                  self.stacked_obs[i] = 0
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++++index d008c38..9b566fb 100755
+++++--- a/new-actions-rl/rlf/rl/envs.py
++++++++ b/new-actions-rl/rlf/rl/envs.py
+++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++++ 
+++++     return _thunk
+++++ 
+++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++++ 
+++++ def make_vec_envs(env_name,
+++++                   seed,
+++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++++                   trans_fn,
+++++                   args,
+++++                   num_frame_stack=None,
+++++-                  set_eval=False,
+++++-                  env_names_input=None):
++++++                  set_eval=False):
+++++ 
+++++     if args.multitask and not set_eval:
+++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++++                   set_eval=False,
+++++                   env_names_input=None):
+++++ 
++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     envs = [
+++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++++-        for env_name in env_names
++++++        for env_name in candidate_env_names
+++++     ]
+++++ 
+++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++++index 0d25c28..e45648c 100755
+++++--- a/new-actions-rl/rlf/rl/rl.py
++++++++ b/new-actions-rl/rlf/rl/rl.py
+++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++           end_update, lr_updates, args, test_args, checkpointer):
+++++ 
++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     if args.resume and start_update > 0:
+++++         start_update += 1
+++++ 
+++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++         log.start_interval_log()
+++++ 
+++++         if args.multitask:
+++++-            idx = np.random.randint(10000) % len(env_names)
++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++++             envs = envs_bulk[idx]
+++++-            args.env_name = env_names[idx]
+++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++++            args.env_name = actual_env_names[idx]
++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++++         else:
+++++             envs = envs_bulk
+++++ 
+++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++                 train_eval_envs = []
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++++                                train_eval_envs = None)
+++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++             else:
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++++                                train_eval_envs[i])
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++++index 953d419..edec780 100644
++++--- a/new-actions-rl/rlf/main.py
+++++++ b/new-actions-rl/rlf/main.py
++++@@ -39,7 +39,7 @@ def get_num_updates(args):
++++     return num_updates, lr_updates
++++ 
++++ 
++++-def get_fine_tune_run(load_name, env_name):
+++++def get_fine_tune_run(load_name, env_name, args):
++++     from rlf.exp_mgr.eval import get_max_run
++++     import wandb
++++     import subprocess
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++index a55af28..5c86c73 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++@@ -1,11 +1,11 @@
++++ Date and Time:
++++-10/03/2024
++++-16:36:27
+++++16/04/2024
+++++11:03:41
++++ 
++++ action_base_hidden_size: 128
++++ action_base_output_size: 64
++++ action_proj_dim: 1
++++-action_random_sample: True
+++++action_random_sample: False
++++ action_seg_loc: ./data/action_segs
++++ action_set_size: 50
++++ algo: ppo
++++@@ -14,6 +14,7 @@ analysis_angle: None
++++ analysis_emb: None
++++ anti_alias_blur: 0.0
++++ backup: None
+++++best_run: 5799
++++ both_train_test: False
++++ bound_effect: False
++++ cat_kl_loss: None
++++@@ -38,7 +39,7 @@ create_play_len: 7
++++ create_play_run_steps: 3
++++ create_sec_goal_reward: 2.0
++++ create_target_reward: 1.0
++++-cuda: False
+++++cuda: True
++++ cuda_deterministic: False
++++ debug_render: False
++++ decay_clipping: False
++++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++++ encoder_dim: 64
++++ entropy_coef: 0.005
++++ env_name: CreateLevelPush-v0
+++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++++ eps: 1e-05
++++ eval_interval: 50
++++-eval_num_processes: None
+++++eval_num_processes: 1
++++ eval_only: False
++++ eval_split: False
++++ eval_split_ratio: 0.5
++++@@ -109,7 +111,7 @@ kl_pen: None
++++ large_steps: 40
++++ latent_dim: 1
++++ load_all_data: False
++++-load_best_name: None
+++++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
++++ load_dataset: True
++++ load_emb_logvar: True
++++ load_emb_model_file: None
++++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++++ max_grid_steps: 50
++++ max_std_width: 3.0
++++ mega_res_interval: 4
+++++multitask: True
++++ n_clusters: 10
++++ n_distributions: 1
++++ n_hidden_option: 3
++++@@ -138,7 +141,7 @@ no_diag: True
++++ no_frame_stack: False
++++ no_initial_state: False
++++ no_overlap_env: False
++++-no_test_eval: False
+++++no_test_eval: True
++++ no_var: False
++++ normalize_embs: False
++++ not_upto: True
++++@@ -146,7 +149,7 @@ num_distributions: 400
++++ num_env_steps: 60000000
++++ num_eval: 20
++++ num_mini_batch: 4
++++-num_processes: 1
+++++num_processes: 4
++++ num_render: None
++++ num_steps: 384
++++ num_z: 1
++++@@ -193,7 +196,7 @@ render_result_figures: False
++++ render_text: False
++++ reparam: True
++++ result_dir: ./data/results
++++-resume: False
+++++resume: True
++++ resume_emb_training: False
++++ reward_entropy_coef: 0.0
++++ rl_use_radam: False
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..e3712f3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..fde463e 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,433 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++++index 93c497a..479a608 100644
+++++--- a/new-actions-rl/arguments.py
++++++++ b/new-actions-rl/arguments.py
+++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++++ 
+++++     #### Multitask specific
+++++     parser.add_argument('--multitask', action='store_true', default=False)
++++++    parser.add_argument('--env-names', nargs='+', default=[])
+++++ 
+++++     #### Resume specific
+++++     parser.add_argument('--best-run', type=int, default=None)
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++index 00a83d9..37f6dc9 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++@@ -1 +1 @@
+++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++++\ No newline at end of file
++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++++\ No newline at end of file
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++index b531690..c4ff3d3 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++++          for (i, new) in enumerate(news):
+++++              if new:
+++++                  self.stacked_obs[i] = 0
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++++index d008c38..9b566fb 100755
+++++--- a/new-actions-rl/rlf/rl/envs.py
++++++++ b/new-actions-rl/rlf/rl/envs.py
+++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++++ 
+++++     return _thunk
+++++ 
+++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++++ 
+++++ def make_vec_envs(env_name,
+++++                   seed,
+++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++++                   trans_fn,
+++++                   args,
+++++                   num_frame_stack=None,
+++++-                  set_eval=False,
+++++-                  env_names_input=None):
++++++                  set_eval=False):
+++++ 
+++++     if args.multitask and not set_eval:
+++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++++                   set_eval=False,
+++++                   env_names_input=None):
+++++ 
++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     envs = [
+++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++++-        for env_name in env_names
++++++        for env_name in candidate_env_names
+++++     ]
+++++ 
+++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++++index 0d25c28..e45648c 100755
+++++--- a/new-actions-rl/rlf/rl/rl.py
++++++++ b/new-actions-rl/rlf/rl/rl.py
+++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++           end_update, lr_updates, args, test_args, checkpointer):
+++++ 
++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     if args.resume and start_update > 0:
+++++         start_update += 1
+++++ 
+++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++         log.start_interval_log()
+++++ 
+++++         if args.multitask:
+++++-            idx = np.random.randint(10000) % len(env_names)
++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++++             envs = envs_bulk[idx]
+++++-            args.env_name = env_names[idx]
+++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++++            args.env_name = actual_env_names[idx]
++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++++         else:
+++++             envs = envs_bulk
+++++ 
+++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++                 train_eval_envs = []
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++++                                train_eval_envs = None)
+++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++             else:
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++++                                train_eval_envs[i])
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++++index 93c497a..479a608 100644
+++++--- a/new-actions-rl/arguments.py
++++++++ b/new-actions-rl/arguments.py
+++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++++ 
+++++     #### Multitask specific
+++++     parser.add_argument('--multitask', action='store_true', default=False)
++++++    parser.add_argument('--env-names', nargs='+', default=[])
+++++ 
+++++     #### Resume specific
+++++     parser.add_argument('--best-run', type=int, default=None)
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++index a55af28..9e018c4 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++@@ -1,11 +1,11 @@
+++++ Date and Time:
+++++-10/03/2024
+++++-16:36:27
++++++15/04/2024
++++++22:26:28
+++++ 
+++++ action_base_hidden_size: 128
+++++ action_base_output_size: 64
+++++ action_proj_dim: 1
+++++-action_random_sample: True
++++++action_random_sample: False
+++++ action_seg_loc: ./data/action_segs
+++++ action_set_size: 50
+++++ algo: ppo
+++++@@ -14,6 +14,7 @@ analysis_angle: None
+++++ analysis_emb: None
+++++ anti_alias_blur: 0.0
+++++ backup: None
++++++best_run: None
+++++ both_train_test: False
+++++ bound_effect: False
+++++ cat_kl_loss: None
+++++@@ -38,7 +39,7 @@ create_play_len: 7
+++++ create_play_run_steps: 3
+++++ create_sec_goal_reward: 2.0
+++++ create_target_reward: 1.0
+++++-cuda: False
++++++cuda: True
+++++ cuda_deterministic: False
+++++ debug_render: False
+++++ decay_clipping: False
+++++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++++ encoder_dim: 64
+++++ entropy_coef: 0.005
+++++ env_name: CreateLevelPush-v0
++++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++++ eps: 1e-05
+++++ eval_interval: 50
+++++-eval_num_processes: None
++++++eval_num_processes: 1
+++++ eval_only: False
+++++ eval_split: False
+++++ eval_split_ratio: 0.5
+++++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++++ max_grid_steps: 50
+++++ max_std_width: 3.0
+++++ mega_res_interval: 4
++++++multitask: True
+++++ n_clusters: 10
+++++ n_distributions: 1
+++++ n_hidden_option: 3
+++++@@ -138,7 +141,7 @@ no_diag: True
+++++ no_frame_stack: False
+++++ no_initial_state: False
+++++ no_overlap_env: False
+++++-no_test_eval: False
++++++no_test_eval: True
+++++ no_var: False
+++++ normalize_embs: False
+++++ not_upto: True
+++++@@ -146,7 +149,7 @@ num_distributions: 400
+++++ num_env_steps: 60000000
+++++ num_eval: 20
+++++ num_mini_batch: 4
+++++-num_processes: 1
++++++num_processes: 4
+++++ num_render: None
+++++ num_steps: 384
+++++ num_z: 1
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++index 00a83d9..cda9700 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++@@ -1 +1 @@
+++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++++\ No newline at end of file
++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++++\ No newline at end of file
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++index b531690..ebf34e4 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
+++++          for (i, new) in enumerate(news):
+++++              if new:
+++++                  self.stacked_obs[i] = 0
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++++index 93c497a..479a608 100644
++++++--- a/new-actions-rl/arguments.py
+++++++++ b/new-actions-rl/arguments.py
++++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++++ 
++++++     #### Multitask specific
++++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++++    parser.add_argument('--env-names', nargs='+', default=[])
++++++ 
++++++     #### Resume specific
++++++     parser.add_argument('--best-run', type=int, default=None)
++++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++index 00a83d9..37f6dc9 100644
++++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++@@ -1 +1 @@
++++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++++\ No newline at end of file
+++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++++\ No newline at end of file
++++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++index b531690..c4ff3d3 100644
++++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++++          for (i, new) in enumerate(news):
++++++              if new:
++++++                  self.stacked_obs[i] = 0
+++++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++++index d008c38..9b566fb 100755
++++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++++ b/new-actions-rl/rlf/rl/envs.py
++++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++++ 
++++++     return _thunk
++++++ 
++++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++++ 
++++++ def make_vec_envs(env_name,
++++++                   seed,
++++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++++                   trans_fn,
++++++                   args,
++++++                   num_frame_stack=None,
++++++-                  set_eval=False,
++++++-                  env_names_input=None):
+++++++                  set_eval=False):
++++++ 
++++++     if args.multitask and not set_eval:
++++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++++                   set_eval=False,
++++++                   env_names_input=None):
++++++ 
+++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++++     envs = [
++++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++++-        for env_name in env_names
+++++++        for env_name in candidate_env_names
++++++     ]
++++++ 
++++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++++index 0d25c28..e45648c 100755
++++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++++ b/new-actions-rl/rlf/rl/rl.py
++++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++++           end_update, lr_updates, args, test_args, checkpointer):
++++++ 
+++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++++     if args.resume and start_update > 0:
++++++         start_update += 1
++++++ 
++++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++++         log.start_interval_log()
++++++ 
++++++         if args.multitask:
++++++-            idx = np.random.randint(10000) % len(env_names)
+++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++++             envs = envs_bulk[idx]
++++++-            args.env_name = env_names[idx]
++++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++++            args.env_name = actual_env_names[idx]
+++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++++         else:
++++++             envs = envs_bulk
++++++ 
++++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++++                 train_eval_envs = []
++++++                 for i in range(len(envs_bulk)):
++++++                     eval_envs = envs_bulk[i]
++++++-                    args.env_name = env_names[i]
++++++-                    print(f"evaluating for env {env_names[i]}")
+++++++                    args.env_name = actual_env_names[i]
+++++++                    print(f"evaluating for env {actual_env_names[i]}")
++++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++++                                train_eval_envs = None)
++++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++++             else:
++++++                 for i in range(len(envs_bulk)):
++++++                     eval_envs = envs_bulk[i]
++++++-                    args.env_name = env_names[i]
++++++-                    print(f"evaluating for env {env_names[i]}")
+++++++                    args.env_name = actual_env_names[i]
+++++++                    print(f"evaluating for env {actual_env_names[i]}")
++++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++++                                train_eval_envs[i])
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++++index 953d419..edec780 100644
+++++--- a/new-actions-rl/rlf/main.py
++++++++ b/new-actions-rl/rlf/main.py
+++++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++++     return num_updates, lr_updates
+++++ 
+++++ 
+++++-def get_fine_tune_run(load_name, env_name):
++++++def get_fine_tune_run(load_name, env_name, args):
+++++     from rlf.exp_mgr.eval import get_max_run
+++++     import wandb
+++++     import subprocess
+++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++++index d008c38..9b566fb 100755
+++++--- a/new-actions-rl/rlf/rl/envs.py
++++++++ b/new-actions-rl/rlf/rl/envs.py
+++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++++ 
+++++     return _thunk
+++++ 
+++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++++ 
+++++ def make_vec_envs(env_name,
+++++                   seed,
+++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++++                   trans_fn,
+++++                   args,
+++++                   num_frame_stack=None,
+++++-                  set_eval=False,
+++++-                  env_names_input=None):
++++++                  set_eval=False):
+++++ 
+++++     if args.multitask and not set_eval:
+++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++++                   set_eval=False,
+++++                   env_names_input=None):
+++++ 
++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     envs = [
+++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++++-        for env_name in env_names
++++++        for env_name in candidate_env_names
+++++     ]
+++++ 
+++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++++index 0d25c28..e45648c 100755
+++++--- a/new-actions-rl/rlf/rl/rl.py
++++++++ b/new-actions-rl/rlf/rl/rl.py
+++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++           end_update, lr_updates, args, test_args, checkpointer):
+++++ 
++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     if args.resume and start_update > 0:
+++++         start_update += 1
+++++ 
+++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++         log.start_interval_log()
+++++ 
+++++         if args.multitask:
+++++-            idx = np.random.randint(10000) % len(env_names)
++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++++             envs = envs_bulk[idx]
+++++-            args.env_name = env_names[idx]
+++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++++            args.env_name = actual_env_names[idx]
++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++++         else:
+++++             envs = envs_bulk
+++++ 
+++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++                 train_eval_envs = []
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++++                                train_eval_envs = None)
+++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++             else:
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++++                                train_eval_envs[i])
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++++index 953d419..edec780 100644
++++--- a/new-actions-rl/rlf/main.py
+++++++ b/new-actions-rl/rlf/main.py
++++@@ -39,7 +39,7 @@ def get_num_updates(args):
++++     return num_updates, lr_updates
++++ 
++++ 
++++-def get_fine_tune_run(load_name, env_name):
+++++def get_fine_tune_run(load_name, env_name, args):
++++     from rlf.exp_mgr.eval import get_max_run
++++     import wandb
++++     import subprocess
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++index 953d419..edec780 100644
+++--- a/new-actions-rl/rlf/main.py
++++++ b/new-actions-rl/rlf/main.py
+++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++     return num_updates, lr_updates
+++ 
+++ 
+++-def get_fine_tune_run(load_name, env_name):
++++def get_fine_tune_run(load_name, env_name, args):
+++     from rlf.exp_mgr.eval import get_max_run
+++     import wandb
+++     import subprocess
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++index 953d419..edec780 100644
++--- a/new-actions-rl/rlf/main.py
+++++ b/new-actions-rl/rlf/main.py
++@@ -39,7 +39,7 @@ def get_num_updates(args):
++     return num_updates, lr_updates
++ 
++ 
++-def get_fine_tune_run(load_name, env_name):
+++def get_fine_tune_run(load_name, env_name, args):
++     from rlf.exp_mgr.eval import get_max_run
++     import wandb
++     import subprocess
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..471a8c9 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++17/04/2024
+++01:03:09
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: 16449
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -109,7 +111,7 @@ kl_pen: None
++ large_steps: 40
++ latent_dim: 1
++ load_all_data: False
++-load_best_name: None
+++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
++ load_dataset: True
++ load_emb_logvar: True
++ load_emb_model_file: None
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++@@ -193,7 +196,7 @@ render_result_figures: False
++ render_text: False
++ reparam: True
++ result_dir: ./data/results
++-resume: False
+++resume: True
++ resume_emb_training: False
++ reward_entropy_coef: 0.0
++ rl_use_radam: False
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..5cdd351 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 16449 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v
+\ No newline at end of file
+diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+index 953d419..edec780 100644
+--- a/new-actions-rl/rlf/main.py
++++ b/new-actions-rl/rlf/main.py
+@@ -39,7 +39,7 @@ def get_num_updates(args):
+     return num_updates, lr_updates
+ 
+ 
+-def get_fine_tune_run(load_name, env_name):
++def get_fine_tune_run(load_name, env_name, args):
+     from rlf.exp_mgr.eval import get_max_run
+     import wandb
+     import subprocess
+diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+index d008c38..9b566fb 100755
+--- a/new-actions-rl/rlf/rl/envs.py
++++ b/new-actions-rl/rlf/rl/envs.py
+@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+ 
+     return _thunk
+ 
+-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+ 
+ def make_vec_envs(env_name,
+                   seed,
+@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+                   trans_fn,
+                   args,
+                   num_frame_stack=None,
+-                  set_eval=False,
+-                  env_names_input=None):
++                  set_eval=False):
+ 
+     if args.multitask and not set_eval:
+         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+                   set_eval=False,
+                   env_names_input=None):
+ 
++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     envs = [
+         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+-        for env_name in env_names
++        for env_name in candidate_env_names
+     ]
+ 
+     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+index 0d25c28..e45648c 100755
+--- a/new-actions-rl/rlf/rl/rl.py
++++ b/new-actions-rl/rlf/rl/rl.py
+@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+           end_update, lr_updates, args, test_args, checkpointer):
+ 
++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     if args.resume and start_update > 0:
+         start_update += 1
+ 
+@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+         log.start_interval_log()
+ 
+         if args.multitask:
+-            idx = np.random.randint(10000) % len(env_names)
++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+             envs = envs_bulk[idx]
+-            args.env_name = env_names[idx]
+-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++            args.env_name = actual_env_names[idx]
++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+         else:
+             envs = envs_bulk
+ 
+@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+                 train_eval_envs = []
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs = None,
+                                train_eval_envs = None)
+@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+             else:
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs[i],
+                                train_eval_envs[i])
+347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+index 93c497a..479a608 100644
+--- a/new-actions-rl/arguments.py
++++ b/new-actions-rl/arguments.py
+@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+ 
+     #### Multitask specific
+     parser.add_argument('--multitask', action='store_true', default=False)
++    parser.add_argument('--env-names', nargs='+', default=[])
+ 
+     #### Resume specific
+     parser.add_argument('--best-run', type=int, default=None)
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+index a55af28..e8cd4ed 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+@@ -1,11 +1,11 @@
+ Date and Time:
+-10/03/2024
+-16:36:27
++17/04/2024
++12:09:34
+ 
+ action_base_hidden_size: 128
+ action_base_output_size: 64
+ action_proj_dim: 1
+-action_random_sample: True
++action_random_sample: False
+ action_seg_loc: ./data/action_segs
+ action_set_size: 50
+ algo: ppo
+@@ -14,6 +14,7 @@ analysis_angle: None
+ analysis_emb: None
+ anti_alias_blur: 0.0
+ backup: None
++best_run: 22299
+ both_train_test: False
+ bound_effect: False
+ cat_kl_loss: None
+@@ -38,7 +39,7 @@ create_play_len: 7
+ create_play_run_steps: 3
+ create_sec_goal_reward: 2.0
+ create_target_reward: 1.0
+-cuda: False
++cuda: True
+ cuda_deterministic: False
+ debug_render: False
+ decay_clipping: False
+@@ -73,9 +74,10 @@ emb_viz_interval: 5
+ encoder_dim: 64
+ entropy_coef: 0.005
+ env_name: CreateLevelPush-v0
++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+ eps: 1e-05
+ eval_interval: 50
+-eval_num_processes: None
++eval_num_processes: 1
+ eval_only: False
+ eval_split: False
+ eval_split_ratio: 0.5
+@@ -109,7 +111,7 @@ kl_pen: None
+ large_steps: 40
+ latent_dim: 1
+ load_all_data: False
+-load_best_name: None
++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
+ load_dataset: True
+ load_emb_logvar: True
+ load_emb_model_file: None
+@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+ max_grid_steps: 50
+ max_std_width: 3.0
+ mega_res_interval: 4
++multitask: True
+ n_clusters: 10
+ n_distributions: 1
+ n_hidden_option: 3
+@@ -138,7 +141,7 @@ no_diag: True
+ no_frame_stack: False
+ no_initial_state: False
+ no_overlap_env: False
+-no_test_eval: False
++no_test_eval: True
+ no_var: False
+ normalize_embs: False
+ not_upto: True
+@@ -146,7 +149,7 @@ num_distributions: 400
+ num_env_steps: 60000000
+ num_eval: 20
+ num_mini_batch: 4
+-num_processes: 1
++num_processes: 4
+ num_render: None
+ num_steps: 384
+ num_z: 1
+@@ -193,7 +196,7 @@ render_result_figures: False
+ render_text: False
+ reparam: True
+ result_dir: ./data/results
+-resume: False
++resume: True
+ resume_emb_training: False
+ reward_entropy_coef: 0.0
+ rl_use_radam: False
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+index 00a83d9..c83c000 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+@@ -1 +1 @@
+-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+\ No newline at end of file
++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 16449 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 22299 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 28099 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+\ No newline at end of file
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+index b531690..4605e4d 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+@@ -10764,3 +10764,10378 @@ index b41b6b9..e59734f 100755
+          for (i, new) in enumerate(news):
+              if new:
+                  self.stacked_obs[i] = 0
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..37f6dc9 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..c4ff3d3 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..9e018c4 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++15/04/2024
+++22:26:28
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: None
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..cda9700 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..ebf34e4 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..37f6dc9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..c4ff3d3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++index 953d419..edec780 100644
++--- a/new-actions-rl/rlf/main.py
+++++ b/new-actions-rl/rlf/main.py
++@@ -39,7 +39,7 @@ def get_num_updates(args):
++     return num_updates, lr_updates
++ 
++ 
++-def get_fine_tune_run(load_name, env_name):
+++def get_fine_tune_run(load_name, env_name, args):
++     from rlf.exp_mgr.eval import get_max_run
++     import wandb
++     import subprocess
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..5c86c73 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++16/04/2024
+++11:03:41
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: 5799
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -109,7 +111,7 @@ kl_pen: None
++ large_steps: 40
++ latent_dim: 1
++ load_all_data: False
++-load_best_name: None
+++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
++ load_dataset: True
++ load_emb_logvar: True
++ load_emb_model_file: None
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++@@ -193,7 +196,7 @@ render_result_figures: False
++ render_text: False
++ reparam: True
++ result_dir: ./data/results
++-resume: False
+++resume: True
++ resume_emb_training: False
++ reward_entropy_coef: 0.0
++ rl_use_radam: False
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..e3712f3 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..fde463e 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,433 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..37f6dc9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..c4ff3d3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..9e018c4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++15/04/2024
++++22:26:28
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: None
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..cda9700 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..ebf34e4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..37f6dc9 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..c4ff3d3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++index 953d419..edec780 100644
+++--- a/new-actions-rl/rlf/main.py
++++++ b/new-actions-rl/rlf/main.py
+++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++     return num_updates, lr_updates
+++ 
+++ 
+++-def get_fine_tune_run(load_name, env_name):
++++def get_fine_tune_run(load_name, env_name, args):
+++     from rlf.exp_mgr.eval import get_max_run
+++     import wandb
+++     import subprocess
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++index 953d419..edec780 100644
++--- a/new-actions-rl/rlf/main.py
+++++ b/new-actions-rl/rlf/main.py
++@@ -39,7 +39,7 @@ def get_num_updates(args):
++     return num_updates, lr_updates
++ 
++ 
++-def get_fine_tune_run(load_name, env_name):
+++def get_fine_tune_run(load_name, env_name, args):
++     from rlf.exp_mgr.eval import get_max_run
++     import wandb
++     import subprocess
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..c06c75e 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++16/04/2024
+++14:42:37
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: 9349
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -109,7 +111,7 @@ kl_pen: None
++ large_steps: 40
++ latent_dim: 1
++ load_all_data: False
++-load_best_name: None
+++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
++ load_dataset: True
++ load_emb_logvar: True
++ load_emb_model_file: None
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++@@ -193,7 +196,7 @@ render_result_figures: False
++ render_text: False
++ reparam: True
++ result_dir: ./data/results
++-resume: False
+++resume: True
++ resume_emb_training: False
++ reward_entropy_coef: 0.0
++ rl_use_radam: False
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..ec24bd5 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..6d6f339 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,1081 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..37f6dc9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..c4ff3d3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..9e018c4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++15/04/2024
++++22:26:28
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: None
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..cda9700 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..ebf34e4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..37f6dc9 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..c4ff3d3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++index 953d419..edec780 100644
+++--- a/new-actions-rl/rlf/main.py
++++++ b/new-actions-rl/rlf/main.py
+++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++     return num_updates, lr_updates
+++ 
+++ 
+++-def get_fine_tune_run(load_name, env_name):
++++def get_fine_tune_run(load_name, env_name, args):
+++     from rlf.exp_mgr.eval import get_max_run
+++     import wandb
+++     import subprocess
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..5c86c73 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++16/04/2024
++++11:03:41
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: 5799
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -109,7 +111,7 @@ kl_pen: None
+++ large_steps: 40
+++ latent_dim: 1
+++ load_all_data: False
+++-load_best_name: None
++++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
+++ load_dataset: True
+++ load_emb_logvar: True
+++ load_emb_model_file: None
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++@@ -193,7 +196,7 @@ render_result_figures: False
+++ render_text: False
+++ reparam: True
+++ result_dir: ./data/results
+++-resume: False
++++resume: True
+++ resume_emb_training: False
+++ reward_entropy_coef: 0.0
+++ rl_use_radam: False
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..e3712f3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..fde463e 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,433 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..37f6dc9 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..c4ff3d3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++index a55af28..9e018c4 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++@@ -1,11 +1,11 @@
++++ Date and Time:
++++-10/03/2024
++++-16:36:27
+++++15/04/2024
+++++22:26:28
++++ 
++++ action_base_hidden_size: 128
++++ action_base_output_size: 64
++++ action_proj_dim: 1
++++-action_random_sample: True
+++++action_random_sample: False
++++ action_seg_loc: ./data/action_segs
++++ action_set_size: 50
++++ algo: ppo
++++@@ -14,6 +14,7 @@ analysis_angle: None
++++ analysis_emb: None
++++ anti_alias_blur: 0.0
++++ backup: None
+++++best_run: None
++++ both_train_test: False
++++ bound_effect: False
++++ cat_kl_loss: None
++++@@ -38,7 +39,7 @@ create_play_len: 7
++++ create_play_run_steps: 3
++++ create_sec_goal_reward: 2.0
++++ create_target_reward: 1.0
++++-cuda: False
+++++cuda: True
++++ cuda_deterministic: False
++++ debug_render: False
++++ decay_clipping: False
++++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++++ encoder_dim: 64
++++ entropy_coef: 0.005
++++ env_name: CreateLevelPush-v0
+++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++++ eps: 1e-05
++++ eval_interval: 50
++++-eval_num_processes: None
+++++eval_num_processes: 1
++++ eval_only: False
++++ eval_split: False
++++ eval_split_ratio: 0.5
++++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++++ max_grid_steps: 50
++++ max_std_width: 3.0
++++ mega_res_interval: 4
+++++multitask: True
++++ n_clusters: 10
++++ n_distributions: 1
++++ n_hidden_option: 3
++++@@ -138,7 +141,7 @@ no_diag: True
++++ no_frame_stack: False
++++ no_initial_state: False
++++ no_overlap_env: False
++++-no_test_eval: False
+++++no_test_eval: True
++++ no_var: False
++++ normalize_embs: False
++++ not_upto: True
++++@@ -146,7 +149,7 @@ num_distributions: 400
++++ num_env_steps: 60000000
++++ num_eval: 20
++++ num_mini_batch: 4
++++-num_processes: 1
+++++num_processes: 4
++++ num_render: None
++++ num_steps: 384
++++ num_z: 1
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..cda9700 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..ebf34e4 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++++index 93c497a..479a608 100644
+++++--- a/new-actions-rl/arguments.py
++++++++ b/new-actions-rl/arguments.py
+++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++++ 
+++++     #### Multitask specific
+++++     parser.add_argument('--multitask', action='store_true', default=False)
++++++    parser.add_argument('--env-names', nargs='+', default=[])
+++++ 
+++++     #### Resume specific
+++++     parser.add_argument('--best-run', type=int, default=None)
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++index 00a83d9..37f6dc9 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++@@ -1 +1 @@
+++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++++\ No newline at end of file
++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++++\ No newline at end of file
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++index b531690..c4ff3d3 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++++          for (i, new) in enumerate(news):
+++++              if new:
+++++                  self.stacked_obs[i] = 0
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++++index d008c38..9b566fb 100755
+++++--- a/new-actions-rl/rlf/rl/envs.py
++++++++ b/new-actions-rl/rlf/rl/envs.py
+++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++++ 
+++++     return _thunk
+++++ 
+++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++++ 
+++++ def make_vec_envs(env_name,
+++++                   seed,
+++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++++                   trans_fn,
+++++                   args,
+++++                   num_frame_stack=None,
+++++-                  set_eval=False,
+++++-                  env_names_input=None):
++++++                  set_eval=False):
+++++ 
+++++     if args.multitask and not set_eval:
+++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++++                   set_eval=False,
+++++                   env_names_input=None):
+++++ 
++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     envs = [
+++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++++-        for env_name in env_names
++++++        for env_name in candidate_env_names
+++++     ]
+++++ 
+++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++++index 0d25c28..e45648c 100755
+++++--- a/new-actions-rl/rlf/rl/rl.py
++++++++ b/new-actions-rl/rlf/rl/rl.py
+++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++           end_update, lr_updates, args, test_args, checkpointer):
+++++ 
++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     if args.resume and start_update > 0:
+++++         start_update += 1
+++++ 
+++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++         log.start_interval_log()
+++++ 
+++++         if args.multitask:
+++++-            idx = np.random.randint(10000) % len(env_names)
++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++++             envs = envs_bulk[idx]
+++++-            args.env_name = env_names[idx]
+++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++++            args.env_name = actual_env_names[idx]
++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++++         else:
+++++             envs = envs_bulk
+++++ 
+++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++                 train_eval_envs = []
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++++                                train_eval_envs = None)
+++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++             else:
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++++                                train_eval_envs[i])
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++++index 953d419..edec780 100644
++++--- a/new-actions-rl/rlf/main.py
+++++++ b/new-actions-rl/rlf/main.py
++++@@ -39,7 +39,7 @@ def get_num_updates(args):
++++     return num_updates, lr_updates
++++ 
++++ 
++++-def get_fine_tune_run(load_name, env_name):
+++++def get_fine_tune_run(load_name, env_name, args):
++++     from rlf.exp_mgr.eval import get_max_run
++++     import wandb
++++     import subprocess
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++index 953d419..edec780 100644
+++--- a/new-actions-rl/rlf/main.py
++++++ b/new-actions-rl/rlf/main.py
+++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++     return num_updates, lr_updates
+++ 
+++ 
+++-def get_fine_tune_run(load_name, env_name):
++++def get_fine_tune_run(load_name, env_name, args):
+++     from rlf.exp_mgr.eval import get_max_run
+++     import wandb
+++     import subprocess
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++index 953d419..edec780 100644
++--- a/new-actions-rl/rlf/main.py
+++++ b/new-actions-rl/rlf/main.py
++@@ -39,7 +39,7 @@ def get_num_updates(args):
++     return num_updates, lr_updates
++ 
++ 
++-def get_fine_tune_run(load_name, env_name):
+++def get_fine_tune_run(load_name, env_name, args):
++     from rlf.exp_mgr.eval import get_max_run
++     import wandb
++     import subprocess
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..85c20f2 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++16/04/2024
+++18:38:56
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: 12899
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -109,7 +111,7 @@ kl_pen: None
++ large_steps: 40
++ latent_dim: 1
++ load_all_data: False
++-load_best_name: None
+++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
++ load_dataset: True
++ load_emb_logvar: True
++ load_emb_model_file: None
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++@@ -193,7 +196,7 @@ render_result_figures: False
++ render_text: False
++ reparam: True
++ result_dir: ./data/results
++-resume: False
+++resume: True
++ resume_emb_training: False
++ reward_entropy_coef: 0.0
++ rl_use_radam: False
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..63b1f15 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 16449 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..815f948 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,2377 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..37f6dc9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..c4ff3d3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..9e018c4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++15/04/2024
++++22:26:28
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: None
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..cda9700 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..ebf34e4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..37f6dc9 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..c4ff3d3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++index 953d419..edec780 100644
+++--- a/new-actions-rl/rlf/main.py
++++++ b/new-actions-rl/rlf/main.py
+++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++     return num_updates, lr_updates
+++ 
+++ 
+++-def get_fine_tune_run(load_name, env_name):
++++def get_fine_tune_run(load_name, env_name, args):
+++     from rlf.exp_mgr.eval import get_max_run
+++     import wandb
+++     import subprocess
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..5c86c73 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++16/04/2024
++++11:03:41
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: 5799
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -109,7 +111,7 @@ kl_pen: None
+++ large_steps: 40
+++ latent_dim: 1
+++ load_all_data: False
+++-load_best_name: None
++++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
+++ load_dataset: True
+++ load_emb_logvar: True
+++ load_emb_model_file: None
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++@@ -193,7 +196,7 @@ render_result_figures: False
+++ render_text: False
+++ reparam: True
+++ result_dir: ./data/results
+++-resume: False
++++resume: True
+++ resume_emb_training: False
+++ reward_entropy_coef: 0.0
+++ rl_use_radam: False
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..e3712f3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..fde463e 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,433 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..37f6dc9 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..c4ff3d3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++index a55af28..9e018c4 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++@@ -1,11 +1,11 @@
++++ Date and Time:
++++-10/03/2024
++++-16:36:27
+++++15/04/2024
+++++22:26:28
++++ 
++++ action_base_hidden_size: 128
++++ action_base_output_size: 64
++++ action_proj_dim: 1
++++-action_random_sample: True
+++++action_random_sample: False
++++ action_seg_loc: ./data/action_segs
++++ action_set_size: 50
++++ algo: ppo
++++@@ -14,6 +14,7 @@ analysis_angle: None
++++ analysis_emb: None
++++ anti_alias_blur: 0.0
++++ backup: None
+++++best_run: None
++++ both_train_test: False
++++ bound_effect: False
++++ cat_kl_loss: None
++++@@ -38,7 +39,7 @@ create_play_len: 7
++++ create_play_run_steps: 3
++++ create_sec_goal_reward: 2.0
++++ create_target_reward: 1.0
++++-cuda: False
+++++cuda: True
++++ cuda_deterministic: False
++++ debug_render: False
++++ decay_clipping: False
++++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++++ encoder_dim: 64
++++ entropy_coef: 0.005
++++ env_name: CreateLevelPush-v0
+++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++++ eps: 1e-05
++++ eval_interval: 50
++++-eval_num_processes: None
+++++eval_num_processes: 1
++++ eval_only: False
++++ eval_split: False
++++ eval_split_ratio: 0.5
++++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++++ max_grid_steps: 50
++++ max_std_width: 3.0
++++ mega_res_interval: 4
+++++multitask: True
++++ n_clusters: 10
++++ n_distributions: 1
++++ n_hidden_option: 3
++++@@ -138,7 +141,7 @@ no_diag: True
++++ no_frame_stack: False
++++ no_initial_state: False
++++ no_overlap_env: False
++++-no_test_eval: False
+++++no_test_eval: True
++++ no_var: False
++++ normalize_embs: False
++++ not_upto: True
++++@@ -146,7 +149,7 @@ num_distributions: 400
++++ num_env_steps: 60000000
++++ num_eval: 20
++++ num_mini_batch: 4
++++-num_processes: 1
+++++num_processes: 4
++++ num_render: None
++++ num_steps: 384
++++ num_z: 1
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..cda9700 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..ebf34e4 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++++index 93c497a..479a608 100644
+++++--- a/new-actions-rl/arguments.py
++++++++ b/new-actions-rl/arguments.py
+++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++++ 
+++++     #### Multitask specific
+++++     parser.add_argument('--multitask', action='store_true', default=False)
++++++    parser.add_argument('--env-names', nargs='+', default=[])
+++++ 
+++++     #### Resume specific
+++++     parser.add_argument('--best-run', type=int, default=None)
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++index 00a83d9..37f6dc9 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++@@ -1 +1 @@
+++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++++\ No newline at end of file
++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++++\ No newline at end of file
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++index b531690..c4ff3d3 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++++          for (i, new) in enumerate(news):
+++++              if new:
+++++                  self.stacked_obs[i] = 0
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++++index d008c38..9b566fb 100755
+++++--- a/new-actions-rl/rlf/rl/envs.py
++++++++ b/new-actions-rl/rlf/rl/envs.py
+++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++++ 
+++++     return _thunk
+++++ 
+++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++++ 
+++++ def make_vec_envs(env_name,
+++++                   seed,
+++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++++                   trans_fn,
+++++                   args,
+++++                   num_frame_stack=None,
+++++-                  set_eval=False,
+++++-                  env_names_input=None):
++++++                  set_eval=False):
+++++ 
+++++     if args.multitask and not set_eval:
+++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++++                   set_eval=False,
+++++                   env_names_input=None):
+++++ 
++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     envs = [
+++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++++-        for env_name in env_names
++++++        for env_name in candidate_env_names
+++++     ]
+++++ 
+++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++++index 0d25c28..e45648c 100755
+++++--- a/new-actions-rl/rlf/rl/rl.py
++++++++ b/new-actions-rl/rlf/rl/rl.py
+++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++           end_update, lr_updates, args, test_args, checkpointer):
+++++ 
++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     if args.resume and start_update > 0:
+++++         start_update += 1
+++++ 
+++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++         log.start_interval_log()
+++++ 
+++++         if args.multitask:
+++++-            idx = np.random.randint(10000) % len(env_names)
++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++++             envs = envs_bulk[idx]
+++++-            args.env_name = env_names[idx]
+++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++++            args.env_name = actual_env_names[idx]
++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++++         else:
+++++             envs = envs_bulk
+++++ 
+++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++                 train_eval_envs = []
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++++                                train_eval_envs = None)
+++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++             else:
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++++                                train_eval_envs[i])
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++++index 953d419..edec780 100644
++++--- a/new-actions-rl/rlf/main.py
+++++++ b/new-actions-rl/rlf/main.py
++++@@ -39,7 +39,7 @@ def get_num_updates(args):
++++     return num_updates, lr_updates
++++ 
++++ 
++++-def get_fine_tune_run(load_name, env_name):
+++++def get_fine_tune_run(load_name, env_name, args):
++++     from rlf.exp_mgr.eval import get_max_run
++++     import wandb
++++     import subprocess
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++index 953d419..edec780 100644
+++--- a/new-actions-rl/rlf/main.py
++++++ b/new-actions-rl/rlf/main.py
+++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++     return num_updates, lr_updates
+++ 
+++ 
+++-def get_fine_tune_run(load_name, env_name):
++++def get_fine_tune_run(load_name, env_name, args):
+++     from rlf.exp_mgr.eval import get_max_run
+++     import wandb
+++     import subprocess
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..c06c75e 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++16/04/2024
++++14:42:37
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: 9349
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -109,7 +111,7 @@ kl_pen: None
+++ large_steps: 40
+++ latent_dim: 1
+++ load_all_data: False
+++-load_best_name: None
++++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
+++ load_dataset: True
+++ load_emb_logvar: True
+++ load_emb_model_file: None
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++@@ -193,7 +196,7 @@ render_result_figures: False
+++ render_text: False
+++ reparam: True
+++ result_dir: ./data/results
+++-resume: False
++++resume: True
+++ resume_emb_training: False
+++ reward_entropy_coef: 0.0
+++ rl_use_radam: False
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..ec24bd5 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..6d6f339 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,1081 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..37f6dc9 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..c4ff3d3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++index a55af28..9e018c4 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++@@ -1,11 +1,11 @@
++++ Date and Time:
++++-10/03/2024
++++-16:36:27
+++++15/04/2024
+++++22:26:28
++++ 
++++ action_base_hidden_size: 128
++++ action_base_output_size: 64
++++ action_proj_dim: 1
++++-action_random_sample: True
+++++action_random_sample: False
++++ action_seg_loc: ./data/action_segs
++++ action_set_size: 50
++++ algo: ppo
++++@@ -14,6 +14,7 @@ analysis_angle: None
++++ analysis_emb: None
++++ anti_alias_blur: 0.0
++++ backup: None
+++++best_run: None
++++ both_train_test: False
++++ bound_effect: False
++++ cat_kl_loss: None
++++@@ -38,7 +39,7 @@ create_play_len: 7
++++ create_play_run_steps: 3
++++ create_sec_goal_reward: 2.0
++++ create_target_reward: 1.0
++++-cuda: False
+++++cuda: True
++++ cuda_deterministic: False
++++ debug_render: False
++++ decay_clipping: False
++++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++++ encoder_dim: 64
++++ entropy_coef: 0.005
++++ env_name: CreateLevelPush-v0
+++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++++ eps: 1e-05
++++ eval_interval: 50
++++-eval_num_processes: None
+++++eval_num_processes: 1
++++ eval_only: False
++++ eval_split: False
++++ eval_split_ratio: 0.5
++++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++++ max_grid_steps: 50
++++ max_std_width: 3.0
++++ mega_res_interval: 4
+++++multitask: True
++++ n_clusters: 10
++++ n_distributions: 1
++++ n_hidden_option: 3
++++@@ -138,7 +141,7 @@ no_diag: True
++++ no_frame_stack: False
++++ no_initial_state: False
++++ no_overlap_env: False
++++-no_test_eval: False
+++++no_test_eval: True
++++ no_var: False
++++ normalize_embs: False
++++ not_upto: True
++++@@ -146,7 +149,7 @@ num_distributions: 400
++++ num_env_steps: 60000000
++++ num_eval: 20
++++ num_mini_batch: 4
++++-num_processes: 1
+++++num_processes: 4
++++ num_render: None
++++ num_steps: 384
++++ num_z: 1
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..cda9700 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..ebf34e4 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++++index 93c497a..479a608 100644
+++++--- a/new-actions-rl/arguments.py
++++++++ b/new-actions-rl/arguments.py
+++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++++ 
+++++     #### Multitask specific
+++++     parser.add_argument('--multitask', action='store_true', default=False)
++++++    parser.add_argument('--env-names', nargs='+', default=[])
+++++ 
+++++     #### Resume specific
+++++     parser.add_argument('--best-run', type=int, default=None)
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++index 00a83d9..37f6dc9 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++@@ -1 +1 @@
+++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++++\ No newline at end of file
++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++++\ No newline at end of file
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++index b531690..c4ff3d3 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++++          for (i, new) in enumerate(news):
+++++              if new:
+++++                  self.stacked_obs[i] = 0
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++++index d008c38..9b566fb 100755
+++++--- a/new-actions-rl/rlf/rl/envs.py
++++++++ b/new-actions-rl/rlf/rl/envs.py
+++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++++ 
+++++     return _thunk
+++++ 
+++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++++ 
+++++ def make_vec_envs(env_name,
+++++                   seed,
+++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++++                   trans_fn,
+++++                   args,
+++++                   num_frame_stack=None,
+++++-                  set_eval=False,
+++++-                  env_names_input=None):
++++++                  set_eval=False):
+++++ 
+++++     if args.multitask and not set_eval:
+++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++++                   set_eval=False,
+++++                   env_names_input=None):
+++++ 
++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     envs = [
+++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++++-        for env_name in env_names
++++++        for env_name in candidate_env_names
+++++     ]
+++++ 
+++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++++index 0d25c28..e45648c 100755
+++++--- a/new-actions-rl/rlf/rl/rl.py
++++++++ b/new-actions-rl/rlf/rl/rl.py
+++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++           end_update, lr_updates, args, test_args, checkpointer):
+++++ 
++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     if args.resume and start_update > 0:
+++++         start_update += 1
+++++ 
+++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++         log.start_interval_log()
+++++ 
+++++         if args.multitask:
+++++-            idx = np.random.randint(10000) % len(env_names)
++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++++             envs = envs_bulk[idx]
+++++-            args.env_name = env_names[idx]
+++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++++            args.env_name = actual_env_names[idx]
++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++++         else:
+++++             envs = envs_bulk
+++++ 
+++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++                 train_eval_envs = []
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++++                                train_eval_envs = None)
+++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++             else:
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++++                                train_eval_envs[i])
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++++index 953d419..edec780 100644
++++--- a/new-actions-rl/rlf/main.py
+++++++ b/new-actions-rl/rlf/main.py
++++@@ -39,7 +39,7 @@ def get_num_updates(args):
++++     return num_updates, lr_updates
++++ 
++++ 
++++-def get_fine_tune_run(load_name, env_name):
+++++def get_fine_tune_run(load_name, env_name, args):
++++     from rlf.exp_mgr.eval import get_max_run
++++     import wandb
++++     import subprocess
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++index a55af28..5c86c73 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++@@ -1,11 +1,11 @@
++++ Date and Time:
++++-10/03/2024
++++-16:36:27
+++++16/04/2024
+++++11:03:41
++++ 
++++ action_base_hidden_size: 128
++++ action_base_output_size: 64
++++ action_proj_dim: 1
++++-action_random_sample: True
+++++action_random_sample: False
++++ action_seg_loc: ./data/action_segs
++++ action_set_size: 50
++++ algo: ppo
++++@@ -14,6 +14,7 @@ analysis_angle: None
++++ analysis_emb: None
++++ anti_alias_blur: 0.0
++++ backup: None
+++++best_run: 5799
++++ both_train_test: False
++++ bound_effect: False
++++ cat_kl_loss: None
++++@@ -38,7 +39,7 @@ create_play_len: 7
++++ create_play_run_steps: 3
++++ create_sec_goal_reward: 2.0
++++ create_target_reward: 1.0
++++-cuda: False
+++++cuda: True
++++ cuda_deterministic: False
++++ debug_render: False
++++ decay_clipping: False
++++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++++ encoder_dim: 64
++++ entropy_coef: 0.005
++++ env_name: CreateLevelPush-v0
+++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++++ eps: 1e-05
++++ eval_interval: 50
++++-eval_num_processes: None
+++++eval_num_processes: 1
++++ eval_only: False
++++ eval_split: False
++++ eval_split_ratio: 0.5
++++@@ -109,7 +111,7 @@ kl_pen: None
++++ large_steps: 40
++++ latent_dim: 1
++++ load_all_data: False
++++-load_best_name: None
+++++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
++++ load_dataset: True
++++ load_emb_logvar: True
++++ load_emb_model_file: None
++++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++++ max_grid_steps: 50
++++ max_std_width: 3.0
++++ mega_res_interval: 4
+++++multitask: True
++++ n_clusters: 10
++++ n_distributions: 1
++++ n_hidden_option: 3
++++@@ -138,7 +141,7 @@ no_diag: True
++++ no_frame_stack: False
++++ no_initial_state: False
++++ no_overlap_env: False
++++-no_test_eval: False
+++++no_test_eval: True
++++ no_var: False
++++ normalize_embs: False
++++ not_upto: True
++++@@ -146,7 +149,7 @@ num_distributions: 400
++++ num_env_steps: 60000000
++++ num_eval: 20
++++ num_mini_batch: 4
++++-num_processes: 1
+++++num_processes: 4
++++ num_render: None
++++ num_steps: 384
++++ num_z: 1
++++@@ -193,7 +196,7 @@ render_result_figures: False
++++ render_text: False
++++ reparam: True
++++ result_dir: ./data/results
++++-resume: False
+++++resume: True
++++ resume_emb_training: False
++++ reward_entropy_coef: 0.0
++++ rl_use_radam: False
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..e3712f3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..fde463e 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,433 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++++index 93c497a..479a608 100644
+++++--- a/new-actions-rl/arguments.py
++++++++ b/new-actions-rl/arguments.py
+++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++++ 
+++++     #### Multitask specific
+++++     parser.add_argument('--multitask', action='store_true', default=False)
++++++    parser.add_argument('--env-names', nargs='+', default=[])
+++++ 
+++++     #### Resume specific
+++++     parser.add_argument('--best-run', type=int, default=None)
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++index 00a83d9..37f6dc9 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++@@ -1 +1 @@
+++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++++\ No newline at end of file
++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++++\ No newline at end of file
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++index b531690..c4ff3d3 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++++          for (i, new) in enumerate(news):
+++++              if new:
+++++                  self.stacked_obs[i] = 0
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++++index d008c38..9b566fb 100755
+++++--- a/new-actions-rl/rlf/rl/envs.py
++++++++ b/new-actions-rl/rlf/rl/envs.py
+++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++++ 
+++++     return _thunk
+++++ 
+++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++++ 
+++++ def make_vec_envs(env_name,
+++++                   seed,
+++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++++                   trans_fn,
+++++                   args,
+++++                   num_frame_stack=None,
+++++-                  set_eval=False,
+++++-                  env_names_input=None):
++++++                  set_eval=False):
+++++ 
+++++     if args.multitask and not set_eval:
+++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++++                   set_eval=False,
+++++                   env_names_input=None):
+++++ 
++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     envs = [
+++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++++-        for env_name in env_names
++++++        for env_name in candidate_env_names
+++++     ]
+++++ 
+++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++++index 0d25c28..e45648c 100755
+++++--- a/new-actions-rl/rlf/rl/rl.py
++++++++ b/new-actions-rl/rlf/rl/rl.py
+++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++           end_update, lr_updates, args, test_args, checkpointer):
+++++ 
++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     if args.resume and start_update > 0:
+++++         start_update += 1
+++++ 
+++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++         log.start_interval_log()
+++++ 
+++++         if args.multitask:
+++++-            idx = np.random.randint(10000) % len(env_names)
++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++++             envs = envs_bulk[idx]
+++++-            args.env_name = env_names[idx]
+++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++++            args.env_name = actual_env_names[idx]
++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++++         else:
+++++             envs = envs_bulk
+++++ 
+++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++                 train_eval_envs = []
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++++                                train_eval_envs = None)
+++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++             else:
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++++                                train_eval_envs[i])
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++++index 93c497a..479a608 100644
+++++--- a/new-actions-rl/arguments.py
++++++++ b/new-actions-rl/arguments.py
+++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++++ 
+++++     #### Multitask specific
+++++     parser.add_argument('--multitask', action='store_true', default=False)
++++++    parser.add_argument('--env-names', nargs='+', default=[])
+++++ 
+++++     #### Resume specific
+++++     parser.add_argument('--best-run', type=int, default=None)
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++index a55af28..9e018c4 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++@@ -1,11 +1,11 @@
+++++ Date and Time:
+++++-10/03/2024
+++++-16:36:27
++++++15/04/2024
++++++22:26:28
+++++ 
+++++ action_base_hidden_size: 128
+++++ action_base_output_size: 64
+++++ action_proj_dim: 1
+++++-action_random_sample: True
++++++action_random_sample: False
+++++ action_seg_loc: ./data/action_segs
+++++ action_set_size: 50
+++++ algo: ppo
+++++@@ -14,6 +14,7 @@ analysis_angle: None
+++++ analysis_emb: None
+++++ anti_alias_blur: 0.0
+++++ backup: None
++++++best_run: None
+++++ both_train_test: False
+++++ bound_effect: False
+++++ cat_kl_loss: None
+++++@@ -38,7 +39,7 @@ create_play_len: 7
+++++ create_play_run_steps: 3
+++++ create_sec_goal_reward: 2.0
+++++ create_target_reward: 1.0
+++++-cuda: False
++++++cuda: True
+++++ cuda_deterministic: False
+++++ debug_render: False
+++++ decay_clipping: False
+++++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++++ encoder_dim: 64
+++++ entropy_coef: 0.005
+++++ env_name: CreateLevelPush-v0
++++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++++ eps: 1e-05
+++++ eval_interval: 50
+++++-eval_num_processes: None
++++++eval_num_processes: 1
+++++ eval_only: False
+++++ eval_split: False
+++++ eval_split_ratio: 0.5
+++++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++++ max_grid_steps: 50
+++++ max_std_width: 3.0
+++++ mega_res_interval: 4
++++++multitask: True
+++++ n_clusters: 10
+++++ n_distributions: 1
+++++ n_hidden_option: 3
+++++@@ -138,7 +141,7 @@ no_diag: True
+++++ no_frame_stack: False
+++++ no_initial_state: False
+++++ no_overlap_env: False
+++++-no_test_eval: False
++++++no_test_eval: True
+++++ no_var: False
+++++ normalize_embs: False
+++++ not_upto: True
+++++@@ -146,7 +149,7 @@ num_distributions: 400
+++++ num_env_steps: 60000000
+++++ num_eval: 20
+++++ num_mini_batch: 4
+++++-num_processes: 1
++++++num_processes: 4
+++++ num_render: None
+++++ num_steps: 384
+++++ num_z: 1
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++index 00a83d9..cda9700 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++@@ -1 +1 @@
+++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++++\ No newline at end of file
++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++++\ No newline at end of file
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++index b531690..ebf34e4 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
+++++          for (i, new) in enumerate(news):
+++++              if new:
+++++                  self.stacked_obs[i] = 0
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++++index 93c497a..479a608 100644
++++++--- a/new-actions-rl/arguments.py
+++++++++ b/new-actions-rl/arguments.py
++++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++++ 
++++++     #### Multitask specific
++++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++++    parser.add_argument('--env-names', nargs='+', default=[])
++++++ 
++++++     #### Resume specific
++++++     parser.add_argument('--best-run', type=int, default=None)
++++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++index 00a83d9..37f6dc9 100644
++++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++@@ -1 +1 @@
++++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++++\ No newline at end of file
+++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++++\ No newline at end of file
++++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++index b531690..c4ff3d3 100644
++++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++++          for (i, new) in enumerate(news):
++++++              if new:
++++++                  self.stacked_obs[i] = 0
+++++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++++index d008c38..9b566fb 100755
++++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++++ b/new-actions-rl/rlf/rl/envs.py
++++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++++ 
++++++     return _thunk
++++++ 
++++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++++ 
++++++ def make_vec_envs(env_name,
++++++                   seed,
++++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++++                   trans_fn,
++++++                   args,
++++++                   num_frame_stack=None,
++++++-                  set_eval=False,
++++++-                  env_names_input=None):
+++++++                  set_eval=False):
++++++ 
++++++     if args.multitask and not set_eval:
++++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++++                   set_eval=False,
++++++                   env_names_input=None):
++++++ 
+++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++++     envs = [
++++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++++-        for env_name in env_names
+++++++        for env_name in candidate_env_names
++++++     ]
++++++ 
++++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++++index 0d25c28..e45648c 100755
++++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++++ b/new-actions-rl/rlf/rl/rl.py
++++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++++           end_update, lr_updates, args, test_args, checkpointer):
++++++ 
+++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++++     if args.resume and start_update > 0:
++++++         start_update += 1
++++++ 
++++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++++         log.start_interval_log()
++++++ 
++++++         if args.multitask:
++++++-            idx = np.random.randint(10000) % len(env_names)
+++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++++             envs = envs_bulk[idx]
++++++-            args.env_name = env_names[idx]
++++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++++            args.env_name = actual_env_names[idx]
+++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++++         else:
++++++             envs = envs_bulk
++++++ 
++++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++++                 train_eval_envs = []
++++++                 for i in range(len(envs_bulk)):
++++++                     eval_envs = envs_bulk[i]
++++++-                    args.env_name = env_names[i]
++++++-                    print(f"evaluating for env {env_names[i]}")
+++++++                    args.env_name = actual_env_names[i]
+++++++                    print(f"evaluating for env {actual_env_names[i]}")
++++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++++                                train_eval_envs = None)
++++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++++             else:
++++++                 for i in range(len(envs_bulk)):
++++++                     eval_envs = envs_bulk[i]
++++++-                    args.env_name = env_names[i]
++++++-                    print(f"evaluating for env {env_names[i]}")
+++++++                    args.env_name = actual_env_names[i]
+++++++                    print(f"evaluating for env {actual_env_names[i]}")
++++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++++                                train_eval_envs[i])
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++++index 953d419..edec780 100644
+++++--- a/new-actions-rl/rlf/main.py
++++++++ b/new-actions-rl/rlf/main.py
+++++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++++     return num_updates, lr_updates
+++++ 
+++++ 
+++++-def get_fine_tune_run(load_name, env_name):
++++++def get_fine_tune_run(load_name, env_name, args):
+++++     from rlf.exp_mgr.eval import get_max_run
+++++     import wandb
+++++     import subprocess
+++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++++index d008c38..9b566fb 100755
+++++--- a/new-actions-rl/rlf/rl/envs.py
++++++++ b/new-actions-rl/rlf/rl/envs.py
+++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++++ 
+++++     return _thunk
+++++ 
+++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++++ 
+++++ def make_vec_envs(env_name,
+++++                   seed,
+++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++++                   trans_fn,
+++++                   args,
+++++                   num_frame_stack=None,
+++++-                  set_eval=False,
+++++-                  env_names_input=None):
++++++                  set_eval=False):
+++++ 
+++++     if args.multitask and not set_eval:
+++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++++                   set_eval=False,
+++++                   env_names_input=None):
+++++ 
++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     envs = [
+++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++++-        for env_name in env_names
++++++        for env_name in candidate_env_names
+++++     ]
+++++ 
+++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++++index 0d25c28..e45648c 100755
+++++--- a/new-actions-rl/rlf/rl/rl.py
++++++++ b/new-actions-rl/rlf/rl/rl.py
+++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++           end_update, lr_updates, args, test_args, checkpointer):
+++++ 
++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     if args.resume and start_update > 0:
+++++         start_update += 1
+++++ 
+++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++         log.start_interval_log()
+++++ 
+++++         if args.multitask:
+++++-            idx = np.random.randint(10000) % len(env_names)
++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++++             envs = envs_bulk[idx]
+++++-            args.env_name = env_names[idx]
+++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++++            args.env_name = actual_env_names[idx]
++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++++         else:
+++++             envs = envs_bulk
+++++ 
+++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++                 train_eval_envs = []
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++++                                train_eval_envs = None)
+++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++             else:
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++++                                train_eval_envs[i])
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++++index 953d419..edec780 100644
++++--- a/new-actions-rl/rlf/main.py
+++++++ b/new-actions-rl/rlf/main.py
++++@@ -39,7 +39,7 @@ def get_num_updates(args):
++++     return num_updates, lr_updates
++++ 
++++ 
++++-def get_fine_tune_run(load_name, env_name):
+++++def get_fine_tune_run(load_name, env_name, args):
++++     from rlf.exp_mgr.eval import get_max_run
++++     import wandb
++++     import subprocess
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++index 953d419..edec780 100644
+++--- a/new-actions-rl/rlf/main.py
++++++ b/new-actions-rl/rlf/main.py
+++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++     return num_updates, lr_updates
+++ 
+++ 
+++-def get_fine_tune_run(load_name, env_name):
++++def get_fine_tune_run(load_name, env_name, args):
+++     from rlf.exp_mgr.eval import get_max_run
+++     import wandb
+++     import subprocess
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++index 953d419..edec780 100644
++--- a/new-actions-rl/rlf/main.py
+++++ b/new-actions-rl/rlf/main.py
++@@ -39,7 +39,7 @@ def get_num_updates(args):
++     return num_updates, lr_updates
++ 
++ 
++-def get_fine_tune_run(load_name, env_name):
+++def get_fine_tune_run(load_name, env_name, args):
++     from rlf.exp_mgr.eval import get_max_run
++     import wandb
++     import subprocess
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..471a8c9 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++17/04/2024
+++01:03:09
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: 16449
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -109,7 +111,7 @@ kl_pen: None
++ large_steps: 40
++ latent_dim: 1
++ load_all_data: False
++-load_best_name: None
+++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
++ load_dataset: True
++ load_emb_logvar: True
++ load_emb_model_file: None
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++@@ -193,7 +196,7 @@ render_result_figures: False
++ render_text: False
++ reparam: True
++ result_dir: ./data/results
++-resume: False
+++resume: True
++ resume_emb_training: False
++ reward_entropy_coef: 0.0
++ rl_use_radam: False
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..5cdd351 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 16449 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 22299 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++\ No newline at end of file
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++index b531690..13b575f 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++@@ -10764,3 +10764,5081 @@ index b41b6b9..e59734f 100755
++          for (i, new) in enumerate(news):
++              if new:
++                  self.stacked_obs[i] = 0
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..37f6dc9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..c4ff3d3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..9e018c4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++15/04/2024
++++22:26:28
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: None
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..cda9700 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..ebf34e4 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..37f6dc9 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..c4ff3d3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++index 953d419..edec780 100644
+++--- a/new-actions-rl/rlf/main.py
++++++ b/new-actions-rl/rlf/main.py
+++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++     return num_updates, lr_updates
+++ 
+++ 
+++-def get_fine_tune_run(load_name, env_name):
++++def get_fine_tune_run(load_name, env_name, args):
+++     from rlf.exp_mgr.eval import get_max_run
+++     import wandb
+++     import subprocess
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..5c86c73 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++16/04/2024
++++11:03:41
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: 5799
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -109,7 +111,7 @@ kl_pen: None
+++ large_steps: 40
+++ latent_dim: 1
+++ load_all_data: False
+++-load_best_name: None
++++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
+++ load_dataset: True
+++ load_emb_logvar: True
+++ load_emb_model_file: None
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++@@ -193,7 +196,7 @@ render_result_figures: False
+++ render_text: False
+++ reparam: True
+++ result_dir: ./data/results
+++-resume: False
++++resume: True
+++ resume_emb_training: False
+++ reward_entropy_coef: 0.0
+++ rl_use_radam: False
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..e3712f3 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..fde463e 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,433 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..37f6dc9 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..c4ff3d3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++index a55af28..9e018c4 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++@@ -1,11 +1,11 @@
++++ Date and Time:
++++-10/03/2024
++++-16:36:27
+++++15/04/2024
+++++22:26:28
++++ 
++++ action_base_hidden_size: 128
++++ action_base_output_size: 64
++++ action_proj_dim: 1
++++-action_random_sample: True
+++++action_random_sample: False
++++ action_seg_loc: ./data/action_segs
++++ action_set_size: 50
++++ algo: ppo
++++@@ -14,6 +14,7 @@ analysis_angle: None
++++ analysis_emb: None
++++ anti_alias_blur: 0.0
++++ backup: None
+++++best_run: None
++++ both_train_test: False
++++ bound_effect: False
++++ cat_kl_loss: None
++++@@ -38,7 +39,7 @@ create_play_len: 7
++++ create_play_run_steps: 3
++++ create_sec_goal_reward: 2.0
++++ create_target_reward: 1.0
++++-cuda: False
+++++cuda: True
++++ cuda_deterministic: False
++++ debug_render: False
++++ decay_clipping: False
++++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++++ encoder_dim: 64
++++ entropy_coef: 0.005
++++ env_name: CreateLevelPush-v0
+++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++++ eps: 1e-05
++++ eval_interval: 50
++++-eval_num_processes: None
+++++eval_num_processes: 1
++++ eval_only: False
++++ eval_split: False
++++ eval_split_ratio: 0.5
++++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++++ max_grid_steps: 50
++++ max_std_width: 3.0
++++ mega_res_interval: 4
+++++multitask: True
++++ n_clusters: 10
++++ n_distributions: 1
++++ n_hidden_option: 3
++++@@ -138,7 +141,7 @@ no_diag: True
++++ no_frame_stack: False
++++ no_initial_state: False
++++ no_overlap_env: False
++++-no_test_eval: False
+++++no_test_eval: True
++++ no_var: False
++++ normalize_embs: False
++++ not_upto: True
++++@@ -146,7 +149,7 @@ num_distributions: 400
++++ num_env_steps: 60000000
++++ num_eval: 20
++++ num_mini_batch: 4
++++-num_processes: 1
+++++num_processes: 4
++++ num_render: None
++++ num_steps: 384
++++ num_z: 1
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..cda9700 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..ebf34e4 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++++index 93c497a..479a608 100644
+++++--- a/new-actions-rl/arguments.py
++++++++ b/new-actions-rl/arguments.py
+++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++++ 
+++++     #### Multitask specific
+++++     parser.add_argument('--multitask', action='store_true', default=False)
++++++    parser.add_argument('--env-names', nargs='+', default=[])
+++++ 
+++++     #### Resume specific
+++++     parser.add_argument('--best-run', type=int, default=None)
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++index 00a83d9..37f6dc9 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++@@ -1 +1 @@
+++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++++\ No newline at end of file
++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++++\ No newline at end of file
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++index b531690..c4ff3d3 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++++          for (i, new) in enumerate(news):
+++++              if new:
+++++                  self.stacked_obs[i] = 0
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++++index d008c38..9b566fb 100755
+++++--- a/new-actions-rl/rlf/rl/envs.py
++++++++ b/new-actions-rl/rlf/rl/envs.py
+++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++++ 
+++++     return _thunk
+++++ 
+++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++++ 
+++++ def make_vec_envs(env_name,
+++++                   seed,
+++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++++                   trans_fn,
+++++                   args,
+++++                   num_frame_stack=None,
+++++-                  set_eval=False,
+++++-                  env_names_input=None):
++++++                  set_eval=False):
+++++ 
+++++     if args.multitask and not set_eval:
+++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++++                   set_eval=False,
+++++                   env_names_input=None):
+++++ 
++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     envs = [
+++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++++-        for env_name in env_names
++++++        for env_name in candidate_env_names
+++++     ]
+++++ 
+++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++++index 0d25c28..e45648c 100755
+++++--- a/new-actions-rl/rlf/rl/rl.py
++++++++ b/new-actions-rl/rlf/rl/rl.py
+++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++           end_update, lr_updates, args, test_args, checkpointer):
+++++ 
++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     if args.resume and start_update > 0:
+++++         start_update += 1
+++++ 
+++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++         log.start_interval_log()
+++++ 
+++++         if args.multitask:
+++++-            idx = np.random.randint(10000) % len(env_names)
++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++++             envs = envs_bulk[idx]
+++++-            args.env_name = env_names[idx]
+++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++++            args.env_name = actual_env_names[idx]
++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++++         else:
+++++             envs = envs_bulk
+++++ 
+++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++                 train_eval_envs = []
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++++                                train_eval_envs = None)
+++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++             else:
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++++                                train_eval_envs[i])
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++++index 953d419..edec780 100644
++++--- a/new-actions-rl/rlf/main.py
+++++++ b/new-actions-rl/rlf/main.py
++++@@ -39,7 +39,7 @@ def get_num_updates(args):
++++     return num_updates, lr_updates
++++ 
++++ 
++++-def get_fine_tune_run(load_name, env_name):
+++++def get_fine_tune_run(load_name, env_name, args):
++++     from rlf.exp_mgr.eval import get_max_run
++++     import wandb
++++     import subprocess
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++index 953d419..edec780 100644
+++--- a/new-actions-rl/rlf/main.py
++++++ b/new-actions-rl/rlf/main.py
+++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++     return num_updates, lr_updates
+++ 
+++ 
+++-def get_fine_tune_run(load_name, env_name):
++++def get_fine_tune_run(load_name, env_name, args):
+++     from rlf.exp_mgr.eval import get_max_run
+++     import wandb
+++     import subprocess
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..c06c75e 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++16/04/2024
++++14:42:37
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: 9349
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -109,7 +111,7 @@ kl_pen: None
+++ large_steps: 40
+++ latent_dim: 1
+++ load_all_data: False
+++-load_best_name: None
++++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
+++ load_dataset: True
+++ load_emb_logvar: True
+++ load_emb_model_file: None
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++@@ -193,7 +196,7 @@ render_result_figures: False
+++ render_text: False
+++ reparam: True
+++ result_dir: ./data/results
+++-resume: False
++++resume: True
+++ resume_emb_training: False
+++ reward_entropy_coef: 0.0
+++ rl_use_radam: False
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..ec24bd5 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..6d6f339 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,1081 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..37f6dc9 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..c4ff3d3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++index a55af28..9e018c4 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++@@ -1,11 +1,11 @@
++++ Date and Time:
++++-10/03/2024
++++-16:36:27
+++++15/04/2024
+++++22:26:28
++++ 
++++ action_base_hidden_size: 128
++++ action_base_output_size: 64
++++ action_proj_dim: 1
++++-action_random_sample: True
+++++action_random_sample: False
++++ action_seg_loc: ./data/action_segs
++++ action_set_size: 50
++++ algo: ppo
++++@@ -14,6 +14,7 @@ analysis_angle: None
++++ analysis_emb: None
++++ anti_alias_blur: 0.0
++++ backup: None
+++++best_run: None
++++ both_train_test: False
++++ bound_effect: False
++++ cat_kl_loss: None
++++@@ -38,7 +39,7 @@ create_play_len: 7
++++ create_play_run_steps: 3
++++ create_sec_goal_reward: 2.0
++++ create_target_reward: 1.0
++++-cuda: False
+++++cuda: True
++++ cuda_deterministic: False
++++ debug_render: False
++++ decay_clipping: False
++++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++++ encoder_dim: 64
++++ entropy_coef: 0.005
++++ env_name: CreateLevelPush-v0
+++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++++ eps: 1e-05
++++ eval_interval: 50
++++-eval_num_processes: None
+++++eval_num_processes: 1
++++ eval_only: False
++++ eval_split: False
++++ eval_split_ratio: 0.5
++++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++++ max_grid_steps: 50
++++ max_std_width: 3.0
++++ mega_res_interval: 4
+++++multitask: True
++++ n_clusters: 10
++++ n_distributions: 1
++++ n_hidden_option: 3
++++@@ -138,7 +141,7 @@ no_diag: True
++++ no_frame_stack: False
++++ no_initial_state: False
++++ no_overlap_env: False
++++-no_test_eval: False
+++++no_test_eval: True
++++ no_var: False
++++ normalize_embs: False
++++ not_upto: True
++++@@ -146,7 +149,7 @@ num_distributions: 400
++++ num_env_steps: 60000000
++++ num_eval: 20
++++ num_mini_batch: 4
++++-num_processes: 1
+++++num_processes: 4
++++ num_render: None
++++ num_steps: 384
++++ num_z: 1
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..cda9700 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..ebf34e4 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++++index 93c497a..479a608 100644
+++++--- a/new-actions-rl/arguments.py
++++++++ b/new-actions-rl/arguments.py
+++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++++ 
+++++     #### Multitask specific
+++++     parser.add_argument('--multitask', action='store_true', default=False)
++++++    parser.add_argument('--env-names', nargs='+', default=[])
+++++ 
+++++     #### Resume specific
+++++     parser.add_argument('--best-run', type=int, default=None)
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++index 00a83d9..37f6dc9 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++@@ -1 +1 @@
+++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++++\ No newline at end of file
++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++++\ No newline at end of file
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++index b531690..c4ff3d3 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++++          for (i, new) in enumerate(news):
+++++              if new:
+++++                  self.stacked_obs[i] = 0
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++++index d008c38..9b566fb 100755
+++++--- a/new-actions-rl/rlf/rl/envs.py
++++++++ b/new-actions-rl/rlf/rl/envs.py
+++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++++ 
+++++     return _thunk
+++++ 
+++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++++ 
+++++ def make_vec_envs(env_name,
+++++                   seed,
+++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++++                   trans_fn,
+++++                   args,
+++++                   num_frame_stack=None,
+++++-                  set_eval=False,
+++++-                  env_names_input=None):
++++++                  set_eval=False):
+++++ 
+++++     if args.multitask and not set_eval:
+++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++++                   set_eval=False,
+++++                   env_names_input=None):
+++++ 
++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     envs = [
+++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++++-        for env_name in env_names
++++++        for env_name in candidate_env_names
+++++     ]
+++++ 
+++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++++index 0d25c28..e45648c 100755
+++++--- a/new-actions-rl/rlf/rl/rl.py
++++++++ b/new-actions-rl/rlf/rl/rl.py
+++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++           end_update, lr_updates, args, test_args, checkpointer):
+++++ 
++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     if args.resume and start_update > 0:
+++++         start_update += 1
+++++ 
+++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++         log.start_interval_log()
+++++ 
+++++         if args.multitask:
+++++-            idx = np.random.randint(10000) % len(env_names)
++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++++             envs = envs_bulk[idx]
+++++-            args.env_name = env_names[idx]
+++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++++            args.env_name = actual_env_names[idx]
++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++++         else:
+++++             envs = envs_bulk
+++++ 
+++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++                 train_eval_envs = []
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++++                                train_eval_envs = None)
+++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++             else:
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++++                                train_eval_envs[i])
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++++index 953d419..edec780 100644
++++--- a/new-actions-rl/rlf/main.py
+++++++ b/new-actions-rl/rlf/main.py
++++@@ -39,7 +39,7 @@ def get_num_updates(args):
++++     return num_updates, lr_updates
++++ 
++++ 
++++-def get_fine_tune_run(load_name, env_name):
+++++def get_fine_tune_run(load_name, env_name, args):
++++     from rlf.exp_mgr.eval import get_max_run
++++     import wandb
++++     import subprocess
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++index a55af28..5c86c73 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++@@ -1,11 +1,11 @@
++++ Date and Time:
++++-10/03/2024
++++-16:36:27
+++++16/04/2024
+++++11:03:41
++++ 
++++ action_base_hidden_size: 128
++++ action_base_output_size: 64
++++ action_proj_dim: 1
++++-action_random_sample: True
+++++action_random_sample: False
++++ action_seg_loc: ./data/action_segs
++++ action_set_size: 50
++++ algo: ppo
++++@@ -14,6 +14,7 @@ analysis_angle: None
++++ analysis_emb: None
++++ anti_alias_blur: 0.0
++++ backup: None
+++++best_run: 5799
++++ both_train_test: False
++++ bound_effect: False
++++ cat_kl_loss: None
++++@@ -38,7 +39,7 @@ create_play_len: 7
++++ create_play_run_steps: 3
++++ create_sec_goal_reward: 2.0
++++ create_target_reward: 1.0
++++-cuda: False
+++++cuda: True
++++ cuda_deterministic: False
++++ debug_render: False
++++ decay_clipping: False
++++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++++ encoder_dim: 64
++++ entropy_coef: 0.005
++++ env_name: CreateLevelPush-v0
+++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++++ eps: 1e-05
++++ eval_interval: 50
++++-eval_num_processes: None
+++++eval_num_processes: 1
++++ eval_only: False
++++ eval_split: False
++++ eval_split_ratio: 0.5
++++@@ -109,7 +111,7 @@ kl_pen: None
++++ large_steps: 40
++++ latent_dim: 1
++++ load_all_data: False
++++-load_best_name: None
+++++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
++++ load_dataset: True
++++ load_emb_logvar: True
++++ load_emb_model_file: None
++++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++++ max_grid_steps: 50
++++ max_std_width: 3.0
++++ mega_res_interval: 4
+++++multitask: True
++++ n_clusters: 10
++++ n_distributions: 1
++++ n_hidden_option: 3
++++@@ -138,7 +141,7 @@ no_diag: True
++++ no_frame_stack: False
++++ no_initial_state: False
++++ no_overlap_env: False
++++-no_test_eval: False
+++++no_test_eval: True
++++ no_var: False
++++ normalize_embs: False
++++ not_upto: True
++++@@ -146,7 +149,7 @@ num_distributions: 400
++++ num_env_steps: 60000000
++++ num_eval: 20
++++ num_mini_batch: 4
++++-num_processes: 1
+++++num_processes: 4
++++ num_render: None
++++ num_steps: 384
++++ num_z: 1
++++@@ -193,7 +196,7 @@ render_result_figures: False
++++ render_text: False
++++ reparam: True
++++ result_dir: ./data/results
++++-resume: False
+++++resume: True
++++ resume_emb_training: False
++++ reward_entropy_coef: 0.0
++++ rl_use_radam: False
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..e3712f3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..fde463e 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,433 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++++index 93c497a..479a608 100644
+++++--- a/new-actions-rl/arguments.py
++++++++ b/new-actions-rl/arguments.py
+++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++++ 
+++++     #### Multitask specific
+++++     parser.add_argument('--multitask', action='store_true', default=False)
++++++    parser.add_argument('--env-names', nargs='+', default=[])
+++++ 
+++++     #### Resume specific
+++++     parser.add_argument('--best-run', type=int, default=None)
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++index 00a83d9..37f6dc9 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++@@ -1 +1 @@
+++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++++\ No newline at end of file
++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++++\ No newline at end of file
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++index b531690..c4ff3d3 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++++          for (i, new) in enumerate(news):
+++++              if new:
+++++                  self.stacked_obs[i] = 0
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++++index d008c38..9b566fb 100755
+++++--- a/new-actions-rl/rlf/rl/envs.py
++++++++ b/new-actions-rl/rlf/rl/envs.py
+++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++++ 
+++++     return _thunk
+++++ 
+++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++++ 
+++++ def make_vec_envs(env_name,
+++++                   seed,
+++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++++                   trans_fn,
+++++                   args,
+++++                   num_frame_stack=None,
+++++-                  set_eval=False,
+++++-                  env_names_input=None):
++++++                  set_eval=False):
+++++ 
+++++     if args.multitask and not set_eval:
+++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++++                   set_eval=False,
+++++                   env_names_input=None):
+++++ 
++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     envs = [
+++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++++-        for env_name in env_names
++++++        for env_name in candidate_env_names
+++++     ]
+++++ 
+++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++++index 0d25c28..e45648c 100755
+++++--- a/new-actions-rl/rlf/rl/rl.py
++++++++ b/new-actions-rl/rlf/rl/rl.py
+++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++           end_update, lr_updates, args, test_args, checkpointer):
+++++ 
++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     if args.resume and start_update > 0:
+++++         start_update += 1
+++++ 
+++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++         log.start_interval_log()
+++++ 
+++++         if args.multitask:
+++++-            idx = np.random.randint(10000) % len(env_names)
++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++++             envs = envs_bulk[idx]
+++++-            args.env_name = env_names[idx]
+++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++++            args.env_name = actual_env_names[idx]
++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++++         else:
+++++             envs = envs_bulk
+++++ 
+++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++                 train_eval_envs = []
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++++                                train_eval_envs = None)
+++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++             else:
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++++                                train_eval_envs[i])
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++++index 93c497a..479a608 100644
+++++--- a/new-actions-rl/arguments.py
++++++++ b/new-actions-rl/arguments.py
+++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++++ 
+++++     #### Multitask specific
+++++     parser.add_argument('--multitask', action='store_true', default=False)
++++++    parser.add_argument('--env-names', nargs='+', default=[])
+++++ 
+++++     #### Resume specific
+++++     parser.add_argument('--best-run', type=int, default=None)
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++index a55af28..9e018c4 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++@@ -1,11 +1,11 @@
+++++ Date and Time:
+++++-10/03/2024
+++++-16:36:27
++++++15/04/2024
++++++22:26:28
+++++ 
+++++ action_base_hidden_size: 128
+++++ action_base_output_size: 64
+++++ action_proj_dim: 1
+++++-action_random_sample: True
++++++action_random_sample: False
+++++ action_seg_loc: ./data/action_segs
+++++ action_set_size: 50
+++++ algo: ppo
+++++@@ -14,6 +14,7 @@ analysis_angle: None
+++++ analysis_emb: None
+++++ anti_alias_blur: 0.0
+++++ backup: None
++++++best_run: None
+++++ both_train_test: False
+++++ bound_effect: False
+++++ cat_kl_loss: None
+++++@@ -38,7 +39,7 @@ create_play_len: 7
+++++ create_play_run_steps: 3
+++++ create_sec_goal_reward: 2.0
+++++ create_target_reward: 1.0
+++++-cuda: False
++++++cuda: True
+++++ cuda_deterministic: False
+++++ debug_render: False
+++++ decay_clipping: False
+++++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++++ encoder_dim: 64
+++++ entropy_coef: 0.005
+++++ env_name: CreateLevelPush-v0
++++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++++ eps: 1e-05
+++++ eval_interval: 50
+++++-eval_num_processes: None
++++++eval_num_processes: 1
+++++ eval_only: False
+++++ eval_split: False
+++++ eval_split_ratio: 0.5
+++++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++++ max_grid_steps: 50
+++++ max_std_width: 3.0
+++++ mega_res_interval: 4
++++++multitask: True
+++++ n_clusters: 10
+++++ n_distributions: 1
+++++ n_hidden_option: 3
+++++@@ -138,7 +141,7 @@ no_diag: True
+++++ no_frame_stack: False
+++++ no_initial_state: False
+++++ no_overlap_env: False
+++++-no_test_eval: False
++++++no_test_eval: True
+++++ no_var: False
+++++ normalize_embs: False
+++++ not_upto: True
+++++@@ -146,7 +149,7 @@ num_distributions: 400
+++++ num_env_steps: 60000000
+++++ num_eval: 20
+++++ num_mini_batch: 4
+++++-num_processes: 1
++++++num_processes: 4
+++++ num_render: None
+++++ num_steps: 384
+++++ num_z: 1
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++index 00a83d9..cda9700 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++@@ -1 +1 @@
+++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++++\ No newline at end of file
++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++++\ No newline at end of file
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++index b531690..ebf34e4 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
+++++          for (i, new) in enumerate(news):
+++++              if new:
+++++                  self.stacked_obs[i] = 0
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++++index 93c497a..479a608 100644
++++++--- a/new-actions-rl/arguments.py
+++++++++ b/new-actions-rl/arguments.py
++++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++++ 
++++++     #### Multitask specific
++++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++++    parser.add_argument('--env-names', nargs='+', default=[])
++++++ 
++++++     #### Resume specific
++++++     parser.add_argument('--best-run', type=int, default=None)
++++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++index 00a83d9..37f6dc9 100644
++++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++@@ -1 +1 @@
++++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++++\ No newline at end of file
+++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++++\ No newline at end of file
++++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++index b531690..c4ff3d3 100644
++++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++++          for (i, new) in enumerate(news):
++++++              if new:
++++++                  self.stacked_obs[i] = 0
+++++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++++index d008c38..9b566fb 100755
++++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++++ b/new-actions-rl/rlf/rl/envs.py
++++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++++ 
++++++     return _thunk
++++++ 
++++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++++ 
++++++ def make_vec_envs(env_name,
++++++                   seed,
++++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++++                   trans_fn,
++++++                   args,
++++++                   num_frame_stack=None,
++++++-                  set_eval=False,
++++++-                  env_names_input=None):
+++++++                  set_eval=False):
++++++ 
++++++     if args.multitask and not set_eval:
++++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++++                   set_eval=False,
++++++                   env_names_input=None):
++++++ 
+++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++++     envs = [
++++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++++-        for env_name in env_names
+++++++        for env_name in candidate_env_names
++++++     ]
++++++ 
++++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++++index 0d25c28..e45648c 100755
++++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++++ b/new-actions-rl/rlf/rl/rl.py
++++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++++           end_update, lr_updates, args, test_args, checkpointer):
++++++ 
+++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++++     if args.resume and start_update > 0:
++++++         start_update += 1
++++++ 
++++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++++         log.start_interval_log()
++++++ 
++++++         if args.multitask:
++++++-            idx = np.random.randint(10000) % len(env_names)
+++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++++             envs = envs_bulk[idx]
++++++-            args.env_name = env_names[idx]
++++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++++            args.env_name = actual_env_names[idx]
+++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++++         else:
++++++             envs = envs_bulk
++++++ 
++++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++++                 train_eval_envs = []
++++++                 for i in range(len(envs_bulk)):
++++++                     eval_envs = envs_bulk[i]
++++++-                    args.env_name = env_names[i]
++++++-                    print(f"evaluating for env {env_names[i]}")
+++++++                    args.env_name = actual_env_names[i]
+++++++                    print(f"evaluating for env {actual_env_names[i]}")
++++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++++                                train_eval_envs = None)
++++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++++             else:
++++++                 for i in range(len(envs_bulk)):
++++++                     eval_envs = envs_bulk[i]
++++++-                    args.env_name = env_names[i]
++++++-                    print(f"evaluating for env {env_names[i]}")
+++++++                    args.env_name = actual_env_names[i]
+++++++                    print(f"evaluating for env {actual_env_names[i]}")
++++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++++                                train_eval_envs[i])
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++++index 953d419..edec780 100644
+++++--- a/new-actions-rl/rlf/main.py
++++++++ b/new-actions-rl/rlf/main.py
+++++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++++     return num_updates, lr_updates
+++++ 
+++++ 
+++++-def get_fine_tune_run(load_name, env_name):
++++++def get_fine_tune_run(load_name, env_name, args):
+++++     from rlf.exp_mgr.eval import get_max_run
+++++     import wandb
+++++     import subprocess
+++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++++index d008c38..9b566fb 100755
+++++--- a/new-actions-rl/rlf/rl/envs.py
++++++++ b/new-actions-rl/rlf/rl/envs.py
+++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++++ 
+++++     return _thunk
+++++ 
+++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++++ 
+++++ def make_vec_envs(env_name,
+++++                   seed,
+++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++++                   trans_fn,
+++++                   args,
+++++                   num_frame_stack=None,
+++++-                  set_eval=False,
+++++-                  env_names_input=None):
++++++                  set_eval=False):
+++++ 
+++++     if args.multitask and not set_eval:
+++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++++                   set_eval=False,
+++++                   env_names_input=None):
+++++ 
++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     envs = [
+++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++++-        for env_name in env_names
++++++        for env_name in candidate_env_names
+++++     ]
+++++ 
+++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++++index 0d25c28..e45648c 100755
+++++--- a/new-actions-rl/rlf/rl/rl.py
++++++++ b/new-actions-rl/rlf/rl/rl.py
+++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++           end_update, lr_updates, args, test_args, checkpointer):
+++++ 
++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     if args.resume and start_update > 0:
+++++         start_update += 1
+++++ 
+++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++         log.start_interval_log()
+++++ 
+++++         if args.multitask:
+++++-            idx = np.random.randint(10000) % len(env_names)
++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++++             envs = envs_bulk[idx]
+++++-            args.env_name = env_names[idx]
+++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++++            args.env_name = actual_env_names[idx]
++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++++         else:
+++++             envs = envs_bulk
+++++ 
+++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++                 train_eval_envs = []
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++++                                train_eval_envs = None)
+++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++             else:
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++++                                train_eval_envs[i])
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++++index 953d419..edec780 100644
++++--- a/new-actions-rl/rlf/main.py
+++++++ b/new-actions-rl/rlf/main.py
++++@@ -39,7 +39,7 @@ def get_num_updates(args):
++++     return num_updates, lr_updates
++++ 
++++ 
++++-def get_fine_tune_run(load_name, env_name):
+++++def get_fine_tune_run(load_name, env_name, args):
++++     from rlf.exp_mgr.eval import get_max_run
++++     import wandb
++++     import subprocess
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++index 953d419..edec780 100644
+++--- a/new-actions-rl/rlf/main.py
++++++ b/new-actions-rl/rlf/main.py
+++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++     return num_updates, lr_updates
+++ 
+++ 
+++-def get_fine_tune_run(load_name, env_name):
++++def get_fine_tune_run(load_name, env_name, args):
+++     from rlf.exp_mgr.eval import get_max_run
+++     import wandb
+++     import subprocess
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..85c20f2 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++16/04/2024
++++18:38:56
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: 12899
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -109,7 +111,7 @@ kl_pen: None
+++ large_steps: 40
+++ latent_dim: 1
+++ load_all_data: False
+++-load_best_name: None
++++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
+++ load_dataset: True
+++ load_emb_logvar: True
+++ load_emb_model_file: None
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++@@ -193,7 +196,7 @@ render_result_figures: False
+++ render_text: False
+++ reparam: True
+++ result_dir: ./data/results
+++-resume: False
++++resume: True
+++ resume_emb_training: False
+++ reward_entropy_coef: 0.0
+++ rl_use_radam: False
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..63b1f15 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 16449 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++\ No newline at end of file
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++index b531690..815f948 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++@@ -10764,3 +10764,2377 @@ index b41b6b9..e59734f 100755
+++          for (i, new) in enumerate(news):
+++              if new:
+++                  self.stacked_obs[i] = 0
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..37f6dc9 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..c4ff3d3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++index a55af28..9e018c4 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++@@ -1,11 +1,11 @@
++++ Date and Time:
++++-10/03/2024
++++-16:36:27
+++++15/04/2024
+++++22:26:28
++++ 
++++ action_base_hidden_size: 128
++++ action_base_output_size: 64
++++ action_proj_dim: 1
++++-action_random_sample: True
+++++action_random_sample: False
++++ action_seg_loc: ./data/action_segs
++++ action_set_size: 50
++++ algo: ppo
++++@@ -14,6 +14,7 @@ analysis_angle: None
++++ analysis_emb: None
++++ anti_alias_blur: 0.0
++++ backup: None
+++++best_run: None
++++ both_train_test: False
++++ bound_effect: False
++++ cat_kl_loss: None
++++@@ -38,7 +39,7 @@ create_play_len: 7
++++ create_play_run_steps: 3
++++ create_sec_goal_reward: 2.0
++++ create_target_reward: 1.0
++++-cuda: False
+++++cuda: True
++++ cuda_deterministic: False
++++ debug_render: False
++++ decay_clipping: False
++++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++++ encoder_dim: 64
++++ entropy_coef: 0.005
++++ env_name: CreateLevelPush-v0
+++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++++ eps: 1e-05
++++ eval_interval: 50
++++-eval_num_processes: None
+++++eval_num_processes: 1
++++ eval_only: False
++++ eval_split: False
++++ eval_split_ratio: 0.5
++++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++++ max_grid_steps: 50
++++ max_std_width: 3.0
++++ mega_res_interval: 4
+++++multitask: True
++++ n_clusters: 10
++++ n_distributions: 1
++++ n_hidden_option: 3
++++@@ -138,7 +141,7 @@ no_diag: True
++++ no_frame_stack: False
++++ no_initial_state: False
++++ no_overlap_env: False
++++-no_test_eval: False
+++++no_test_eval: True
++++ no_var: False
++++ normalize_embs: False
++++ not_upto: True
++++@@ -146,7 +149,7 @@ num_distributions: 400
++++ num_env_steps: 60000000
++++ num_eval: 20
++++ num_mini_batch: 4
++++-num_processes: 1
+++++num_processes: 4
++++ num_render: None
++++ num_steps: 384
++++ num_z: 1
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..cda9700 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..ebf34e4 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++++index 93c497a..479a608 100644
+++++--- a/new-actions-rl/arguments.py
++++++++ b/new-actions-rl/arguments.py
+++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++++ 
+++++     #### Multitask specific
+++++     parser.add_argument('--multitask', action='store_true', default=False)
++++++    parser.add_argument('--env-names', nargs='+', default=[])
+++++ 
+++++     #### Resume specific
+++++     parser.add_argument('--best-run', type=int, default=None)
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++index 00a83d9..37f6dc9 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++@@ -1 +1 @@
+++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++++\ No newline at end of file
++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++++\ No newline at end of file
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++index b531690..c4ff3d3 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++++          for (i, new) in enumerate(news):
+++++              if new:
+++++                  self.stacked_obs[i] = 0
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++++index d008c38..9b566fb 100755
+++++--- a/new-actions-rl/rlf/rl/envs.py
++++++++ b/new-actions-rl/rlf/rl/envs.py
+++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++++ 
+++++     return _thunk
+++++ 
+++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++++ 
+++++ def make_vec_envs(env_name,
+++++                   seed,
+++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++++                   trans_fn,
+++++                   args,
+++++                   num_frame_stack=None,
+++++-                  set_eval=False,
+++++-                  env_names_input=None):
++++++                  set_eval=False):
+++++ 
+++++     if args.multitask and not set_eval:
+++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++++                   set_eval=False,
+++++                   env_names_input=None):
+++++ 
++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     envs = [
+++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++++-        for env_name in env_names
++++++        for env_name in candidate_env_names
+++++     ]
+++++ 
+++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++++index 0d25c28..e45648c 100755
+++++--- a/new-actions-rl/rlf/rl/rl.py
++++++++ b/new-actions-rl/rlf/rl/rl.py
+++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++           end_update, lr_updates, args, test_args, checkpointer):
+++++ 
++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     if args.resume and start_update > 0:
+++++         start_update += 1
+++++ 
+++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++         log.start_interval_log()
+++++ 
+++++         if args.multitask:
+++++-            idx = np.random.randint(10000) % len(env_names)
++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++++             envs = envs_bulk[idx]
+++++-            args.env_name = env_names[idx]
+++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++++            args.env_name = actual_env_names[idx]
++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++++         else:
+++++             envs = envs_bulk
+++++ 
+++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++                 train_eval_envs = []
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++++                                train_eval_envs = None)
+++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++             else:
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++++                                train_eval_envs[i])
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++++index 953d419..edec780 100644
++++--- a/new-actions-rl/rlf/main.py
+++++++ b/new-actions-rl/rlf/main.py
++++@@ -39,7 +39,7 @@ def get_num_updates(args):
++++     return num_updates, lr_updates
++++ 
++++ 
++++-def get_fine_tune_run(load_name, env_name):
+++++def get_fine_tune_run(load_name, env_name, args):
++++     from rlf.exp_mgr.eval import get_max_run
++++     import wandb
++++     import subprocess
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++index a55af28..5c86c73 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++@@ -1,11 +1,11 @@
++++ Date and Time:
++++-10/03/2024
++++-16:36:27
+++++16/04/2024
+++++11:03:41
++++ 
++++ action_base_hidden_size: 128
++++ action_base_output_size: 64
++++ action_proj_dim: 1
++++-action_random_sample: True
+++++action_random_sample: False
++++ action_seg_loc: ./data/action_segs
++++ action_set_size: 50
++++ algo: ppo
++++@@ -14,6 +14,7 @@ analysis_angle: None
++++ analysis_emb: None
++++ anti_alias_blur: 0.0
++++ backup: None
+++++best_run: 5799
++++ both_train_test: False
++++ bound_effect: False
++++ cat_kl_loss: None
++++@@ -38,7 +39,7 @@ create_play_len: 7
++++ create_play_run_steps: 3
++++ create_sec_goal_reward: 2.0
++++ create_target_reward: 1.0
++++-cuda: False
+++++cuda: True
++++ cuda_deterministic: False
++++ debug_render: False
++++ decay_clipping: False
++++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++++ encoder_dim: 64
++++ entropy_coef: 0.005
++++ env_name: CreateLevelPush-v0
+++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++++ eps: 1e-05
++++ eval_interval: 50
++++-eval_num_processes: None
+++++eval_num_processes: 1
++++ eval_only: False
++++ eval_split: False
++++ eval_split_ratio: 0.5
++++@@ -109,7 +111,7 @@ kl_pen: None
++++ large_steps: 40
++++ latent_dim: 1
++++ load_all_data: False
++++-load_best_name: None
+++++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
++++ load_dataset: True
++++ load_emb_logvar: True
++++ load_emb_model_file: None
++++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++++ max_grid_steps: 50
++++ max_std_width: 3.0
++++ mega_res_interval: 4
+++++multitask: True
++++ n_clusters: 10
++++ n_distributions: 1
++++ n_hidden_option: 3
++++@@ -138,7 +141,7 @@ no_diag: True
++++ no_frame_stack: False
++++ no_initial_state: False
++++ no_overlap_env: False
++++-no_test_eval: False
+++++no_test_eval: True
++++ no_var: False
++++ normalize_embs: False
++++ not_upto: True
++++@@ -146,7 +149,7 @@ num_distributions: 400
++++ num_env_steps: 60000000
++++ num_eval: 20
++++ num_mini_batch: 4
++++-num_processes: 1
+++++num_processes: 4
++++ num_render: None
++++ num_steps: 384
++++ num_z: 1
++++@@ -193,7 +196,7 @@ render_result_figures: False
++++ render_text: False
++++ reparam: True
++++ result_dir: ./data/results
++++-resume: False
+++++resume: True
++++ resume_emb_training: False
++++ reward_entropy_coef: 0.0
++++ rl_use_radam: False
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..e3712f3 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..fde463e 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,433 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++++index 93c497a..479a608 100644
+++++--- a/new-actions-rl/arguments.py
++++++++ b/new-actions-rl/arguments.py
+++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++++ 
+++++     #### Multitask specific
+++++     parser.add_argument('--multitask', action='store_true', default=False)
++++++    parser.add_argument('--env-names', nargs='+', default=[])
+++++ 
+++++     #### Resume specific
+++++     parser.add_argument('--best-run', type=int, default=None)
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++index 00a83d9..37f6dc9 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++@@ -1 +1 @@
+++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++++\ No newline at end of file
++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++++\ No newline at end of file
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++index b531690..c4ff3d3 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++++          for (i, new) in enumerate(news):
+++++              if new:
+++++                  self.stacked_obs[i] = 0
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++++index d008c38..9b566fb 100755
+++++--- a/new-actions-rl/rlf/rl/envs.py
++++++++ b/new-actions-rl/rlf/rl/envs.py
+++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++++ 
+++++     return _thunk
+++++ 
+++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++++ 
+++++ def make_vec_envs(env_name,
+++++                   seed,
+++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++++                   trans_fn,
+++++                   args,
+++++                   num_frame_stack=None,
+++++-                  set_eval=False,
+++++-                  env_names_input=None):
++++++                  set_eval=False):
+++++ 
+++++     if args.multitask and not set_eval:
+++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++++                   set_eval=False,
+++++                   env_names_input=None):
+++++ 
++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     envs = [
+++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++++-        for env_name in env_names
++++++        for env_name in candidate_env_names
+++++     ]
+++++ 
+++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++++index 0d25c28..e45648c 100755
+++++--- a/new-actions-rl/rlf/rl/rl.py
++++++++ b/new-actions-rl/rlf/rl/rl.py
+++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++           end_update, lr_updates, args, test_args, checkpointer):
+++++ 
++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     if args.resume and start_update > 0:
+++++         start_update += 1
+++++ 
+++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++         log.start_interval_log()
+++++ 
+++++         if args.multitask:
+++++-            idx = np.random.randint(10000) % len(env_names)
++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++++             envs = envs_bulk[idx]
+++++-            args.env_name = env_names[idx]
+++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++++            args.env_name = actual_env_names[idx]
++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++++         else:
+++++             envs = envs_bulk
+++++ 
+++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++                 train_eval_envs = []
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++++                                train_eval_envs = None)
+++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++             else:
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++++                                train_eval_envs[i])
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++++index 93c497a..479a608 100644
+++++--- a/new-actions-rl/arguments.py
++++++++ b/new-actions-rl/arguments.py
+++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++++ 
+++++     #### Multitask specific
+++++     parser.add_argument('--multitask', action='store_true', default=False)
++++++    parser.add_argument('--env-names', nargs='+', default=[])
+++++ 
+++++     #### Resume specific
+++++     parser.add_argument('--best-run', type=int, default=None)
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++index a55af28..9e018c4 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++@@ -1,11 +1,11 @@
+++++ Date and Time:
+++++-10/03/2024
+++++-16:36:27
++++++15/04/2024
++++++22:26:28
+++++ 
+++++ action_base_hidden_size: 128
+++++ action_base_output_size: 64
+++++ action_proj_dim: 1
+++++-action_random_sample: True
++++++action_random_sample: False
+++++ action_seg_loc: ./data/action_segs
+++++ action_set_size: 50
+++++ algo: ppo
+++++@@ -14,6 +14,7 @@ analysis_angle: None
+++++ analysis_emb: None
+++++ anti_alias_blur: 0.0
+++++ backup: None
++++++best_run: None
+++++ both_train_test: False
+++++ bound_effect: False
+++++ cat_kl_loss: None
+++++@@ -38,7 +39,7 @@ create_play_len: 7
+++++ create_play_run_steps: 3
+++++ create_sec_goal_reward: 2.0
+++++ create_target_reward: 1.0
+++++-cuda: False
++++++cuda: True
+++++ cuda_deterministic: False
+++++ debug_render: False
+++++ decay_clipping: False
+++++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++++ encoder_dim: 64
+++++ entropy_coef: 0.005
+++++ env_name: CreateLevelPush-v0
++++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++++ eps: 1e-05
+++++ eval_interval: 50
+++++-eval_num_processes: None
++++++eval_num_processes: 1
+++++ eval_only: False
+++++ eval_split: False
+++++ eval_split_ratio: 0.5
+++++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++++ max_grid_steps: 50
+++++ max_std_width: 3.0
+++++ mega_res_interval: 4
++++++multitask: True
+++++ n_clusters: 10
+++++ n_distributions: 1
+++++ n_hidden_option: 3
+++++@@ -138,7 +141,7 @@ no_diag: True
+++++ no_frame_stack: False
+++++ no_initial_state: False
+++++ no_overlap_env: False
+++++-no_test_eval: False
++++++no_test_eval: True
+++++ no_var: False
+++++ normalize_embs: False
+++++ not_upto: True
+++++@@ -146,7 +149,7 @@ num_distributions: 400
+++++ num_env_steps: 60000000
+++++ num_eval: 20
+++++ num_mini_batch: 4
+++++-num_processes: 1
++++++num_processes: 4
+++++ num_render: None
+++++ num_steps: 384
+++++ num_z: 1
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++index 00a83d9..cda9700 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++@@ -1 +1 @@
+++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++++\ No newline at end of file
++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++++\ No newline at end of file
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++index b531690..ebf34e4 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
+++++          for (i, new) in enumerate(news):
+++++              if new:
+++++                  self.stacked_obs[i] = 0
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++++index 93c497a..479a608 100644
++++++--- a/new-actions-rl/arguments.py
+++++++++ b/new-actions-rl/arguments.py
++++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++++ 
++++++     #### Multitask specific
++++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++++    parser.add_argument('--env-names', nargs='+', default=[])
++++++ 
++++++     #### Resume specific
++++++     parser.add_argument('--best-run', type=int, default=None)
++++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++index 00a83d9..37f6dc9 100644
++++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++@@ -1 +1 @@
++++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++++\ No newline at end of file
+++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++++\ No newline at end of file
++++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++index b531690..c4ff3d3 100644
++++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++++          for (i, new) in enumerate(news):
++++++              if new:
++++++                  self.stacked_obs[i] = 0
+++++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++++index d008c38..9b566fb 100755
++++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++++ b/new-actions-rl/rlf/rl/envs.py
++++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++++ 
++++++     return _thunk
++++++ 
++++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++++ 
++++++ def make_vec_envs(env_name,
++++++                   seed,
++++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++++                   trans_fn,
++++++                   args,
++++++                   num_frame_stack=None,
++++++-                  set_eval=False,
++++++-                  env_names_input=None):
+++++++                  set_eval=False):
++++++ 
++++++     if args.multitask and not set_eval:
++++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++++                   set_eval=False,
++++++                   env_names_input=None):
++++++ 
+++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++++     envs = [
++++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++++-        for env_name in env_names
+++++++        for env_name in candidate_env_names
++++++     ]
++++++ 
++++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++++index 0d25c28..e45648c 100755
++++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++++ b/new-actions-rl/rlf/rl/rl.py
++++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++++           end_update, lr_updates, args, test_args, checkpointer):
++++++ 
+++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++++     if args.resume and start_update > 0:
++++++         start_update += 1
++++++ 
++++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++++         log.start_interval_log()
++++++ 
++++++         if args.multitask:
++++++-            idx = np.random.randint(10000) % len(env_names)
+++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++++             envs = envs_bulk[idx]
++++++-            args.env_name = env_names[idx]
++++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++++            args.env_name = actual_env_names[idx]
+++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++++         else:
++++++             envs = envs_bulk
++++++ 
++++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++++                 train_eval_envs = []
++++++                 for i in range(len(envs_bulk)):
++++++                     eval_envs = envs_bulk[i]
++++++-                    args.env_name = env_names[i]
++++++-                    print(f"evaluating for env {env_names[i]}")
+++++++                    args.env_name = actual_env_names[i]
+++++++                    print(f"evaluating for env {actual_env_names[i]}")
++++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++++                                train_eval_envs = None)
++++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++++             else:
++++++                 for i in range(len(envs_bulk)):
++++++                     eval_envs = envs_bulk[i]
++++++-                    args.env_name = env_names[i]
++++++-                    print(f"evaluating for env {env_names[i]}")
+++++++                    args.env_name = actual_env_names[i]
+++++++                    print(f"evaluating for env {actual_env_names[i]}")
++++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++++                                train_eval_envs[i])
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++++index 953d419..edec780 100644
+++++--- a/new-actions-rl/rlf/main.py
++++++++ b/new-actions-rl/rlf/main.py
+++++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++++     return num_updates, lr_updates
+++++ 
+++++ 
+++++-def get_fine_tune_run(load_name, env_name):
++++++def get_fine_tune_run(load_name, env_name, args):
+++++     from rlf.exp_mgr.eval import get_max_run
+++++     import wandb
+++++     import subprocess
+++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++++index d008c38..9b566fb 100755
+++++--- a/new-actions-rl/rlf/rl/envs.py
++++++++ b/new-actions-rl/rlf/rl/envs.py
+++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++++ 
+++++     return _thunk
+++++ 
+++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++++ 
+++++ def make_vec_envs(env_name,
+++++                   seed,
+++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++++                   trans_fn,
+++++                   args,
+++++                   num_frame_stack=None,
+++++-                  set_eval=False,
+++++-                  env_names_input=None):
++++++                  set_eval=False):
+++++ 
+++++     if args.multitask and not set_eval:
+++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++++                   set_eval=False,
+++++                   env_names_input=None):
+++++ 
++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     envs = [
+++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++++-        for env_name in env_names
++++++        for env_name in candidate_env_names
+++++     ]
+++++ 
+++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++++index 0d25c28..e45648c 100755
+++++--- a/new-actions-rl/rlf/rl/rl.py
++++++++ b/new-actions-rl/rlf/rl/rl.py
+++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++           end_update, lr_updates, args, test_args, checkpointer):
+++++ 
++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     if args.resume and start_update > 0:
+++++         start_update += 1
+++++ 
+++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++         log.start_interval_log()
+++++ 
+++++         if args.multitask:
+++++-            idx = np.random.randint(10000) % len(env_names)
++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++++             envs = envs_bulk[idx]
+++++-            args.env_name = env_names[idx]
+++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++++            args.env_name = actual_env_names[idx]
++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++++         else:
+++++             envs = envs_bulk
+++++ 
+++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++                 train_eval_envs = []
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++++                                train_eval_envs = None)
+++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++             else:
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++++                                train_eval_envs[i])
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++++index 953d419..edec780 100644
++++--- a/new-actions-rl/rlf/main.py
+++++++ b/new-actions-rl/rlf/main.py
++++@@ -39,7 +39,7 @@ def get_num_updates(args):
++++     return num_updates, lr_updates
++++ 
++++ 
++++-def get_fine_tune_run(load_name, env_name):
+++++def get_fine_tune_run(load_name, env_name, args):
++++     from rlf.exp_mgr.eval import get_max_run
++++     import wandb
++++     import subprocess
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++index 93c497a..479a608 100644
++++--- a/new-actions-rl/arguments.py
+++++++ b/new-actions-rl/arguments.py
++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++ 
++++     #### Multitask specific
++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++    parser.add_argument('--env-names', nargs='+', default=[])
++++ 
++++     #### Resume specific
++++     parser.add_argument('--best-run', type=int, default=None)
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++index a55af28..c06c75e 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++@@ -1,11 +1,11 @@
++++ Date and Time:
++++-10/03/2024
++++-16:36:27
+++++16/04/2024
+++++14:42:37
++++ 
++++ action_base_hidden_size: 128
++++ action_base_output_size: 64
++++ action_proj_dim: 1
++++-action_random_sample: True
+++++action_random_sample: False
++++ action_seg_loc: ./data/action_segs
++++ action_set_size: 50
++++ algo: ppo
++++@@ -14,6 +14,7 @@ analysis_angle: None
++++ analysis_emb: None
++++ anti_alias_blur: 0.0
++++ backup: None
+++++best_run: 9349
++++ both_train_test: False
++++ bound_effect: False
++++ cat_kl_loss: None
++++@@ -38,7 +39,7 @@ create_play_len: 7
++++ create_play_run_steps: 3
++++ create_sec_goal_reward: 2.0
++++ create_target_reward: 1.0
++++-cuda: False
+++++cuda: True
++++ cuda_deterministic: False
++++ debug_render: False
++++ decay_clipping: False
++++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++++ encoder_dim: 64
++++ entropy_coef: 0.005
++++ env_name: CreateLevelPush-v0
+++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++++ eps: 1e-05
++++ eval_interval: 50
++++-eval_num_processes: None
+++++eval_num_processes: 1
++++ eval_only: False
++++ eval_split: False
++++ eval_split_ratio: 0.5
++++@@ -109,7 +111,7 @@ kl_pen: None
++++ large_steps: 40
++++ latent_dim: 1
++++ load_all_data: False
++++-load_best_name: None
+++++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
++++ load_dataset: True
++++ load_emb_logvar: True
++++ load_emb_model_file: None
++++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++++ max_grid_steps: 50
++++ max_std_width: 3.0
++++ mega_res_interval: 4
+++++multitask: True
++++ n_clusters: 10
++++ n_distributions: 1
++++ n_hidden_option: 3
++++@@ -138,7 +141,7 @@ no_diag: True
++++ no_frame_stack: False
++++ no_initial_state: False
++++ no_overlap_env: False
++++-no_test_eval: False
+++++no_test_eval: True
++++ no_var: False
++++ normalize_embs: False
++++ not_upto: True
++++@@ -146,7 +149,7 @@ num_distributions: 400
++++ num_env_steps: 60000000
++++ num_eval: 20
++++ num_mini_batch: 4
++++-num_processes: 1
+++++num_processes: 4
++++ num_render: None
++++ num_steps: 384
++++ num_z: 1
++++@@ -193,7 +196,7 @@ render_result_figures: False
++++ render_text: False
++++ reparam: True
++++ result_dir: ./data/results
++++-resume: False
+++++resume: True
++++ resume_emb_training: False
++++ reward_entropy_coef: 0.0
++++ rl_use_radam: False
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++index 00a83d9..ec24bd5 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++@@ -1 +1 @@
++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++\ No newline at end of file
+++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++\ No newline at end of file
++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++index b531690..6d6f339 100644
++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++@@ -10764,3 +10764,1081 @@ index b41b6b9..e59734f 100755
++++          for (i, new) in enumerate(news):
++++              if new:
++++                  self.stacked_obs[i] = 0
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++++index 93c497a..479a608 100644
+++++--- a/new-actions-rl/arguments.py
++++++++ b/new-actions-rl/arguments.py
+++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++++ 
+++++     #### Multitask specific
+++++     parser.add_argument('--multitask', action='store_true', default=False)
++++++    parser.add_argument('--env-names', nargs='+', default=[])
+++++ 
+++++     #### Resume specific
+++++     parser.add_argument('--best-run', type=int, default=None)
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++index 00a83d9..37f6dc9 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++@@ -1 +1 @@
+++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++++\ No newline at end of file
++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++++\ No newline at end of file
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++index b531690..c4ff3d3 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++++          for (i, new) in enumerate(news):
+++++              if new:
+++++                  self.stacked_obs[i] = 0
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++++index d008c38..9b566fb 100755
+++++--- a/new-actions-rl/rlf/rl/envs.py
++++++++ b/new-actions-rl/rlf/rl/envs.py
+++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++++ 
+++++     return _thunk
+++++ 
+++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++++ 
+++++ def make_vec_envs(env_name,
+++++                   seed,
+++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++++                   trans_fn,
+++++                   args,
+++++                   num_frame_stack=None,
+++++-                  set_eval=False,
+++++-                  env_names_input=None):
++++++                  set_eval=False):
+++++ 
+++++     if args.multitask and not set_eval:
+++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++++                   set_eval=False,
+++++                   env_names_input=None):
+++++ 
++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     envs = [
+++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++++-        for env_name in env_names
++++++        for env_name in candidate_env_names
+++++     ]
+++++ 
+++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++++index 0d25c28..e45648c 100755
+++++--- a/new-actions-rl/rlf/rl/rl.py
++++++++ b/new-actions-rl/rlf/rl/rl.py
+++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++           end_update, lr_updates, args, test_args, checkpointer):
+++++ 
++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     if args.resume and start_update > 0:
+++++         start_update += 1
+++++ 
+++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++         log.start_interval_log()
+++++ 
+++++         if args.multitask:
+++++-            idx = np.random.randint(10000) % len(env_names)
++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++++             envs = envs_bulk[idx]
+++++-            args.env_name = env_names[idx]
+++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++++            args.env_name = actual_env_names[idx]
++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++++         else:
+++++             envs = envs_bulk
+++++ 
+++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++                 train_eval_envs = []
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++++                                train_eval_envs = None)
+++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++             else:
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++++                                train_eval_envs[i])
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++++index 93c497a..479a608 100644
+++++--- a/new-actions-rl/arguments.py
++++++++ b/new-actions-rl/arguments.py
+++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++++ 
+++++     #### Multitask specific
+++++     parser.add_argument('--multitask', action='store_true', default=False)
++++++    parser.add_argument('--env-names', nargs='+', default=[])
+++++ 
+++++     #### Resume specific
+++++     parser.add_argument('--best-run', type=int, default=None)
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++index a55af28..9e018c4 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++@@ -1,11 +1,11 @@
+++++ Date and Time:
+++++-10/03/2024
+++++-16:36:27
++++++15/04/2024
++++++22:26:28
+++++ 
+++++ action_base_hidden_size: 128
+++++ action_base_output_size: 64
+++++ action_proj_dim: 1
+++++-action_random_sample: True
++++++action_random_sample: False
+++++ action_seg_loc: ./data/action_segs
+++++ action_set_size: 50
+++++ algo: ppo
+++++@@ -14,6 +14,7 @@ analysis_angle: None
+++++ analysis_emb: None
+++++ anti_alias_blur: 0.0
+++++ backup: None
++++++best_run: None
+++++ both_train_test: False
+++++ bound_effect: False
+++++ cat_kl_loss: None
+++++@@ -38,7 +39,7 @@ create_play_len: 7
+++++ create_play_run_steps: 3
+++++ create_sec_goal_reward: 2.0
+++++ create_target_reward: 1.0
+++++-cuda: False
++++++cuda: True
+++++ cuda_deterministic: False
+++++ debug_render: False
+++++ decay_clipping: False
+++++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++++ encoder_dim: 64
+++++ entropy_coef: 0.005
+++++ env_name: CreateLevelPush-v0
++++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++++ eps: 1e-05
+++++ eval_interval: 50
+++++-eval_num_processes: None
++++++eval_num_processes: 1
+++++ eval_only: False
+++++ eval_split: False
+++++ eval_split_ratio: 0.5
+++++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++++ max_grid_steps: 50
+++++ max_std_width: 3.0
+++++ mega_res_interval: 4
++++++multitask: True
+++++ n_clusters: 10
+++++ n_distributions: 1
+++++ n_hidden_option: 3
+++++@@ -138,7 +141,7 @@ no_diag: True
+++++ no_frame_stack: False
+++++ no_initial_state: False
+++++ no_overlap_env: False
+++++-no_test_eval: False
++++++no_test_eval: True
+++++ no_var: False
+++++ normalize_embs: False
+++++ not_upto: True
+++++@@ -146,7 +149,7 @@ num_distributions: 400
+++++ num_env_steps: 60000000
+++++ num_eval: 20
+++++ num_mini_batch: 4
+++++-num_processes: 1
++++++num_processes: 4
+++++ num_render: None
+++++ num_steps: 384
+++++ num_z: 1
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++index 00a83d9..cda9700 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++@@ -1 +1 @@
+++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++++\ No newline at end of file
++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++++\ No newline at end of file
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++index b531690..ebf34e4 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
+++++          for (i, new) in enumerate(news):
+++++              if new:
+++++                  self.stacked_obs[i] = 0
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++++index 93c497a..479a608 100644
++++++--- a/new-actions-rl/arguments.py
+++++++++ b/new-actions-rl/arguments.py
++++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++++ 
++++++     #### Multitask specific
++++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++++    parser.add_argument('--env-names', nargs='+', default=[])
++++++ 
++++++     #### Resume specific
++++++     parser.add_argument('--best-run', type=int, default=None)
++++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++index 00a83d9..37f6dc9 100644
++++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++@@ -1 +1 @@
++++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++++\ No newline at end of file
+++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++++\ No newline at end of file
++++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++index b531690..c4ff3d3 100644
++++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++++          for (i, new) in enumerate(news):
++++++              if new:
++++++                  self.stacked_obs[i] = 0
+++++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++++index d008c38..9b566fb 100755
++++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++++ b/new-actions-rl/rlf/rl/envs.py
++++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++++ 
++++++     return _thunk
++++++ 
++++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++++ 
++++++ def make_vec_envs(env_name,
++++++                   seed,
++++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++++                   trans_fn,
++++++                   args,
++++++                   num_frame_stack=None,
++++++-                  set_eval=False,
++++++-                  env_names_input=None):
+++++++                  set_eval=False):
++++++ 
++++++     if args.multitask and not set_eval:
++++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++++                   set_eval=False,
++++++                   env_names_input=None):
++++++ 
+++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++++     envs = [
++++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++++-        for env_name in env_names
+++++++        for env_name in candidate_env_names
++++++     ]
++++++ 
++++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++++index 0d25c28..e45648c 100755
++++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++++ b/new-actions-rl/rlf/rl/rl.py
++++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++++           end_update, lr_updates, args, test_args, checkpointer):
++++++ 
+++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++++     if args.resume and start_update > 0:
++++++         start_update += 1
++++++ 
++++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++++         log.start_interval_log()
++++++ 
++++++         if args.multitask:
++++++-            idx = np.random.randint(10000) % len(env_names)
+++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++++             envs = envs_bulk[idx]
++++++-            args.env_name = env_names[idx]
++++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++++            args.env_name = actual_env_names[idx]
+++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++++         else:
++++++             envs = envs_bulk
++++++ 
++++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++++                 train_eval_envs = []
++++++                 for i in range(len(envs_bulk)):
++++++                     eval_envs = envs_bulk[i]
++++++-                    args.env_name = env_names[i]
++++++-                    print(f"evaluating for env {env_names[i]}")
+++++++                    args.env_name = actual_env_names[i]
+++++++                    print(f"evaluating for env {actual_env_names[i]}")
++++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++++                                train_eval_envs = None)
++++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++++             else:
++++++                 for i in range(len(envs_bulk)):
++++++                     eval_envs = envs_bulk[i]
++++++-                    args.env_name = env_names[i]
++++++-                    print(f"evaluating for env {env_names[i]}")
+++++++                    args.env_name = actual_env_names[i]
+++++++                    print(f"evaluating for env {actual_env_names[i]}")
++++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++++                                train_eval_envs[i])
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++++index 953d419..edec780 100644
+++++--- a/new-actions-rl/rlf/main.py
++++++++ b/new-actions-rl/rlf/main.py
+++++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++++     return num_updates, lr_updates
+++++ 
+++++ 
+++++-def get_fine_tune_run(load_name, env_name):
++++++def get_fine_tune_run(load_name, env_name, args):
+++++     from rlf.exp_mgr.eval import get_max_run
+++++     import wandb
+++++     import subprocess
+++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++++index d008c38..9b566fb 100755
+++++--- a/new-actions-rl/rlf/rl/envs.py
++++++++ b/new-actions-rl/rlf/rl/envs.py
+++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++++ 
+++++     return _thunk
+++++ 
+++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++++ 
+++++ def make_vec_envs(env_name,
+++++                   seed,
+++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++++                   trans_fn,
+++++                   args,
+++++                   num_frame_stack=None,
+++++-                  set_eval=False,
+++++-                  env_names_input=None):
++++++                  set_eval=False):
+++++ 
+++++     if args.multitask and not set_eval:
+++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++++                   set_eval=False,
+++++                   env_names_input=None):
+++++ 
++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     envs = [
+++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++++-        for env_name in env_names
++++++        for env_name in candidate_env_names
+++++     ]
+++++ 
+++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++++index 0d25c28..e45648c 100755
+++++--- a/new-actions-rl/rlf/rl/rl.py
++++++++ b/new-actions-rl/rlf/rl/rl.py
+++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++           end_update, lr_updates, args, test_args, checkpointer):
+++++ 
++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     if args.resume and start_update > 0:
+++++         start_update += 1
+++++ 
+++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++         log.start_interval_log()
+++++ 
+++++         if args.multitask:
+++++-            idx = np.random.randint(10000) % len(env_names)
++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++++             envs = envs_bulk[idx]
+++++-            args.env_name = env_names[idx]
+++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++++            args.env_name = actual_env_names[idx]
++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++++         else:
+++++             envs = envs_bulk
+++++ 
+++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++                 train_eval_envs = []
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++++                                train_eval_envs = None)
+++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++             else:
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++++                                train_eval_envs[i])
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++++index 93c497a..479a608 100644
+++++--- a/new-actions-rl/arguments.py
++++++++ b/new-actions-rl/arguments.py
+++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++++ 
+++++     #### Multitask specific
+++++     parser.add_argument('--multitask', action='store_true', default=False)
++++++    parser.add_argument('--env-names', nargs='+', default=[])
+++++ 
+++++     #### Resume specific
+++++     parser.add_argument('--best-run', type=int, default=None)
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++index a55af28..5c86c73 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++@@ -1,11 +1,11 @@
+++++ Date and Time:
+++++-10/03/2024
+++++-16:36:27
++++++16/04/2024
++++++11:03:41
+++++ 
+++++ action_base_hidden_size: 128
+++++ action_base_output_size: 64
+++++ action_proj_dim: 1
+++++-action_random_sample: True
++++++action_random_sample: False
+++++ action_seg_loc: ./data/action_segs
+++++ action_set_size: 50
+++++ algo: ppo
+++++@@ -14,6 +14,7 @@ analysis_angle: None
+++++ analysis_emb: None
+++++ anti_alias_blur: 0.0
+++++ backup: None
++++++best_run: 5799
+++++ both_train_test: False
+++++ bound_effect: False
+++++ cat_kl_loss: None
+++++@@ -38,7 +39,7 @@ create_play_len: 7
+++++ create_play_run_steps: 3
+++++ create_sec_goal_reward: 2.0
+++++ create_target_reward: 1.0
+++++-cuda: False
++++++cuda: True
+++++ cuda_deterministic: False
+++++ debug_render: False
+++++ decay_clipping: False
+++++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++++ encoder_dim: 64
+++++ entropy_coef: 0.005
+++++ env_name: CreateLevelPush-v0
++++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++++ eps: 1e-05
+++++ eval_interval: 50
+++++-eval_num_processes: None
++++++eval_num_processes: 1
+++++ eval_only: False
+++++ eval_split: False
+++++ eval_split_ratio: 0.5
+++++@@ -109,7 +111,7 @@ kl_pen: None
+++++ large_steps: 40
+++++ latent_dim: 1
+++++ load_all_data: False
+++++-load_best_name: None
++++++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
+++++ load_dataset: True
+++++ load_emb_logvar: True
+++++ load_emb_model_file: None
+++++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++++ max_grid_steps: 50
+++++ max_std_width: 3.0
+++++ mega_res_interval: 4
++++++multitask: True
+++++ n_clusters: 10
+++++ n_distributions: 1
+++++ n_hidden_option: 3
+++++@@ -138,7 +141,7 @@ no_diag: True
+++++ no_frame_stack: False
+++++ no_initial_state: False
+++++ no_overlap_env: False
+++++-no_test_eval: False
++++++no_test_eval: True
+++++ no_var: False
+++++ normalize_embs: False
+++++ not_upto: True
+++++@@ -146,7 +149,7 @@ num_distributions: 400
+++++ num_env_steps: 60000000
+++++ num_eval: 20
+++++ num_mini_batch: 4
+++++-num_processes: 1
++++++num_processes: 4
+++++ num_render: None
+++++ num_steps: 384
+++++ num_z: 1
+++++@@ -193,7 +196,7 @@ render_result_figures: False
+++++ render_text: False
+++++ reparam: True
+++++ result_dir: ./data/results
+++++-resume: False
++++++resume: True
+++++ resume_emb_training: False
+++++ reward_entropy_coef: 0.0
+++++ rl_use_radam: False
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++index 00a83d9..e3712f3 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++@@ -1 +1 @@
+++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++++\ No newline at end of file
++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++++\ No newline at end of file
+++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++index b531690..fde463e 100644
+++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++@@ -10764,3 +10764,433 @@ index b41b6b9..e59734f 100755
+++++          for (i, new) in enumerate(news):
+++++              if new:
+++++                  self.stacked_obs[i] = 0
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++++index 93c497a..479a608 100644
++++++--- a/new-actions-rl/arguments.py
+++++++++ b/new-actions-rl/arguments.py
++++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++++ 
++++++     #### Multitask specific
++++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++++    parser.add_argument('--env-names', nargs='+', default=[])
++++++ 
++++++     #### Resume specific
++++++     parser.add_argument('--best-run', type=int, default=None)
++++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++index 00a83d9..37f6dc9 100644
++++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++@@ -1 +1 @@
++++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++++\ No newline at end of file
+++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++++\ No newline at end of file
++++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++index b531690..c4ff3d3 100644
++++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
++++++          for (i, new) in enumerate(news):
++++++              if new:
++++++                  self.stacked_obs[i] = 0
+++++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++++index d008c38..9b566fb 100755
++++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++++ b/new-actions-rl/rlf/rl/envs.py
++++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++++ 
++++++     return _thunk
++++++ 
++++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++++ 
++++++ def make_vec_envs(env_name,
++++++                   seed,
++++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++++                   trans_fn,
++++++                   args,
++++++                   num_frame_stack=None,
++++++-                  set_eval=False,
++++++-                  env_names_input=None):
+++++++                  set_eval=False):
++++++ 
++++++     if args.multitask and not set_eval:
++++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++++                   set_eval=False,
++++++                   env_names_input=None):
++++++ 
+++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++++     envs = [
++++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++++-        for env_name in env_names
+++++++        for env_name in candidate_env_names
++++++     ]
++++++ 
++++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++++index 0d25c28..e45648c 100755
++++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++++ b/new-actions-rl/rlf/rl/rl.py
++++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++++           end_update, lr_updates, args, test_args, checkpointer):
++++++ 
+++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++++     if args.resume and start_update > 0:
++++++         start_update += 1
++++++ 
++++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++++         log.start_interval_log()
++++++ 
++++++         if args.multitask:
++++++-            idx = np.random.randint(10000) % len(env_names)
+++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++++             envs = envs_bulk[idx]
++++++-            args.env_name = env_names[idx]
++++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++++            args.env_name = actual_env_names[idx]
+++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++++         else:
++++++             envs = envs_bulk
++++++ 
++++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++++                 train_eval_envs = []
++++++                 for i in range(len(envs_bulk)):
++++++                     eval_envs = envs_bulk[i]
++++++-                    args.env_name = env_names[i]
++++++-                    print(f"evaluating for env {env_names[i]}")
+++++++                    args.env_name = actual_env_names[i]
+++++++                    print(f"evaluating for env {actual_env_names[i]}")
++++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++++                                train_eval_envs = None)
++++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++++             else:
++++++                 for i in range(len(envs_bulk)):
++++++                     eval_envs = envs_bulk[i]
++++++-                    args.env_name = env_names[i]
++++++-                    print(f"evaluating for env {env_names[i]}")
+++++++                    args.env_name = actual_env_names[i]
+++++++                    print(f"evaluating for env {actual_env_names[i]}")
++++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++++                                train_eval_envs[i])
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++++++index 93c497a..479a608 100644
++++++--- a/new-actions-rl/arguments.py
+++++++++ b/new-actions-rl/arguments.py
++++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++++++ 
++++++     #### Multitask specific
++++++     parser.add_argument('--multitask', action='store_true', default=False)
+++++++    parser.add_argument('--env-names', nargs='+', default=[])
++++++ 
++++++     #### Resume specific
++++++     parser.add_argument('--best-run', type=int, default=None)
++++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++index a55af28..9e018c4 100644
++++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++@@ -1,11 +1,11 @@
++++++ Date and Time:
++++++-10/03/2024
++++++-16:36:27
+++++++15/04/2024
+++++++22:26:28
++++++ 
++++++ action_base_hidden_size: 128
++++++ action_base_output_size: 64
++++++ action_proj_dim: 1
++++++-action_random_sample: True
+++++++action_random_sample: False
++++++ action_seg_loc: ./data/action_segs
++++++ action_set_size: 50
++++++ algo: ppo
++++++@@ -14,6 +14,7 @@ analysis_angle: None
++++++ analysis_emb: None
++++++ anti_alias_blur: 0.0
++++++ backup: None
+++++++best_run: None
++++++ both_train_test: False
++++++ bound_effect: False
++++++ cat_kl_loss: None
++++++@@ -38,7 +39,7 @@ create_play_len: 7
++++++ create_play_run_steps: 3
++++++ create_sec_goal_reward: 2.0
++++++ create_target_reward: 1.0
++++++-cuda: False
+++++++cuda: True
++++++ cuda_deterministic: False
++++++ debug_render: False
++++++ decay_clipping: False
++++++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++++++ encoder_dim: 64
++++++ entropy_coef: 0.005
++++++ env_name: CreateLevelPush-v0
+++++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++++++ eps: 1e-05
++++++ eval_interval: 50
++++++-eval_num_processes: None
+++++++eval_num_processes: 1
++++++ eval_only: False
++++++ eval_split: False
++++++ eval_split_ratio: 0.5
++++++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++++++ max_grid_steps: 50
++++++ max_std_width: 3.0
++++++ mega_res_interval: 4
+++++++multitask: True
++++++ n_clusters: 10
++++++ n_distributions: 1
++++++ n_hidden_option: 3
++++++@@ -138,7 +141,7 @@ no_diag: True
++++++ no_frame_stack: False
++++++ no_initial_state: False
++++++ no_overlap_env: False
++++++-no_test_eval: False
+++++++no_test_eval: True
++++++ no_var: False
++++++ normalize_embs: False
++++++ not_upto: True
++++++@@ -146,7 +149,7 @@ num_distributions: 400
++++++ num_env_steps: 60000000
++++++ num_eval: 20
++++++ num_mini_batch: 4
++++++-num_processes: 1
+++++++num_processes: 4
++++++ num_render: None
++++++ num_steps: 384
++++++ num_z: 1
++++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++index 00a83d9..cda9700 100644
++++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++@@ -1 +1 @@
++++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++++++\ No newline at end of file
+++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
++++++\ No newline at end of file
++++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++index b531690..ebf34e4 100644
++++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++@@ -10764,3 +10764,118 @@ index b41b6b9..e59734f 100755
++++++          for (i, new) in enumerate(news):
++++++              if new:
++++++                  self.stacked_obs[i] = 0
+++++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++++++index 93c497a..479a608 100644
+++++++--- a/new-actions-rl/arguments.py
++++++++++ b/new-actions-rl/arguments.py
+++++++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++++++ 
+++++++     #### Multitask specific
+++++++     parser.add_argument('--multitask', action='store_true', default=False)
++++++++    parser.add_argument('--env-names', nargs='+', default=[])
+++++++ 
+++++++     #### Resume specific
+++++++     parser.add_argument('--best-run', type=int, default=None)
+++++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++index 00a83d9..37f6dc9 100644
+++++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++++@@ -1 +1 @@
+++++++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++++++\ No newline at end of file
++++++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0
+++++++\ No newline at end of file
+++++++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++index b531690..c4ff3d3 100644
+++++++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
++++++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/git.txt
+++++++@@ -10764,3 +10764,4 @@ index b41b6b9..e59734f 100755
+++++++          for (i, new) in enumerate(news):
+++++++              if new:
+++++++                  self.stacked_obs[i] = 0
++++++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++++++index d008c38..9b566fb 100755
+++++++--- a/new-actions-rl/rlf/rl/envs.py
++++++++++ b/new-actions-rl/rlf/rl/envs.py
+++++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++++++ 
+++++++     return _thunk
+++++++ 
+++++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++++++ 
+++++++ def make_vec_envs(env_name,
+++++++                   seed,
+++++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++++++                   trans_fn,
+++++++                   args,
+++++++                   num_frame_stack=None,
+++++++-                  set_eval=False,
+++++++-                  env_names_input=None):
++++++++                  set_eval=False):
+++++++ 
+++++++     if args.multitask and not set_eval:
+++++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++++++                   set_eval=False,
+++++++                   env_names_input=None):
+++++++ 
++++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++++     envs = [
+++++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++++++-        for env_name in env_names
++++++++        for env_name in candidate_env_names
+++++++     ]
+++++++ 
+++++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++++++index 0d25c28..e45648c 100755
+++++++--- a/new-actions-rl/rlf/rl/rl.py
++++++++++ b/new-actions-rl/rlf/rl/rl.py
+++++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++++           end_update, lr_updates, args, test_args, checkpointer):
+++++++ 
++++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++++     if args.resume and start_update > 0:
+++++++         start_update += 1
+++++++ 
+++++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++++         log.start_interval_log()
+++++++ 
+++++++         if args.multitask:
+++++++-            idx = np.random.randint(10000) % len(env_names)
++++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++++++             envs = envs_bulk[idx]
+++++++-            args.env_name = env_names[idx]
+++++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++++++            args.env_name = actual_env_names[idx]
++++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++++++         else:
+++++++             envs = envs_bulk
+++++++ 
+++++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++++                 train_eval_envs = []
+++++++                 for i in range(len(envs_bulk)):
+++++++                     eval_envs = envs_bulk[i]
+++++++-                    args.env_name = env_names[i]
+++++++-                    print(f"evaluating for env {env_names[i]}")
++++++++                    args.env_name = actual_env_names[i]
++++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++++++                                train_eval_envs = None)
+++++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++++             else:
+++++++                 for i in range(len(envs_bulk)):
+++++++                     eval_envs = envs_bulk[i]
+++++++-                    args.env_name = env_names[i]
+++++++-                    print(f"evaluating for env {env_names[i]}")
++++++++                    args.env_name = actual_env_names[i]
++++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++++++                                train_eval_envs[i])
+++++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++++++index 953d419..edec780 100644
++++++--- a/new-actions-rl/rlf/main.py
+++++++++ b/new-actions-rl/rlf/main.py
++++++@@ -39,7 +39,7 @@ def get_num_updates(args):
++++++     return num_updates, lr_updates
++++++ 
++++++ 
++++++-def get_fine_tune_run(load_name, env_name):
+++++++def get_fine_tune_run(load_name, env_name, args):
++++++     from rlf.exp_mgr.eval import get_max_run
++++++     import wandb
++++++     import subprocess
++++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++++index d008c38..9b566fb 100755
++++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++++ b/new-actions-rl/rlf/rl/envs.py
++++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++++ 
++++++     return _thunk
++++++ 
++++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++++ 
++++++ def make_vec_envs(env_name,
++++++                   seed,
++++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++++                   trans_fn,
++++++                   args,
++++++                   num_frame_stack=None,
++++++-                  set_eval=False,
++++++-                  env_names_input=None):
+++++++                  set_eval=False):
++++++ 
++++++     if args.multitask and not set_eval:
++++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++++                   set_eval=False,
++++++                   env_names_input=None):
++++++ 
+++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++++     envs = [
++++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++++-        for env_name in env_names
+++++++        for env_name in candidate_env_names
++++++     ]
++++++ 
++++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++++index 0d25c28..e45648c 100755
++++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++++ b/new-actions-rl/rlf/rl/rl.py
++++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++++           end_update, lr_updates, args, test_args, checkpointer):
++++++ 
+++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++++     if args.resume and start_update > 0:
++++++         start_update += 1
++++++ 
++++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++++         log.start_interval_log()
++++++ 
++++++         if args.multitask:
++++++-            idx = np.random.randint(10000) % len(env_names)
+++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++++             envs = envs_bulk[idx]
++++++-            args.env_name = env_names[idx]
++++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++++            args.env_name = actual_env_names[idx]
+++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++++         else:
++++++             envs = envs_bulk
++++++ 
++++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++++                 train_eval_envs = []
++++++                 for i in range(len(envs_bulk)):
++++++                     eval_envs = envs_bulk[i]
++++++-                    args.env_name = env_names[i]
++++++-                    print(f"evaluating for env {env_names[i]}")
+++++++                    args.env_name = actual_env_names[i]
+++++++                    print(f"evaluating for env {actual_env_names[i]}")
++++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++++                                train_eval_envs = None)
++++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++++             else:
++++++                 for i in range(len(envs_bulk)):
++++++                     eval_envs = envs_bulk[i]
++++++-                    args.env_name = env_names[i]
++++++-                    print(f"evaluating for env {env_names[i]}")
+++++++                    args.env_name = actual_env_names[i]
+++++++                    print(f"evaluating for env {actual_env_names[i]}")
++++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++++                                train_eval_envs[i])
++++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++++index 953d419..edec780 100644
+++++--- a/new-actions-rl/rlf/main.py
++++++++ b/new-actions-rl/rlf/main.py
+++++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++++     return num_updates, lr_updates
+++++ 
+++++ 
+++++-def get_fine_tune_run(load_name, env_name):
++++++def get_fine_tune_run(load_name, env_name, args):
+++++     from rlf.exp_mgr.eval import get_max_run
+++++     import wandb
+++++     import subprocess
+++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++++index d008c38..9b566fb 100755
+++++--- a/new-actions-rl/rlf/rl/envs.py
++++++++ b/new-actions-rl/rlf/rl/envs.py
+++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++++ 
+++++     return _thunk
+++++ 
+++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++++ 
+++++ def make_vec_envs(env_name,
+++++                   seed,
+++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++++                   trans_fn,
+++++                   args,
+++++                   num_frame_stack=None,
+++++-                  set_eval=False,
+++++-                  env_names_input=None):
++++++                  set_eval=False):
+++++ 
+++++     if args.multitask and not set_eval:
+++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++++                   set_eval=False,
+++++                   env_names_input=None):
+++++ 
++++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     envs = [
+++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++++-        for env_name in env_names
++++++        for env_name in candidate_env_names
+++++     ]
+++++ 
+++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++++index 0d25c28..e45648c 100755
+++++--- a/new-actions-rl/rlf/rl/rl.py
++++++++ b/new-actions-rl/rlf/rl/rl.py
+++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++           end_update, lr_updates, args, test_args, checkpointer):
+++++ 
++++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++++     if args.resume and start_update > 0:
+++++         start_update += 1
+++++ 
+++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++         log.start_interval_log()
+++++ 
+++++         if args.multitask:
+++++-            idx = np.random.randint(10000) % len(env_names)
++++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++++             envs = envs_bulk[idx]
+++++-            args.env_name = env_names[idx]
+++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++++            args.env_name = actual_env_names[idx]
++++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++++         else:
+++++             envs = envs_bulk
+++++ 
+++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++                 train_eval_envs = []
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++++                                train_eval_envs = None)
+++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++++             else:
+++++                 for i in range(len(envs_bulk)):
+++++                     eval_envs = envs_bulk[i]
+++++-                    args.env_name = env_names[i]
+++++-                    print(f"evaluating for env {env_names[i]}")
++++++                    args.env_name = actual_env_names[i]
++++++                    print(f"evaluating for env {actual_env_names[i]}")
+++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++++                                train_eval_envs[i])
+++++347a0e6efbab5459e5d4db3b55c040154efa2886
++++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++++index 953d419..edec780 100644
++++--- a/new-actions-rl/rlf/main.py
+++++++ b/new-actions-rl/rlf/main.py
++++@@ -39,7 +39,7 @@ def get_num_updates(args):
++++     return num_updates, lr_updates
++++ 
++++ 
++++-def get_fine_tune_run(load_name, env_name):
+++++def get_fine_tune_run(load_name, env_name, args):
++++     from rlf.exp_mgr.eval import get_max_run
++++     import wandb
++++     import subprocess
++++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++++index d008c38..9b566fb 100755
++++--- a/new-actions-rl/rlf/rl/envs.py
+++++++ b/new-actions-rl/rlf/rl/envs.py
++++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++++ 
++++     return _thunk
++++ 
++++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++++ 
++++ def make_vec_envs(env_name,
++++                   seed,
++++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++++                   trans_fn,
++++                   args,
++++                   num_frame_stack=None,
++++-                  set_eval=False,
++++-                  env_names_input=None):
+++++                  set_eval=False):
++++ 
++++     if args.multitask and not set_eval:
++++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++++                   set_eval=False,
++++                   env_names_input=None):
++++ 
+++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     envs = [
++++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++++-        for env_name in env_names
+++++        for env_name in candidate_env_names
++++     ]
++++ 
++++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++++index 0d25c28..e45648c 100755
++++--- a/new-actions-rl/rlf/rl/rl.py
+++++++ b/new-actions-rl/rlf/rl/rl.py
++++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++           end_update, lr_updates, args, test_args, checkpointer):
++++ 
+++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++++     if args.resume and start_update > 0:
++++         start_update += 1
++++ 
++++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++         log.start_interval_log()
++++ 
++++         if args.multitask:
++++-            idx = np.random.randint(10000) % len(env_names)
+++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++++             envs = envs_bulk[idx]
++++-            args.env_name = env_names[idx]
++++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++++            args.env_name = actual_env_names[idx]
+++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++++         else:
++++             envs = envs_bulk
++++ 
++++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++                 train_eval_envs = []
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++++                                train_eval_envs = None)
++++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++++             else:
++++                 for i in range(len(envs_bulk)):
++++                     eval_envs = envs_bulk[i]
++++-                    args.env_name = env_names[i]
++++-                    print(f"evaluating for env {env_names[i]}")
+++++                    args.env_name = actual_env_names[i]
+++++                    print(f"evaluating for env {actual_env_names[i]}")
++++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++++                                train_eval_envs[i])
++++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+++index 953d419..edec780 100644
+++--- a/new-actions-rl/rlf/main.py
++++++ b/new-actions-rl/rlf/main.py
+++@@ -39,7 +39,7 @@ def get_num_updates(args):
+++     return num_updates, lr_updates
+++ 
+++ 
+++-def get_fine_tune_run(load_name, env_name):
++++def get_fine_tune_run(load_name, env_name, args):
+++     from rlf.exp_mgr.eval import get_max_run
+++     import wandb
+++     import subprocess
+++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+++index d008c38..9b566fb 100755
+++--- a/new-actions-rl/rlf/rl/envs.py
++++++ b/new-actions-rl/rlf/rl/envs.py
+++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+++ 
+++     return _thunk
+++ 
+++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+++ 
+++ def make_vec_envs(env_name,
+++                   seed,
+++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+++                   trans_fn,
+++                   args,
+++                   num_frame_stack=None,
+++-                  set_eval=False,
+++-                  env_names_input=None):
++++                  set_eval=False):
+++ 
+++     if args.multitask and not set_eval:
+++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+++                   set_eval=False,
+++                   env_names_input=None):
+++ 
++++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     envs = [
+++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+++-        for env_name in env_names
++++        for env_name in candidate_env_names
+++     ]
+++ 
+++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+++index 0d25c28..e45648c 100755
+++--- a/new-actions-rl/rlf/rl/rl.py
++++++ b/new-actions-rl/rlf/rl/rl.py
+++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++           end_update, lr_updates, args, test_args, checkpointer):
+++ 
++++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+++     if args.resume and start_update > 0:
+++         start_update += 1
+++ 
+++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++         log.start_interval_log()
+++ 
+++         if args.multitask:
+++-            idx = np.random.randint(10000) % len(env_names)
++++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+++             envs = envs_bulk[idx]
+++-            args.env_name = env_names[idx]
+++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++++            args.env_name = actual_env_names[idx]
++++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+++         else:
+++             envs = envs_bulk
+++ 
+++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++                 train_eval_envs = []
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs = None,
+++                                train_eval_envs = None)
+++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+++             else:
+++                 for i in range(len(envs_bulk)):
+++                     eval_envs = envs_bulk[i]
+++-                    args.env_name = env_names[i]
+++-                    print(f"evaluating for env {env_names[i]}")
++++                    args.env_name = actual_env_names[i]
++++                    print(f"evaluating for env {actual_env_names[i]}")
+++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+++                                test_args, log, j, total_num_steps, test_eval_envs[i],
+++                                train_eval_envs[i])
+++347a0e6efbab5459e5d4db3b55c040154efa2886
+++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+++index 93c497a..479a608 100644
+++--- a/new-actions-rl/arguments.py
++++++ b/new-actions-rl/arguments.py
+++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+++ 
+++     #### Multitask specific
+++     parser.add_argument('--multitask', action='store_true', default=False)
++++    parser.add_argument('--env-names', nargs='+', default=[])
+++ 
+++     #### Resume specific
+++     parser.add_argument('--best-run', type=int, default=None)
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++index a55af28..471a8c9 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++@@ -1,11 +1,11 @@
+++ Date and Time:
+++-10/03/2024
+++-16:36:27
++++17/04/2024
++++01:03:09
+++ 
+++ action_base_hidden_size: 128
+++ action_base_output_size: 64
+++ action_proj_dim: 1
+++-action_random_sample: True
++++action_random_sample: False
+++ action_seg_loc: ./data/action_segs
+++ action_set_size: 50
+++ algo: ppo
+++@@ -14,6 +14,7 @@ analysis_angle: None
+++ analysis_emb: None
+++ anti_alias_blur: 0.0
+++ backup: None
++++best_run: 16449
+++ both_train_test: False
+++ bound_effect: False
+++ cat_kl_loss: None
+++@@ -38,7 +39,7 @@ create_play_len: 7
+++ create_play_run_steps: 3
+++ create_sec_goal_reward: 2.0
+++ create_target_reward: 1.0
+++-cuda: False
++++cuda: True
+++ cuda_deterministic: False
+++ debug_render: False
+++ decay_clipping: False
+++@@ -73,9 +74,10 @@ emb_viz_interval: 5
+++ encoder_dim: 64
+++ entropy_coef: 0.005
+++ env_name: CreateLevelPush-v0
++++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+++ eps: 1e-05
+++ eval_interval: 50
+++-eval_num_processes: None
++++eval_num_processes: 1
+++ eval_only: False
+++ eval_split: False
+++ eval_split_ratio: 0.5
+++@@ -109,7 +111,7 @@ kl_pen: None
+++ large_steps: 40
+++ latent_dim: 1
+++ load_all_data: False
+++-load_best_name: None
++++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
+++ load_dataset: True
+++ load_emb_logvar: True
+++ load_emb_model_file: None
+++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+++ max_grid_steps: 50
+++ max_std_width: 3.0
+++ mega_res_interval: 4
++++multitask: True
+++ n_clusters: 10
+++ n_distributions: 1
+++ n_hidden_option: 3
+++@@ -138,7 +141,7 @@ no_diag: True
+++ no_frame_stack: False
+++ no_initial_state: False
+++ no_overlap_env: False
+++-no_test_eval: False
++++no_test_eval: True
+++ no_var: False
+++ normalize_embs: False
+++ not_upto: True
+++@@ -146,7 +149,7 @@ num_distributions: 400
+++ num_env_steps: 60000000
+++ num_eval: 20
+++ num_mini_batch: 4
+++-num_processes: 1
++++num_processes: 4
+++ num_render: None
+++ num_steps: 384
+++ num_z: 1
+++@@ -193,7 +196,7 @@ render_result_figures: False
+++ render_text: False
+++ reparam: True
+++ result_dir: ./data/results
+++-resume: False
++++resume: True
+++ resume_emb_training: False
+++ reward_entropy_coef: 0.0
+++ rl_use_radam: False
+++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++index 00a83d9..5cdd351 100644
+++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++@@ -1 +1 @@
+++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+++\ No newline at end of file
++++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 16449 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v
++\ No newline at end of file
++diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
++index 953d419..edec780 100644
++--- a/new-actions-rl/rlf/main.py
+++++ b/new-actions-rl/rlf/main.py
++@@ -39,7 +39,7 @@ def get_num_updates(args):
++     return num_updates, lr_updates
++ 
++ 
++-def get_fine_tune_run(load_name, env_name):
+++def get_fine_tune_run(load_name, env_name, args):
++     from rlf.exp_mgr.eval import get_max_run
++     import wandb
++     import subprocess
++diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
++index d008c38..9b566fb 100755
++--- a/new-actions-rl/rlf/rl/envs.py
+++++ b/new-actions-rl/rlf/rl/envs.py
++@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
++ 
++     return _thunk
++ 
++-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
++ 
++ def make_vec_envs(env_name,
++                   seed,
++@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
++                   trans_fn,
++                   args,
++                   num_frame_stack=None,
++-                  set_eval=False,
++-                  env_names_input=None):
+++                  set_eval=False):
++ 
++     if args.multitask and not set_eval:
++         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
++@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
++                   set_eval=False,
++                   env_names_input=None):
++ 
+++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     envs = [
++         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
++-        for env_name in env_names
+++        for env_name in candidate_env_names
++     ]
++ 
++     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
++diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
++index 0d25c28..e45648c 100755
++--- a/new-actions-rl/rlf/rl/rl.py
+++++ b/new-actions-rl/rlf/rl/rl.py
++@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
++ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++           end_update, lr_updates, args, test_args, checkpointer):
++ 
+++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
++     if args.resume and start_update > 0:
++         start_update += 1
++ 
++@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++         log.start_interval_log()
++ 
++         if args.multitask:
++-            idx = np.random.randint(10000) % len(env_names)
+++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
++             envs = envs_bulk[idx]
++-            args.env_name = env_names[idx]
++-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+++            args.env_name = actual_env_names[idx]
+++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
++         else:
++             envs = envs_bulk
++ 
++@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++                 train_eval_envs = []
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs = None,
++                                train_eval_envs = None)
++@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
++             else:
++                 for i in range(len(envs_bulk)):
++                     eval_envs = envs_bulk[i]
++-                    args.env_name = env_names[i]
++-                    print(f"evaluating for env {env_names[i]}")
+++                    args.env_name = actual_env_names[i]
+++                    print(f"evaluating for env {actual_env_names[i]}")
++                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
++                                test_args, log, j, total_num_steps, test_eval_envs[i],
++                                train_eval_envs[i])
++347a0e6efbab5459e5d4db3b55c040154efa2886
++diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
++index 93c497a..479a608 100644
++--- a/new-actions-rl/arguments.py
+++++ b/new-actions-rl/arguments.py
++@@ -616,6 +616,7 @@ def get_args(arg_str=None):
++ 
++     #### Multitask specific
++     parser.add_argument('--multitask', action='store_true', default=False)
+++    parser.add_argument('--env-names', nargs='+', default=[])
++ 
++     #### Resume specific
++     parser.add_argument('--best-run', type=int, default=None)
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++index a55af28..e8cd4ed 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++@@ -1,11 +1,11 @@
++ Date and Time:
++-10/03/2024
++-16:36:27
+++17/04/2024
+++12:09:34
++ 
++ action_base_hidden_size: 128
++ action_base_output_size: 64
++ action_proj_dim: 1
++-action_random_sample: True
+++action_random_sample: False
++ action_seg_loc: ./data/action_segs
++ action_set_size: 50
++ algo: ppo
++@@ -14,6 +14,7 @@ analysis_angle: None
++ analysis_emb: None
++ anti_alias_blur: 0.0
++ backup: None
+++best_run: 22299
++ both_train_test: False
++ bound_effect: False
++ cat_kl_loss: None
++@@ -38,7 +39,7 @@ create_play_len: 7
++ create_play_run_steps: 3
++ create_sec_goal_reward: 2.0
++ create_target_reward: 1.0
++-cuda: False
+++cuda: True
++ cuda_deterministic: False
++ debug_render: False
++ decay_clipping: False
++@@ -73,9 +74,10 @@ emb_viz_interval: 5
++ encoder_dim: 64
++ entropy_coef: 0.005
++ env_name: CreateLevelPush-v0
+++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
++ eps: 1e-05
++ eval_interval: 50
++-eval_num_processes: None
+++eval_num_processes: 1
++ eval_only: False
++ eval_split: False
++ eval_split_ratio: 0.5
++@@ -109,7 +111,7 @@ kl_pen: None
++ large_steps: 40
++ latent_dim: 1
++ load_all_data: False
++-load_best_name: None
+++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
++ load_dataset: True
++ load_emb_logvar: True
++ load_emb_model_file: None
++@@ -126,6 +128,7 @@ max_grad_norm: 0.5
++ max_grid_steps: 50
++ max_std_width: 3.0
++ mega_res_interval: 4
+++multitask: True
++ n_clusters: 10
++ n_distributions: 1
++ n_hidden_option: 3
++@@ -138,7 +141,7 @@ no_diag: True
++ no_frame_stack: False
++ no_initial_state: False
++ no_overlap_env: False
++-no_test_eval: False
+++no_test_eval: True
++ no_var: False
++ normalize_embs: False
++ not_upto: True
++@@ -146,7 +149,7 @@ num_distributions: 400
++ num_env_steps: 60000000
++ num_eval: 20
++ num_mini_batch: 4
++-num_processes: 1
+++num_processes: 4
++ num_render: None
++ num_steps: 384
++ num_z: 1
++@@ -193,7 +196,7 @@ render_result_figures: False
++ render_text: False
++ reparam: True
++ result_dir: ./data/results
++-resume: False
+++resume: True
++ resume_emb_training: False
++ reward_entropy_coef: 0.0
++ rl_use_radam: False
++diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++index 00a83d9..c83c000 100644
++--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++@@ -1 +1 @@
++-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
++\ No newline at end of file
+++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 16449 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v
+\ No newline at end of file
+diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
+index 953d419..edec780 100644
+--- a/new-actions-rl/rlf/main.py
++++ b/new-actions-rl/rlf/main.py
+@@ -39,7 +39,7 @@ def get_num_updates(args):
+     return num_updates, lr_updates
+ 
+ 
+-def get_fine_tune_run(load_name, env_name):
++def get_fine_tune_run(load_name, env_name, args):
+     from rlf.exp_mgr.eval import get_max_run
+     import wandb
+     import subprocess
+diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
+index d008c38..9b566fb 100755
+--- a/new-actions-rl/rlf/rl/envs.py
++++ b/new-actions-rl/rlf/rl/envs.py
+@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
+ 
+     return _thunk
+ 
+-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
++env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
+ 
+ def make_vec_envs(env_name,
+                   seed,
+@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
+                   trans_fn,
+                   args,
+                   num_frame_stack=None,
+-                  set_eval=False,
+-                  env_names_input=None):
++                  set_eval=False):
+ 
+     if args.multitask and not set_eval:
+         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
+@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
+                   set_eval=False,
+                   env_names_input=None):
+ 
++    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     envs = [
+         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
+-        for env_name in env_names
++        for env_name in candidate_env_names
+     ]
+ 
+     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
+diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
+index 0d25c28..e45648c 100755
+--- a/new-actions-rl/rlf/rl/rl.py
++++ b/new-actions-rl/rlf/rl/rl.py
+@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
+ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+           end_update, lr_updates, args, test_args, checkpointer):
+ 
++    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
+     if args.resume and start_update > 0:
+         start_update += 1
+ 
+@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+         log.start_interval_log()
+ 
+         if args.multitask:
+-            idx = np.random.randint(10000) % len(env_names)
++            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
+             envs = envs_bulk[idx]
+-            args.env_name = env_names[idx]
+-            print(f"[multitask] updates {j} using {env_names[idx]} env")
++            args.env_name = actual_env_names[idx]
++            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
+         else:
+             envs = envs_bulk
+ 
+@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+                 train_eval_envs = []
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs = None,
+                                train_eval_envs = None)
+@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
+             else:
+                 for i in range(len(envs_bulk)):
+                     eval_envs = envs_bulk[i]
+-                    args.env_name = env_names[i]
+-                    print(f"evaluating for env {env_names[i]}")
++                    args.env_name = actual_env_names[i]
++                    print(f"evaluating for env {actual_env_names[i]}")
+                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
+                                test_args, log, j, total_num_steps, test_eval_envs[i],
+                                train_eval_envs[i])
+347a0e6efbab5459e5d4db3b55c040154efa2886
+diff --git a/new-actions-rl/arguments.py b/new-actions-rl/arguments.py
+index 93c497a..479a608 100644
+--- a/new-actions-rl/arguments.py
++++ b/new-actions-rl/arguments.py
+@@ -616,6 +616,7 @@ def get_args(arg_str=None):
+ 
+     #### Multitask specific
+     parser.add_argument('--multitask', action='store_true', default=False)
++    parser.add_argument('--env-names', nargs='+', default=[])
+ 
+     #### Resume specific
+     parser.add_argument('--best-run', type=int, default=None)
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+index a55af28..9018754 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/args.txt
+@@ -1,11 +1,11 @@
+ Date and Time:
+-10/03/2024
+-16:36:27
++17/04/2024
++19:25:55
+ 
+ action_base_hidden_size: 128
+ action_base_output_size: 64
+ action_proj_dim: 1
+-action_random_sample: True
++action_random_sample: False
+ action_seg_loc: ./data/action_segs
+ action_set_size: 50
+ algo: ppo
+@@ -14,6 +14,7 @@ analysis_angle: None
+ analysis_emb: None
+ anti_alias_blur: 0.0
+ backup: None
++best_run: 28099
+ both_train_test: False
+ bound_effect: False
+ cat_kl_loss: None
+@@ -38,7 +39,7 @@ create_play_len: 7
+ create_play_run_steps: 3
+ create_sec_goal_reward: 2.0
+ create_target_reward: 1.0
+-cuda: False
++cuda: True
+ cuda_deterministic: False
+ debug_render: False
+ decay_clipping: False
+@@ -73,9 +74,10 @@ emb_viz_interval: 5
+ encoder_dim: 64
+ entropy_coef: 0.005
+ env_name: CreateLevelPush-v0
++env_names: ['CreateLevelPush-v0', 'CreateLevelObstacle-v0', 'CreateLevelLadder-v0']
+ eps: 1e-05
+ eval_interval: 50
+-eval_num_processes: None
++eval_num_processes: 1
+ eval_only: False
+ eval_split: False
+ eval_split_ratio: 0.5
+@@ -109,7 +111,7 @@ kl_pen: None
+ large_steps: 40
+ latent_dim: 1
+ load_all_data: False
+-load_best_name: None
++load_best_name: CreateLevelPush-v0/415-Push-31-DC-main
+ load_dataset: True
+ load_emb_logvar: True
+ load_emb_model_file: None
+@@ -126,6 +128,7 @@ max_grad_norm: 0.5
+ max_grid_steps: 50
+ max_std_width: 3.0
+ mega_res_interval: 4
++multitask: True
+ n_clusters: 10
+ n_distributions: 1
+ n_hidden_option: 3
+@@ -138,7 +141,7 @@ no_diag: True
+ no_frame_stack: False
+ no_initial_state: False
+ no_overlap_env: False
+-no_test_eval: False
++no_test_eval: True
+ no_var: False
+ normalize_embs: False
+ not_upto: True
+@@ -146,7 +149,7 @@ num_distributions: 400
+ num_env_steps: 60000000
+ num_eval: 20
+ num_mini_batch: 4
+-num_processes: 1
++num_processes: 4
+ num_render: None
+ num_steps: 384
+ num_z: 1
+@@ -193,7 +196,7 @@ render_result_figures: False
+ render_text: False
+ reparam: True
+ result_dir: ./data/results
+-resume: False
++resume: True
+ resume_emb_training: False
+ reward_entropy_coef: 0.0
+ rl_use_radam: False
+diff --git a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+index 00a83d9..a2b5735 100644
+--- a/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
++++ b/new-actions-rl/data/logs/CreateLevelPush-v0/main/cmd.txt
+@@ -1 +1 @@
+-python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main
+\ No newline at end of file
++python3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix mainpython3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 5799 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 9349 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 12899 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v0/415-Push-31-DC-main --resume --best-run 16449 --env-names CreateLevelPush-v0 CreateLevelObstacle-v0 CreateLevelLadder-v0python3 main.py --env-name CreateLevelPush-v0 --prefix main --action-random-sample False --no-test-eval --multitask --load-best-name CreateLevelPush-v
\ No newline at end of file
diff --git a/new-actions-rl/rlf/main.py b/new-actions-rl/rlf/main.py
index 953d419..edec780 100644
--- a/new-actions-rl/rlf/main.py
+++ b/new-actions-rl/rlf/main.py
@@ -39,7 +39,7 @@ def get_num_updates(args):
     return num_updates, lr_updates
 
 
-def get_fine_tune_run(load_name, env_name):
+def get_fine_tune_run(load_name, env_name, args):
     from rlf.exp_mgr.eval import get_max_run
     import wandb
     import subprocess
diff --git a/new-actions-rl/rlf/rl/envs.py b/new-actions-rl/rlf/rl/envs.py
index d008c38..9b566fb 100755
--- a/new-actions-rl/rlf/rl/envs.py
+++ b/new-actions-rl/rlf/rl/envs.py
@@ -78,7 +78,7 @@ def make_env(env_id, seed, rank, log_dir, allow_early_resets, trans_fn,
 
     return _thunk
 
-env_names = ["CreateLevelPush-v0", "CreateLevelBuckets-v0"]
+env_names = ["CreateLevelPush-v0", "CreateLevelObstacle-v0", "CreateLevelLadder-v0"]
 
 def make_vec_envs(env_name,
                   seed,
@@ -90,8 +90,7 @@ def make_vec_envs(env_name,
                   trans_fn,
                   args,
                   num_frame_stack=None,
-                  set_eval=False,
-                  env_names_input=None):
+                  set_eval=False):
 
     if args.multitask and not set_eval:
         return make_vec_envs_for_multitask(env_names, seed, num_processes, gamma, log_dir, device, allow_early_resets, trans_fn, args, num_frame_stack, set_eval)
@@ -144,9 +143,10 @@ def make_vec_envs_for_multitask(env_names,
                   set_eval=False,
                   env_names_input=None):
 
+    candidate_env_names = args.env_names if len(args.env_names) > 1 else env_names
     envs = [
         [ make_env(env_name, seed, i, log_dir, allow_early_resets, trans_fn, set_eval) for i in range(num_processes)]
-        for env_name in env_names
+        for env_name in candidate_env_names
     ]
 
     print(f"make_env_multitask completed: {len(envs)} tasks {len(envs[0])} envs created")
diff --git a/new-actions-rl/rlf/rl/rl.py b/new-actions-rl/rlf/rl/rl.py
index 0d25c28..e45648c 100755
--- a/new-actions-rl/rlf/rl/rl.py
+++ b/new-actions-rl/rlf/rl/rl.py
@@ -16,6 +16,7 @@ from rlf.rl.envs import env_names
 def train(envs_bulk, rollouts, policy, updater, log, start_update,
           end_update, lr_updates, args, test_args, checkpointer):
 
+    actual_env_names = args.env_names if len(args.env_names) > 1 else env_names
     if args.resume and start_update > 0:
         start_update += 1
 
@@ -29,10 +30,10 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
         log.start_interval_log()
 
         if args.multitask:
-            idx = np.random.randint(10000) % len(env_names)
+            idx = np.random.randint(5000 * len(actual_env_names)) % len(actual_env_names)
             envs = envs_bulk[idx]
-            args.env_name = env_names[idx]
-            print(f"[multitask] updates {j} using {env_names[idx]} env")
+            args.env_name = actual_env_names[idx]
+            print(f"[multitask] updates {j} using {actual_env_names[idx]} env")
         else:
             envs = envs_bulk
 
@@ -119,8 +120,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
                 train_eval_envs = []
                 for i in range(len(envs_bulk)):
                     eval_envs = envs_bulk[i]
-                    args.env_name = env_names[i]
-                    print(f"evaluating for env {env_names[i]}")
+                    args.env_name = actual_env_names[i]
+                    print(f"evaluating for env {actual_env_names[i]}")
                     test_eval_env, train_eval_env = train_eval(eval_envs, policy, args,
                                test_args, log, j, total_num_steps, test_eval_envs = None,
                                train_eval_envs = None)
@@ -129,8 +130,8 @@ def train(envs_bulk, rollouts, policy, updater, log, start_update,
             else:
                 for i in range(len(envs_bulk)):
                     eval_envs = envs_bulk[i]
-                    args.env_name = env_names[i]
-                    print(f"evaluating for env {env_names[i]}")
+                    args.env_name = actual_env_names[i]
+                    print(f"evaluating for env {actual_env_names[i]}")
                     test_eval_envs[i], train_eval_envs[i] = train_eval(eval_envs, policy, args,
                                test_args, log, j, total_num_steps, test_eval_envs[i],
                                train_eval_envs[i])
